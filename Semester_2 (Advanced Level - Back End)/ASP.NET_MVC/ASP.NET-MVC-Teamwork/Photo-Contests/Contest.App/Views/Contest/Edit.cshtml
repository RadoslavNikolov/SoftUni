@using Contests.Models.Enums
@model Contests.App.Models.BindingModels.ContestBindingModel

@{
    ViewBag.Title = "Edit contest";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Contest", new {area = "", id = @Model.Id}, FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
        </div>
    </div>

    Html.RenderAction("GetAllCategories", "Contest", routeValues: new { area = "", selectedId = @Model.Category });

    <div class="form-group" id="reward-type">
        @Html.LabelFor(m => m.RewardType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <label> @Html.RadioButtonFor(m => m.RewardType, "SingleWinner", new { id = "single-winner", @checked = "checked", @class = "open-button" }) Single winner </label>
            <label> @Html.RadioButtonFor(m => m.RewardType, "TopNWinners", new { id = "multiple-winners", @class = "close-button" }) Many winners </label>
            <div id="participants-section" class="form-group hidden-element slide-toggle">
                <label for="participants-input">First N win:</label>
                <input type="number" name="winnersNumber" id="participants-input" class="form-control" min="2" max="10" />
            </div>
        </div>
    </div>
    <div class="form-group" id="voting-type">
        @Html.LabelFor(m => m.VotingType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
           
            @if (@Model.VotingType == VotingType.Open)
            {
                <label> @Html.RadioButtonFor(m => m.VotingType, "Open", new { id = "voting-open", @checked = "checked", @class = "open-button" }) Open </label>
                <label> @Html.RadioButtonFor(m => m.VotingType, "Closed", new { id = "voting-close", @class = "close-button" }) Closed </label>
                <div id="voters" class="hidden-element slide-toggle">
                    @*<select id='voters-select' multiple='multiple' name="voters[]"></select>*@
                    @{
                Html.RenderAction("GetUsersSelect", "Users", routeValues: new { area = "", selectedUsers = Model.Voters, idAttribute = "voters-select", nameAttribute = "voters" });
                    }
                </div>
            }
            else
            {
                <label> @Html.RadioButtonFor(m => m.VotingType, "Open", new { id = "voting-open", @class = "open-button" }) Open </label>
                <label> @Html.RadioButtonFor(m => m.VotingType, "Closed", new { id = "voting-close", @checked = "checked", @class = "close-button" }) Closed </label>
                <div id="voters" class="slide-toggle">
                    @*<select id='voters-select' multiple='multiple' name="voters[]"></select>*@
                    @{
                Html.RenderAction("GetUsersSelect", "Users", routeValues: new { area = "", selectedUsers = Model.Voters, idAttribute = "voters-select", nameAttribute = "voters" });
                    }
                </div>
            }
            
        </div>
    </div>
    <div class="form-group" id="participation-type">
        @Html.LabelFor(m => m.ParticipationType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">

            @if (@Model.ParticipationType == ParticipationType.Open)
            {
                <label> @Html.RadioButtonFor(m => m.ParticipationType, "Open", new { id = "voting-open", @checked = "checked", @class = "open-button" }) Open </label>
                <label> @Html.RadioButtonFor(m => m.ParticipationType, "Closed", new {id = "voting-close", @class = "close-button"}) Closed </label>
                <div id="participators" class="hidden-element slide-toggle">
                    @*<select id='participants-select' multiple='multiple' name="participants[]"></select>*@
                    @{
                        Html.RenderAction("GetUsersSelect", "Users", routeValues: new { area = "", selectedUsers = Model.Participants, idAttribute = "participants-select", nameAttribute = "participants" });
                    }
                </div>
            }
            else
            {
                <label> @Html.RadioButtonFor(m => m.ParticipationType, "Open", new { id = "voting-open", @class = "open-button" }) Open </label>
                <label> @Html.RadioButtonFor(m => m.ParticipationType, "Closed", new {id = "voting-close", @checked = "checked", @class = "close-button"}) Closed </label>               
                <div id="participators" class="slide-toggle">
                    @*<select id='participants-select' multiple='multiple' name="participants[]"></select>*@
                    @{
                        Html.RenderAction("GetUsersSelect", "Users", routeValues: new { area = "", selectedUsers = Model.Participants, idAttribute = "participants-select", nameAttribute = "participants" });
                    }
                </div>
            }     
        </div>
    </div>
    <div class="form-group" id="deadline-type">
        @Html.LabelFor(m => m.DeadlineType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <label> @Html.RadioButtonFor(m => m.DeadlineType, "ByTime", new { id = "deadline-by-time", @checked = "checked" }) By Time </label>
            <label> @Html.RadioButtonFor(m => m.DeadlineType, "ByParticipants", new { id = "deadline-by-participants" }) By Participants Number </label>
        </div>
    </div>
    <div class="form-group" id="deadline-section">
        <label for="endTime" id="deadline-time-label" class="col-md-2 control-label">End Date:</label>
        <div id="endTime" class="col-md-10 input-group date date-input">
            <input type="text" name="deadline" id="deadline-input" class="form-control"/>
            <span class="input-group-addon pull-left datepicker-icon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    if (@Model.WallpaperUrl != null)
    {
        <div class="media-top">
            <a href="#">
                <img src="@Model.WallpaperUrl" id="imgprw" class="media-object cover" width="250" alt="wallpaper image">
            </a>
        </div>
    }
    <div class="form-group">
        @Html.Label("Wallpaper", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="wallpaper" name="upload" onchange="imagepreview(this)" />
        </div>
    </div>
    <div class="form-group">

        @*<div class="btn-group btn-group-justified">
            <input type="submit" class="btn btn-primary" value="Edit" />
            @Html.ActionLink("Cancel", "Details", "Contest", routeValues: new { id = @Model.ContestId, area = "" }, htmlAttributes: new { @class = "btn btn-default" })
        </div>*@


        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary" value="Edit contest"/>
            @Html.ActionLink("Cancel", "Details", "Contest", routeValues: new { id = @Model.Id, area = "" }, htmlAttributes: new { @class = "btn btn-default" })
        </div>
    </div>
}
@Styles.Render("~/Content/multiselect")
@section scripts{
    @Scripts.Render("~/bundles/multiselect")
    <script type="text/javascript">

        $(document).ready(function () {
            $(document).on('click', '.close-button', function (e) {
                var parent = $(this).parent().parent();
                parent.find('.slide-toggle').show();
            });

            $(document).on('click', '.open-button', function (e) {
                var parent = $(this).parent().parent();
                parent.find('.slide-toggle').hide();
            });

            //function fillUsers() {
            //    $.ajax({
            //        type: "GET",
            //        url: "/Users/GetAllUsers"
            //    })
            //        .done(function (data) {
            //            $('#voters-select').html(data);
            //            multiselect('#voters-select');

            //            $('#participants-select').html(data);
            //            multiselect('#participants-select');
            //        });
            //};

            //fillUsers();

            multiselect('#voters-select');
            multiselect('#participants-select');
        });
    </script>
}
