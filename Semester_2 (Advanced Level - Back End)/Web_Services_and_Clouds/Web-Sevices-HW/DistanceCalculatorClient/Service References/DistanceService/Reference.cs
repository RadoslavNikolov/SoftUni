//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DistanceCalculatorClient.DistanceService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DistanceService.IDistanceService")]
    public interface IDistanceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDistanceService/CalcDistance", ReplyAction="http://tempuri.org/IDistanceService/CalcDistanceResponse")]
        double CalcDistance(float startPointX, float startPointY, float endPointX, float endPointY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDistanceService/CalcDistance", ReplyAction="http://tempuri.org/IDistanceService/CalcDistanceResponse")]
        System.Threading.Tasks.Task<double> CalcDistanceAsync(float startPointX, float startPointY, float endPointX, float endPointY);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDistanceServiceChannel : DistanceCalculatorClient.DistanceService.IDistanceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DistanceServiceClient : System.ServiceModel.ClientBase<DistanceCalculatorClient.DistanceService.IDistanceService>, DistanceCalculatorClient.DistanceService.IDistanceService {
        
        public DistanceServiceClient() {
        }
        
        public DistanceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DistanceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistanceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistanceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CalcDistance(float startPointX, float startPointY, float endPointX, float endPointY) {
            return base.Channel.CalcDistance(startPointX, startPointY, endPointX, endPointY);
        }
        
        public System.Threading.Tasks.Task<double> CalcDistanceAsync(float startPointX, float startPointY, float endPointX, float endPointY) {
            return base.Channel.CalcDistanceAsync(startPointX, startPointY, endPointX, endPointY);
        }
    }
}
