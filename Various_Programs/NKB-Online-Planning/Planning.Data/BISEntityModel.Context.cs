//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Planning.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BISEntities : DbContext
    {
        public BISEntities()
            : base("name=BISEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AHeartA> AHeartA { get; set; }
        public virtual DbSet<AlertInfo> AlertInfo { get; set; }
        public virtual DbSet<AmbList2005> AmbList2005 { get; set; }
        public virtual DbSet<AmbList2005Med> AmbList2005Med { get; set; }
        public virtual DbSet<Anestezia> Anestezia { get; set; }
        public virtual DbSet<Antro_pok> Antro_pok { get; set; }
        public virtual DbSet<Billing> Billing { get; set; }
        public virtual DbSet<BList> BList { get; set; }
        public virtual DbSet<BLOcenki> BLOcenki { get; set; }
        public virtual DbSet<blXmlSent> blXmlSent { get; set; }
        public virtual DbSet<Bolnica> Bolnica { get; set; }
        public virtual DbSet<BolnichnoLechenie> BolnichnoLechenie { get; set; }
        public virtual DbSet<BolnichnoLechenieDop> BolnichnoLechenieDop { get; set; }
        public virtual DbSet<Broiach> Broiach { get; set; }
        public virtual DbSet<Cena> Cena { get; set; }
        public virtual DbSet<CeniNZOKAmb> CeniNZOKAmb { get; set; }
        public virtual DbSet<Configuration> Configuration { get; set; }
        public virtual DbSet<Darjava_EC> Darjava_EC { get; set; }
        public virtual DbSet<DebugITAnalysis> DebugITAnalysis { get; set; }
        public virtual DbSet<DeinostNZOK> DeinostNZOK { get; set; }
        public virtual DbSet<Diag_KDKK> Diag_KDKK { get; set; }
        public virtual DbSet<DiagKlinPateka> DiagKlinPateka { get; set; }
        public virtual DbSet<DiagKlinProcedura> DiagKlinProcedura { get; set; }
        public virtual DbSet<Diagnoza> Diagnoza { get; set; }
        public virtual DbSet<DiagnozaSpec> DiagnozaSpec { get; set; }
        public virtual DbSet<DiagUslojnPridr> DiagUslojnPridr { get; set; }
        public virtual DbSet<Diet> Diet { get; set; }
        public virtual DbSet<DietContract> DietContract { get; set; }
        public virtual DbSet<DietDelivery> DietDelivery { get; set; }
        public virtual DbSet<DietInfo> DietInfo { get; set; }
        public virtual DbSet<DietOrder> DietOrder { get; set; }
        public virtual DbSet<DietOrderAccordance> DietOrderAccordance { get; set; }
        public virtual DbSet<DietUser> DietUser { get; set; }
        public virtual DbSet<DietWardPersistance> DietWardPersistance { get; set; }
        public virtual DbSet<DispDosie> DispDosie { get; set; }
        public virtual DbSet<DispGrupa> DispGrupa { get; set; }
        public virtual DbSet<DispIzsledvane> DispIzsledvane { get; set; }
        public virtual DbSet<DispProgDiag> DispProgDiag { get; set; }
        public virtual DbSet<DispProgIzsl> DispProgIzsl { get; set; }
        public virtual DbSet<DispPrograma> DispPrograma { get; set; }
        public virtual DbSet<DispProgSpec> DispProgSpec { get; set; }
        public virtual DbSet<DispProgZab> DispProgZab { get; set; }
        public virtual DbSet<DispZaboliavane> DispZaboliavane { get; set; }
        public virtual DbSet<DoctorCommission> DoctorCommission { get; set; }
        public virtual DbSet<DoctorCommissionProtocol> DoctorCommissionProtocol { get; set; }
        public virtual DbSet<DoctorHoliday> DoctorHoliday { get; set; }
        public virtual DbSet<DoctorsSchedule> DoctorsSchedule { get; set; }
        public virtual DbSet<DogovorNZOK> DogovorNZOK { get; set; }
        public virtual DbSet<DogovorPC> DogovorPC { get; set; }
        public virtual DbSet<Drug> Drug { get; set; }
        public virtual DbSet<DrugsMKB> DrugsMKB { get; set; }
        public virtual DbSet<dtproperties> dtproperties { get; set; }
        public virtual DbSet<EjNaznachenie> EjNaznachenie { get; set; }
        public virtual DbSet<Events> Events { get; set; }
        public virtual DbSet<EventTemplates> EventTemplates { get; set; }
        public virtual DbSet<ExternalFiles> ExternalFiles { get; set; }
        public virtual DbSet<ExternalFilesVid> ExternalFilesVid { get; set; }
        public virtual DbSet<FactNastroiki> FactNastroiki { get; set; }
        public virtual DbSet<FactPrava> FactPrava { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<FacturaUsl> FacturaUsl { get; set; }
        public virtual DbSet<Frequency> Frequency { get; set; }
        public virtual DbSet<FromLIS> FromLIS { get; set; }
        public virtual DbSet<FromPACS> FromPACS { get; set; }
        public virtual DbSet<GroupKlasMKB10> GroupKlasMKB10 { get; set; }
        public virtual DbSet<GroupKlasSeb> GroupKlasSeb { get; set; }
        public virtual DbSet<GroupMZ> GroupMZ { get; set; }
        public virtual DbSet<GroupMZ_0205> GroupMZ_0205 { get; set; }
        public virtual DbSet<GroupMZ_0305> GroupMZ_0305 { get; set; }
        public virtual DbSet<GroupMZ_1104> GroupMZ_1104 { get; set; }
        public virtual DbSet<Grupa> Grupa { get; set; }
        public virtual DbSet<hadis> hadis { get; set; }
        public virtual DbSet<Hemodializa> Hemodializa { get; set; }
        public virtual DbSet<HemodializaMed> HemodializaMed { get; set; }
        public virtual DbSet<HemodializaMedIzbran> HemodializaMedIzbran { get; set; }
        public virtual DbSet<hipExam> hipExam { get; set; }
        public virtual DbSet<ImpGroupMap> ImpGroupMap { get; set; }
        public virtual DbSet<ImpGroupMap_2015> ImpGroupMap_2015 { get; set; }
        public virtual DbSet<ImpKPDiag> ImpKPDiag { get; set; }
        public virtual DbSet<ImpKPDiag_2015> ImpKPDiag_2015 { get; set; }
        public virtual DbSet<Implantant> Implantant { get; set; }
        public virtual DbSet<ImplantantDop> ImplantantDop { get; set; }
        public virtual DbSet<ImplantantNZOK> ImplantantNZOK { get; set; }
        public virtual DbSet<ImplantantNZOK_2015> ImplantantNZOK_2015 { get; set; }
        public virtual DbSet<ImplantantNZOKDealer> ImplantantNZOKDealer { get; set; }
        public virtual DbSet<ImpOldNew> ImpOldNew { get; set; }
        public virtual DbSet<IntLechenie> IntLechenie { get; set; }
        public virtual DbSet<IzdNaprNZOK> IzdNaprNZOK { get; set; }
        public virtual DbSet<IzoliranMikroorganizamData> IzoliranMikroorganizamData { get; set; }
        public virtual DbSet<IzprLekar> IzprLekar { get; set; }
        public virtual DbSet<IzprLekarPS> IzprLekarPS { get; set; }
        public virtual DbSet<IzsDI> IzsDI { get; set; }
        public virtual DbSet<IzsDI_Res> IzsDI_Res { get; set; }
        public virtual DbSet<IzsEFI> IzsEFI { get; set; }
        public virtual DbSet<IzsFNI> IzsFNI { get; set; }
        public virtual DbSet<IzsIP> IzsIP { get; set; }
        public virtual DbSet<IzsIP_Res> IzsIP_Res { get; set; }
        public virtual DbSet<IzsLAB> IzsLAB { get; set; }
        public virtual DbSet<IzsLABINR> IzsLABINR { get; set; }
        public virtual DbSet<IzsLABINRDanni> IzsLABINRDanni { get; set; }
        public virtual DbSet<IzsLabPaket> IzsLabPaket { get; set; }
        public virtual DbSet<IzsProPaket> IzsProPaket { get; set; }
        public virtual DbSet<IzsROD> IzsROD { get; set; }
        public virtual DbSet<IzsVSI> IzsVSI { get; set; }
        public virtual DbSet<IzvunNKBKons> IzvunNKBKons { get; set; }
        public virtual DbSet<Kalkulacia> Kalkulacia { get; set; }
        public virtual DbSet<KlinicnaPateka> KlinicnaPateka { get; set; }
        public virtual DbSet<KlinicnaProcedura> KlinicnaProcedura { get; set; }
        public virtual DbSet<KlinPatekaCena> KlinPatekaCena { get; set; }
        public virtual DbSet<KlinPatImpl> KlinPatImpl { get; set; }
        public virtual DbSet<KlinPatImplCena> KlinPatImplCena { get; set; }
        public virtual DbSet<KlinProceduraCena> KlinProceduraCena { get; set; }
        public virtual DbSet<KlinProceduraDiagnosi> KlinProceduraDiagnosi { get; set; }
        public virtual DbSet<Komitet> Komitet { get; set; }
        public virtual DbSet<Konsultacia> Konsultacia { get; set; }
        public virtual DbSet<KpLechenie> KpLechenie { get; set; }
        public virtual DbSet<KpOtcheteni> KpOtcheteni { get; set; }
        public virtual DbSet<KpPeriod> KpPeriod { get; set; }
        public virtual DbSet<LeglovaBaza> LeglovaBaza { get; set; }
        public virtual DbSet<LimitiNZOK> LimitiNZOK { get; set; }
        public virtual DbSet<madis> madis { get; set; }
        public virtual DbSet<MartvoRodeni> MartvoRodeni { get; set; }
        public virtual DbSet<MedCentar> MedCentar { get; set; }
        public virtual DbSet<MedDiagDeinost> MedDiagDeinost { get; set; }
        public virtual DbSet<MedNzok> MedNzok { get; set; }
        public virtual DbSet<MedPaketDetail> MedPaketDetail { get; set; }
        public virtual DbSet<MedPaketMaster> MedPaketMaster { get; set; }
        public virtual DbSet<MedPricTerapia> MedPricTerapia { get; set; }
        public virtual DbSet<MedTerapia> MedTerapia { get; set; }
        public virtual DbSet<MikrobiologichnoIzsledvane> MikrobiologichnoIzsledvane { get; set; }
        public virtual DbSet<MikroskopskiPreparatData> MikroskopskiPreparatData { get; set; }
        public virtual DbSet<NaprNasNZOK> NaprNasNZOK { get; set; }
        public virtual DbSet<NOIProverka> NOIProverka { get; set; }
        public virtual DbSet<NOIProverkaOSV> NOIProverkaOSV { get; set; }
        public virtual DbSet<Nomenklatura> Nomenklatura { get; set; }
        public virtual DbSet<NovoRodeni> NovoRodeni { get; set; }
        public virtual DbSet<NZOKAmbGrafik> NZOKAmbGrafik { get; set; }
        public virtual DbSet<NZOKAmbNorm> NZOKAmbNorm { get; set; }
        public virtual DbSet<NZOKLimit> NZOKLimit { get; set; }
        public virtual DbSet<Obsajdane> Obsajdane { get; set; }
        public virtual DbSet<Ocenki> Ocenki { get; set; }
        public virtual DbSet<Operacia> Operacia { get; set; }
        public virtual DbSet<OperEKK> OperEKK { get; set; }
        public virtual DbSet<Order> Order { get; set; }
        public virtual DbSet<OrderData> OrderData { get; set; }
        public virtual DbSet<OrderEntry> OrderEntry { get; set; }
        public virtual DbSet<OrderNomMed> OrderNomMed { get; set; }
        public virtual DbSet<Pacient> Pacient { get; set; }
        public virtual DbSet<PACSACKLog> PACSACKLog { get; set; }
        public virtual DbSet<PACSModality> PACSModality { get; set; }
        public virtual DbSet<PantheonCodes> PantheonCodes { get; set; }
        public virtual DbSet<Pauza> Pauza { get; set; }
        public virtual DbSet<Personal> Personal { get; set; }
        public virtual DbSet<PersonalPC> PersonalPC { get; set; }
        public virtual DbSet<PersonalRS1> PersonalRS1 { get; set; }
        public virtual DbSet<PersonalRS2> PersonalRS2 { get; set; }
        public virtual DbSet<PersonalZveno> PersonalZveno { get; set; }
        public virtual DbSet<PlaniraneOper> PlaniraneOper { get; set; }
        public virtual DbSet<PlaniranePregled> PlaniranePregled { get; set; }
        public virtual DbSet<Pochinali> Pochinali { get; set; }
        public virtual DbSet<PochinaliTakDonori> PochinaliTakDonori { get; set; }
        public virtual DbSet<PoslednoID> PoslednoID { get; set; }
        public virtual DbSet<Praktika> Praktika { get; set; }
        public virtual DbSet<Pregled> Pregled { get; set; }
        public virtual DbSet<PregledDiagnoza> PregledDiagnoza { get; set; }
        public virtual DbSet<PregnancyRegister> PregnancyRegister { get; set; }
        public virtual DbSet<Prevejdane> Prevejdane { get; set; }
        public virtual DbSet<Pridrujitel> Pridrujitel { get; set; }
        public virtual DbSet<PrintedTabeli> PrintedTabeli { get; set; }
        public virtual DbSet<Proceduri> Proceduri { get; set; }
        public virtual DbSet<Proceduri_Vid> Proceduri_Vid { get; set; }
        public virtual DbSet<Razhod_Transfer> Razhod_Transfer { get; set; }
        public virtual DbSet<Razhod_Transfer_Zvena> Razhod_Transfer_Zvena { get; set; }
        public virtual DbSet<Razhodi> Razhodi { get; set; }
        public virtual DbSet<RazhodTip> RazhodTip { get; set; }
        public virtual DbSet<RazhodTipActivities> RazhodTipActivities { get; set; }
        public virtual DbSet<RazZveno> RazZveno { get; set; }
        public virtual DbSet<Recepta> Recepta { get; set; }
        public virtual DbSet<ReceptaMed> ReceptaMed { get; set; }
        public virtual DbSet<ReceptaMedSpisak> ReceptaMedSpisak { get; set; }
        public virtual DbSet<Report_10_2005> Report_10_2005 { get; set; }
        public virtual DbSet<Report_365_2> Report_365_2 { get; set; }
        public virtual DbSet<Report_365_2012_1> Report_365_2012_1 { get; set; }
        public virtual DbSet<Report_365_2012_2> Report_365_2012_2 { get; set; }
        public virtual DbSet<Report_365_2012_3> Report_365_2012_3 { get; set; }
        public virtual DbSet<Report_365_2012_4> Report_365_2012_4 { get; set; }
        public virtual DbSet<Report_365_2012_5> Report_365_2012_5 { get; set; }
        public virtual DbSet<Report_365_2012_6> Report_365_2012_6 { get; set; }
        public virtual DbSet<Report_365_2012_7> Report_365_2012_7 { get; set; }
        public virtual DbSet<Report_365_3> Report_365_3 { get; set; }
        public virtual DbSet<Report_365_5> Report_365_5 { get; set; }
        public virtual DbSet<Report_365_6> Report_365_6 { get; set; }
        public virtual DbSet<Report_365_6A> Report_365_6A { get; set; }
        public virtual DbSet<Report_365_7> Report_365_7 { get; set; }
        public virtual DbSet<Report_365_7_Old> Report_365_7_Old { get; set; }
        public virtual DbSet<Report_5_2008_1> Report_5_2008_1 { get; set; }
        public virtual DbSet<Report_5B_2005_1> Report_5B_2005_1 { get; set; }
        public virtual DbSet<Report_5B_2005_2> Report_5B_2005_2 { get; set; }
        public virtual DbSet<Report_5B_2006_1> Report_5B_2006_1 { get; set; }
        public virtual DbSet<Report_5B1_2005_1> Report_5B1_2005_1 { get; set; }
        public virtual DbSet<Report_5B1_2005_1_Old> Report_5B1_2005_1_Old { get; set; }
        public virtual DbSet<Report_5B1_2005_2> Report_5B1_2005_2 { get; set; }
        public virtual DbSet<Report_5B2_2005_1> Report_5B2_2005_1 { get; set; }
        public virtual DbSet<Report_5B2_2005_1_Old> Report_5B2_2005_1_Old { get; set; }
        public virtual DbSet<Report_5B2_2005_2> Report_5B2_2005_2 { get; set; }
        public virtual DbSet<Report_6_2008_1> Report_6_2008_1 { get; set; }
        public virtual DbSet<REPORT_6B> REPORT_6B { get; set; }
        public virtual DbSet<Report_F14> Report_F14 { get; set; }
        public virtual DbSet<Report_F30> Report_F30 { get; set; }
        public virtual DbSet<Report_God_3> Report_God_3 { get; set; }
        public virtual DbSet<REPORT_GOD_3_Old> REPORT_GOD_3_Old { get; set; }
        public virtual DbSet<REPORT_GOD_4_1> REPORT_GOD_4_1 { get; set; }
        public virtual DbSet<Report_God_FIS> Report_God_FIS { get; set; }
        public virtual DbSet<Report_God_FIS_Old> Report_God_FIS_Old { get; set; }
        public virtual DbSet<Report_God_FNI> Report_God_FNI { get; set; }
        public virtual DbSet<Report_God_Hemod> Report_God_Hemod { get; set; }
        public virtual DbSet<Report_God_Izs> Report_God_Izs { get; set; }
        public virtual DbSet<Report_God_Izs_Old> Report_God_Izs_Old { get; set; }
        public virtual DbSet<Report_God_LAB> Report_God_LAB { get; set; }
        public virtual DbSet<Report_God_ROD> Report_God_ROD { get; set; }
        public virtual DbSet<Report_KDKK1> Report_KDKK1 { get; set; }
        public virtual DbSet<Report_SO_2011> Report_SO_2011 { get; set; }
        public virtual DbSet<Report_YS> Report_YS { get; set; }
        public virtual DbSet<Report115> Report115 { get; set; }
        public virtual DbSet<Report370_P> Report370_P { get; set; }
        public virtual DbSet<ReportForm3Sp> ReportForm3Sp { get; set; }
        public virtual DbSet<Reports78> Reports78 { get; set; }
        public virtual DbSet<Route> Route { get; set; }
        public virtual DbSet<ScheduleTimeInterval> ScheduleTimeInterval { get; set; }
        public virtual DbSet<Sec_Groups> Sec_Groups { get; set; }
        public virtual DbSet<Sec_Log> Sec_Log { get; set; }
        public virtual DbSet<Sec_Log1> Sec_Log1 { get; set; }
        public virtual DbSet<Sec_Modules> Sec_Modules { get; set; }
        public virtual DbSet<Security> Security { get; set; }
        public virtual DbSet<Shablon1> Shablon1 { get; set; }
        public virtual DbSet<Shablon2> Shablon2 { get; set; }
        public virtual DbSet<sickleave_calibrate> sickleave_calibrate { get; set; }
        public virtual DbSet<Sluchai> Sluchai { get; set; }
        public virtual DbSet<SmetkaLechenie> SmetkaLechenie { get; set; }
        public virtual DbSet<SpecialnostPersonal> SpecialnostPersonal { get; set; }
        public virtual DbSet<SpeshenList> SpeshenList { get; set; }
        public virtual DbSet<SpeshenListDop> SpeshenListDop { get; set; }
        public virtual DbSet<Spravka> Spravka { get; set; }
        public virtual DbSet<SpravkaAjurGod> SpravkaAjurGod { get; set; }
        public virtual DbSet<SpravkaFav> SpravkaFav { get; set; }
        public virtual DbSet<Sreshti> Sreshti { get; set; }
        public virtual DbSet<SubZveno> SubZveno { get; set; }
        public virtual DbSet<TabelaMedi> TabelaMedi { get; set; }
        public virtual DbSet<TabelaMediIzp> TabelaMediIzp { get; set; }
        public virtual DbSet<TempletFile> TempletFile { get; set; }
        public virtual DbSet<tmpDealerNZOK> tmpDealerNZOK { get; set; }
        public virtual DbSet<tmpImplantantNZOK> tmpImplantantNZOK { get; set; }
        public virtual DbSet<tmpMedNzok> tmpMedNzok { get; set; }
        public virtual DbSet<toCypro> toCypro { get; set; }
        public virtual DbSet<ToLIS> ToLIS { get; set; }
        public virtual DbSet<ToPACS> ToPACS { get; set; }
        public virtual DbSet<ToSMOBZ> ToSMOBZ { get; set; }
        public virtual DbSet<TransferKDKK_1> TransferKDKK_1 { get; set; }
        public virtual DbSet<TransferKDKK_2> TransferKDKK_2 { get; set; }
        public virtual DbSet<TransferKDKK_3> TransferKDKK_3 { get; set; }
        public virtual DbSet<Trudozaguba> Trudozaguba { get; set; }
        public virtual DbSet<userDefaults> userDefaults { get; set; }
        public virtual DbSet<UserPointOfView> UserPointOfView { get; set; }
        public virtual DbSet<Usluga> Usluga { get; set; }
        public virtual DbSet<UslugaGrupa> UslugaGrupa { get; set; }
        public virtual DbSet<VidDogovorNZOK> VidDogovorNZOK { get; set; }
        public virtual DbSet<WeightedCalculationByEventAndUnit> WeightedCalculationByEventAndUnit { get; set; }
        public virtual DbSet<WS_Param> WS_Param { get; set; }
        public virtual DbSet<Zveno> Zveno { get; set; }
        public virtual DbSet<DomainToHisUsersMapping> DomainToHisUsersMapping { get; set; }
        public virtual DbSet<IzsMDI> IzsMDI { get; set; }
        public virtual DbSet<IzsVPI> IzsVPI { get; set; }
        public virtual DbSet<OSIOMD_EXTERNAL_ID> OSIOMD_EXTERNAL_ID { get; set; }
        public virtual DbSet<OSIOMD_IDS> OSIOMD_IDS { get; set; }
        public virtual DbSet<tmpDrugsMKB> tmpDrugsMKB { get; set; }
        public virtual DbSet<TraceLog> TraceLog { get; set; }
        public virtual DbSet<zNom> zNom { get; set; }
        public virtual DbSet<AUView> AUView { get; set; }
        public virtual DbSet<blxml> blxml { get; set; }
        public virtual DbSet<BLXMLTZ> BLXMLTZ { get; set; }
        public virtual DbSet<Darjavi> Darjavi { get; set; }
        public virtual DbSet<Foreigners> Foreigners { get; set; }
        public virtual DbSet<GetPermits> GetPermits { get; set; }
        public virtual DbSet<hadismadis> hadismadis { get; set; }
        public virtual DbSet<hadisPresentation> hadisPresentation { get; set; }
        public virtual DbSet<hadisStats> hadisStats { get; set; }
        public virtual DbSet<hadisStatsPerDate> hadisStatsPerDate { get; set; }
        public virtual DbSet<HadisToday> HadisToday { get; set; }
        public virtual DbSet<lkkCommissions> lkkCommissions { get; set; }
        public virtual DbSet<PacientiZaDenia> PacientiZaDenia { get; set; }
        public virtual DbSet<PacientiZaDeniaNew> PacientiZaDeniaNew { get; set; }
        public virtual DbSet<PacientiZaDeniaWithStatus> PacientiZaDeniaWithStatus { get; set; }
        public virtual DbSet<RegionSelect> RegionSelect { get; set; }
        public virtual DbSet<Report365_2> Report365_2 { get; set; }
        public virtual DbSet<Report365_3> Report365_3 { get; set; }
        public virtual DbSet<RstSec_Log1> RstSec_Log1 { get; set; }
        public virtual DbSet<SelectedBLfieldsForDRG> SelectedBLfieldsForDRG { get; set; }
        public virtual DbSet<sys_rowcount> sys_rowcount { get; set; }
        public virtual DbSet<vCentur> vCentur { get; set; }
        public virtual DbSet<vCentur0> vCentur0 { get; set; }
        public virtual DbSet<vCenturNew> vCenturNew { get; set; }
        public virtual DbSet<vFacCentur> vFacCentur { get; set; }
        public virtual DbSet<view_APr_CommissionXML> view_APr_CommissionXML { get; set; }
        public virtual DbSet<View_KF_Proceduri> View_KF_Proceduri { get; set; }
        public virtual DbSet<View_KF_ProceduriNew> View_KF_ProceduriNew { get; set; }
        public virtual DbSet<View_KF_ProceduriSort> View_KF_ProceduriSort { get; set; }
        public virtual DbSet<View_Limit> View_Limit { get; set; }
        public virtual DbSet<view0> view0 { get; set; }
        public virtual DbSet<View2> View2 { get; set; }
        public virtual DbSet<View3> View3 { get; set; }
        public virtual DbSet<View4> View4 { get; set; }
        public virtual DbSet<View8> View8 { get; set; }
        public virtual DbSet<viewBlDopEpikriza> viewBlDopEpikriza { get; set; }
        public virtual DbSet<viewBlEpikriza> viewBlEpikriza { get; set; }
        public virtual DbSet<viewBlNumber> viewBlNumber { get; set; }
        public virtual DbSet<ViewCountIntenzivni> ViewCountIntenzivni { get; set; }
        public virtual DbSet<ViewCountPochinaliDo24h> ViewCountPochinaliDo24h { get; set; }
        public virtual DbSet<ViewDiagProc> ViewDiagProc { get; set; }
        public virtual DbSet<viewEpikriza> viewEpikriza { get; set; }
        public virtual DbSet<ViewGetAllOper> ViewGetAllOper { get; set; }
        public virtual DbSet<ViewGettAllProc> ViewGettAllProc { get; set; }
        public virtual DbSet<viewhadis> viewhadis { get; set; }
        public virtual DbSet<viewHadisRegistrars> viewHadisRegistrars { get; set; }
        public virtual DbSet<ViewHavingDispPacID> ViewHavingDispPacID { get; set; }
        public virtual DbSet<ViewHavingPacID> ViewHavingPacID { get; set; }
        public virtual DbSet<ViewHavingPacIDEC> ViewHavingPacIDEC { get; set; }
        public virtual DbSet<viewImplantKliPat> viewImplantKliPat { get; set; }
        public virtual DbSet<viewImpStoinost> viewImpStoinost { get; set; }
        public virtual DbSet<ViewIntPrev> ViewIntPrev { get; set; }
        public virtual DbSet<viewLatestNZOKPrice> viewLatestNZOKPrice { get; set; }
        public virtual DbSet<ViewLechebniZavedenia> ViewLechebniZavedenia { get; set; }
        public virtual DbSet<ViewLechZavIdentification> ViewLechZavIdentification { get; set; }
        public virtual DbSet<viewLkk> viewLkk { get; set; }
        public virtual DbSet<ViewLZIdentificationNew> ViewLZIdentificationNew { get; set; }
        public virtual DbSet<ViewLZNew> ViewLZNew { get; set; }
        public virtual DbSet<viewMDD> viewMDD { get; set; }
        public virtual DbSet<viewNomCnt> viewNomCnt { get; set; }
        public virtual DbSet<ViewOperacii> ViewOperacii { get; set; }
        public virtual DbSet<viewPersonalNames> viewPersonalNames { get; set; }
        public virtual DbSet<ViewPK011> ViewPK011 { get; set; }
        public virtual DbSet<viewPrestoi> viewPrestoi { get; set; }
        public virtual DbSet<ViewPrestoiIntenzivni> ViewPrestoiIntenzivni { get; set; }
        public virtual DbSet<ViewPrestoiPoZvena> ViewPrestoiPoZvena { get; set; }
        public virtual DbSet<ViewPrestoiPoZvenaNew> ViewPrestoiPoZvenaNew { get; set; }
        public virtual DbSet<ViewPrevejdaneInt> ViewPrevejdaneInt { get; set; }
        public virtual DbSet<ViewPrevejdanePoZvena> ViewPrevejdanePoZvena { get; set; }
        public virtual DbSet<ViewPrevF30> ViewPrevF30 { get; set; }
        public virtual DbSet<viewToCypro> viewToCypro { get; set; }
        public virtual DbSet<viewToLis> viewToLis { get; set; }
        public virtual DbSet<viewtrace> viewtrace { get; set; }
        public virtual DbSet<VIEWXLS> VIEWXLS { get; set; }
        public virtual DbSet<vKonsStatistika> vKonsStatistika { get; set; }
        public virtual DbSet<vKPProc> vKPProc { get; set; }
        public virtual DbSet<vNNLab> vNNLab { get; set; }
        public virtual DbSet<vNNRod> vNNRod { get; set; }
        public virtual DbSet<vPregledHosp> vPregledHosp { get; set; }
        public virtual DbSet<vPrevDoData> vPrevDoData { get; set; }
        public virtual DbSet<vPrevejdane> vPrevejdane { get; set; }
        public virtual DbSet<vPrevejdaneNew> vPrevejdaneNew { get; set; }
        public virtual DbSet<vPrevejdaneOld> vPrevejdaneOld { get; set; }
        public virtual DbSet<vPrevejdanePlan> vPrevejdanePlan { get; set; }
        public virtual DbSet<vrpRegJournal> vrpRegJournal { get; set; }
        public virtual DbSet<vUslojIOcenki> vUslojIOcenki { get; set; }
        public virtual DbSet<vw_TransferKR> vw_TransferKR { get; set; }
        public virtual DbSet<vw_TransferZvena> vw_TransferZvena { get; set; }
        public virtual DbSet<xc001helper> xc001helper { get; set; }
        public virtual DbSet<xmlPatient> xmlPatient { get; set; }
    
        [DbFunction("BISEntities", "AktualniUslugi")]
        public virtual IQueryable<AktualniUslugi_Result> AktualniUslugi(string nZOK_usluga_kod, string nKB_usluga_kod)
        {
            var nZOK_usluga_kodParameter = nZOK_usluga_kod != null ?
                new ObjectParameter("NZOK_usluga_kod", nZOK_usluga_kod) :
                new ObjectParameter("NZOK_usluga_kod", typeof(string));
    
            var nKB_usluga_kodParameter = nKB_usluga_kod != null ?
                new ObjectParameter("NKB_usluga_kod", nKB_usluga_kod) :
                new ObjectParameter("NKB_usluga_kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AktualniUslugi_Result>("[BISEntities].[AktualniUslugi](@NZOK_usluga_kod, @NKB_usluga_kod)", nZOK_usluga_kodParameter, nKB_usluga_kodParameter);
        }
    
        [DbFunction("BISEntities", "AktualniUslugiCenorazpis")]
        public virtual IQueryable<AktualniUslugiCenorazpis_Result> AktualniUslugiCenorazpis(string nKB_usluga_kod)
        {
            var nKB_usluga_kodParameter = nKB_usluga_kod != null ?
                new ObjectParameter("NKB_usluga_kod", nKB_usluga_kod) :
                new ObjectParameter("NKB_usluga_kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AktualniUslugiCenorazpis_Result>("[BISEntities].[AktualniUslugiCenorazpis](@NKB_usluga_kod)", nKB_usluga_kodParameter);
        }
    
        [DbFunction("BISEntities", "AktualniUslugiCenorazpisFull")]
        public virtual IQueryable<AktualniUslugiCenorazpisFull_Result> AktualniUslugiCenorazpisFull()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AktualniUslugiCenorazpisFull_Result>("[BISEntities].[AktualniUslugiCenorazpisFull]()");
        }
    
        [DbFunction("BISEntities", "AktualniUslugiKP6")]
        public virtual IQueryable<AktualniUslugiKP6_Result> AktualniUslugiKP6(string nZOK_usluga_kod)
        {
            var nZOK_usluga_kodParameter = nZOK_usluga_kod != null ?
                new ObjectParameter("NZOK_usluga_kod", nZOK_usluga_kod) :
                new ObjectParameter("NZOK_usluga_kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AktualniUslugiKP6_Result>("[BISEntities].[AktualniUslugiKP6](@NZOK_usluga_kod)", nZOK_usluga_kodParameter);
        }
    
        [DbFunction("BISEntities", "AktualniUslugiMDD")]
        public virtual IQueryable<AktualniUslugiMDD_Result> AktualniUslugiMDD(Nullable<System.DateTime> datata, Nullable<int> medCentar)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var medCentarParameter = medCentar.HasValue ?
                new ObjectParameter("MedCentar", medCentar) :
                new ObjectParameter("MedCentar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AktualniUslugiMDD_Result>("[BISEntities].[AktualniUslugiMDD](@Datata, @MedCentar)", datataParameter, medCentarParameter);
        }
    
        [DbFunction("BISEntities", "AktUslugiLab")]
        public virtual IQueryable<AktUslugiLab_Result> AktUslugiLab(string nZOK_usluga_kod, string nKB_usluga_kod, Nullable<System.DateTime> dataIzs)
        {
            var nZOK_usluga_kodParameter = nZOK_usluga_kod != null ?
                new ObjectParameter("NZOK_usluga_kod", nZOK_usluga_kod) :
                new ObjectParameter("NZOK_usluga_kod", typeof(string));
    
            var nKB_usluga_kodParameter = nKB_usluga_kod != null ?
                new ObjectParameter("NKB_usluga_kod", nKB_usluga_kod) :
                new ObjectParameter("NKB_usluga_kod", typeof(string));
    
            var dataIzsParameter = dataIzs.HasValue ?
                new ObjectParameter("DataIzs", dataIzs) :
                new ObjectParameter("DataIzs", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AktUslugiLab_Result>("[BISEntities].[AktUslugiLab](@NZOK_usluga_kod, @NKB_usluga_kod, @DataIzs)", nZOK_usluga_kodParameter, nKB_usluga_kodParameter, dataIzsParameter);
        }
    
        [DbFunction("BISEntities", "AmbListZaPeriod")]
        public virtual IQueryable<AmbListZaPeriod_Result> AmbListZaPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur, Nullable<int> lekar1, Nullable<int> lekar2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            var lekar1Parameter = lekar1.HasValue ?
                new ObjectParameter("Lekar1", lekar1) :
                new ObjectParameter("Lekar1", typeof(int));
    
            var lekar2Parameter = lekar2.HasValue ?
                new ObjectParameter("Lekar2", lekar2) :
                new ObjectParameter("Lekar2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AmbListZaPeriod_Result>("[BISEntities].[AmbListZaPeriod](@otData, @doData, @medCentur, @Lekar1, @Lekar2)", otDataParameter, doDataParameter, medCenturParameter, lekar1Parameter, lekar2Parameter);
        }
    
        [DbFunction("BISEntities", "badInrs")]
        public virtual IQueryable<badInrs_Result> badInrs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<badInrs_Result>("[BISEntities].[badInrs]()");
        }
    
        [DbFunction("BISEntities", "BLDiagPeriod")]
        public virtual IQueryable<BLDiagPeriod_Result> BLDiagPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BLDiagPeriod_Result>("[BISEntities].[BLDiagPeriod](@otData, @doData)", otDataParameter, doDataParameter);
        }
    
        [DbFunction("BISEntities", "BLHronologia")]
        public virtual IQueryable<BLHronologia_Result> BLHronologia(Nullable<int> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BLHronologia_Result>("[BISEntities].[BLHronologia](@BolID)", bolIDParameter);
        }
    
        [DbFunction("BISEntities", "BLPersonalPeriod")]
        public virtual IQueryable<BLPersonalPeriod_Result> BLPersonalPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BLPersonalPeriod_Result>("[BISEntities].[BLPersonalPeriod](@otData, @doData)", otDataParameter, doDataParameter);
        }
    
        [DbFunction("BISEntities", "BLProcs")]
        public virtual IQueryable<BLProcs_Result> BLProcs(Nullable<int> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BLProcs_Result>("[BISEntities].[BLProcs](@BolID)", bolIDParameter);
        }
    
        [DbFunction("BISEntities", "BLRaioniPeriod")]
        public virtual IQueryable<BLRaioniPeriod_Result> BLRaioniPeriod(string otData, string doData)
        {
            var otDataParameter = otData != null ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(string));
    
            var doDataParameter = doData != null ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BLRaioniPeriod_Result>("[BISEntities].[BLRaioniPeriod](@otData, @doData)", otDataParameter, doDataParameter);
        }
    
        [DbFunction("BISEntities", "BoLechZaPeriod")]
        public virtual IQueryable<BoLechZaPeriod_Result> BoLechZaPeriod(string otData, string doData)
        {
            var otDataParameter = otData != null ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(string));
    
            var doDataParameter = doData != null ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BoLechZaPeriod_Result>("[BISEntities].[BoLechZaPeriod](@otData, @doData)", otDataParameter, doDataParameter);
        }
    
        [DbFunction("BISEntities", "BolPacientRazhod")]
        public virtual IQueryable<BolPacientRazhod_Result> BolPacientRazhod(string bL_IzNo, Nullable<System.DateTime> date_Izpis)
        {
            var bL_IzNoParameter = bL_IzNo != null ?
                new ObjectParameter("BL_IzNo", bL_IzNo) :
                new ObjectParameter("BL_IzNo", typeof(string));
    
            var date_IzpisParameter = date_Izpis.HasValue ?
                new ObjectParameter("Date_Izpis", date_Izpis) :
                new ObjectParameter("Date_Izpis", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BolPacientRazhod_Result>("[BISEntities].[BolPacientRazhod](@BL_IzNo, @Date_Izpis)", bL_IzNoParameter, date_IzpisParameter);
        }
    
        [DbFunction("BISEntities", "ChastOtNomenklatura")]
        public virtual IQueryable<ChastOtNomenklatura_Result> ChastOtNomenklatura()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChastOtNomenklatura_Result>("[BISEntities].[ChastOtNomenklatura]()");
        }
    
        [DbFunction("BISEntities", "CSVToTable")]
        public virtual IQueryable<CSVToTable_Result> CSVToTable(string inStr)
        {
            var inStrParameter = inStr != null ?
                new ObjectParameter("InStr", inStr) :
                new ObjectParameter("InStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CSVToTable_Result>("[BISEntities].[CSVToTable](@InStr)", inStrParameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenie")]
        public virtual IQueryable<EjSutSvedenie_Result> EjSutSvedenie(string datata, string datata00)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenie_Result>("[BISEntities].[EjSutSvedenie](@datata, @datata00)", datataParameter, datata00Parameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenieDII")]
        public virtual IQueryable<EjSutSvedenieDII_Result> EjSutSvedenieDII(string datata, string datata00)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenieDII_Result>("[BISEntities].[EjSutSvedenieDII](@datata, @datata00)", datataParameter, datata00Parameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenieDIINew")]
        public virtual IQueryable<EjSutSvedenieDIINew_Result> EjSutSvedenieDIINew(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenieDIINew_Result>("[BISEntities].[EjSutSvedenieDIINew](@datata, @datata00, @DataOtchet)", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenieEFI")]
        public virtual IQueryable<EjSutSvedenieEFI_Result> EjSutSvedenieEFI(string datata, string datata00)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenieEFI_Result>("[BISEntities].[EjSutSvedenieEFI](@datata, @datata00)", datataParameter, datata00Parameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenieEFINew")]
        public virtual IQueryable<EjSutSvedenieEFINew_Result> EjSutSvedenieEFINew(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenieEFINew_Result>("[BISEntities].[EjSutSvedenieEFINew](@datata, @datata00, @DataOtchet)", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenieIP")]
        public virtual IQueryable<EjSutSvedenieIP_Result> EjSutSvedenieIP(string datata, string datata00)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenieIP_Result>("[BISEntities].[EjSutSvedenieIP](@datata, @datata00)", datataParameter, datata00Parameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenieIPNew")]
        public virtual IQueryable<EjSutSvedenieIPNew_Result> EjSutSvedenieIPNew(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenieIPNew_Result>("[BISEntities].[EjSutSvedenieIPNew](@datata, @datata00, @DataOtchet)", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        [DbFunction("BISEntities", "EjSutSvedenieNew")]
        public virtual IQueryable<EjSutSvedenieNew_Result> EjSutSvedenieNew(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EjSutSvedenieNew_Result>("[BISEntities].[EjSutSvedenieNew](@datata, @datata00, @DataOtchet)", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        [DbFunction("BISEntities", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string text, string delimiter)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[BISEntities].[fn_Split](@text, @delimiter)", textParameter, delimiterParameter);
        }
    
        [DbFunction("BISEntities", "Formular15a")]
        public virtual IQueryable<Formular15a_Result> Formular15a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Formular15a_Result>("[BISEntities].[Formular15a](@OtData, @DoData, @LZ)", otDataParameter, doDataParameter, lZParameter);
        }
    
        [DbFunction("BISEntities", "GetBLListDefaultAmb")]
        public virtual IQueryable<GetBLListDefaultAmb_Result> GetBLListDefaultAmb(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBLListDefaultAmb_Result>("[BISEntities].[GetBLListDefaultAmb](@id)", idParameter);
        }
    
        [DbFunction("BISEntities", "GetBLListDefaultHosp")]
        public virtual IQueryable<GetBLListDefaultHosp_Result> GetBLListDefaultHosp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBLListDefaultHosp_Result>("[BISEntities].[GetBLListDefaultHosp](@id)", idParameter);
        }
    
        [DbFunction("BISEntities", "GetBLListDefaultKpr")]
        public virtual IQueryable<GetBLListDefaultKpr_Result> GetBLListDefaultKpr(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBLListDefaultKpr_Result>("[BISEntities].[GetBLListDefaultKpr](@id)", idParameter);
        }
    
        [DbFunction("BISEntities", "GetBLListDefaultPreg")]
        public virtual IQueryable<GetBLListDefaultPreg_Result> GetBLListDefaultPreg(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBLListDefaultPreg_Result>("[BISEntities].[GetBLListDefaultPreg](@id)", idParameter);
        }
    
        [DbFunction("BISEntities", "GetDvijenie")]
        public virtual IQueryable<GetDvijenie_Result> GetDvijenie()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvijenie_Result>("[BISEntities].[GetDvijenie]()");
        }
    
        [DbFunction("BISEntities", "GetDvijenieCalc")]
        public virtual IQueryable<GetDvijenieCalc_Result> GetDvijenieCalc(Nullable<System.DateTime> data)
        {
            var dataParameter = data.HasValue ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvijenieCalc_Result>("[BISEntities].[GetDvijenieCalc](@Data)", dataParameter);
        }
    
        [DbFunction("BISEntities", "GetDvijenieNew")]
        public virtual IQueryable<GetDvijenieNew_Result> GetDvijenieNew(Nullable<int> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvijenieNew_Result>("[BISEntities].[GetDvijenieNew](@BolID)", bolIDParameter);
        }
    
        [DbFunction("BISEntities", "GetDvijeniePacient")]
        public virtual IQueryable<GetDvijeniePacient_Result> GetDvijeniePacient(Nullable<int> pacID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvijeniePacient_Result>("[BISEntities].[GetDvijeniePacient](@PacID)", pacIDParameter);
        }
    
        [DbFunction("BISEntities", "GetDvijeniePlan")]
        public virtual IQueryable<GetDvijeniePlan_Result> GetDvijeniePlan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvijeniePlan_Result>("[BISEntities].[GetDvijeniePlan]()");
        }
    
        [DbFunction("BISEntities", "GetDvijenieZveno")]
        public virtual IQueryable<GetDvijenieZveno_Result> GetDvijenieZveno()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvijenieZveno_Result>("[BISEntities].[GetDvijenieZveno]()");
        }
    
        [DbFunction("BISEntities", "GetDvijenieZvenoZaPeriod")]
        public virtual IQueryable<GetDvijenieZvenoZaPeriod_Result> GetDvijenieZvenoZaPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<bool> isNzok, Nullable<bool> excludeBudget)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var isNzokParameter = isNzok.HasValue ?
                new ObjectParameter("IsNzok", isNzok) :
                new ObjectParameter("IsNzok", typeof(bool));
    
            var excludeBudgetParameter = excludeBudget.HasValue ?
                new ObjectParameter("ExcludeBudget", excludeBudget) :
                new ObjectParameter("ExcludeBudget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvijenieZvenoZaPeriod_Result>("[BISEntities].[GetDvijenieZvenoZaPeriod](@OtData, @DoData, @IsNzok, @ExcludeBudget)", otDataParameter, doDataParameter, isNzokParameter, excludeBudgetParameter);
        }
    
        [DbFunction("BISEntities", "GetDvZvenoPeriod")]
        public virtual IQueryable<GetDvZvenoPeriod_Result> GetDvZvenoPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDvZvenoPeriod_Result>("[BISEntities].[GetDvZvenoPeriod](@OtData, @DoData)", otDataParameter, doDataParameter);
        }
    
        [DbFunction("BISEntities", "GetLastBL")]
        public virtual IQueryable<GetLastBL_Result> GetLastBL(Nullable<int> pacID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetLastBL_Result>("[BISEntities].[GetLastBL](@PacID)", pacIDParameter);
        }
    
        [DbFunction("BISEntities", "GetNZOKLimitForTimePeriod")]
        public virtual IQueryable<GetNZOKLimitForTimePeriod_Result> GetNZOKLimitForTimePeriod(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetNZOKLimitForTimePeriod_Result>("[BISEntities].[GetNZOKLimitForTimePeriod](@Date)", dateParameter);
        }
    
        [DbFunction("BISEntities", "GrafikKabinet")]
        public virtual IQueryable<GrafikKabinet_Result> GrafikKabinet(Nullable<System.DateTime> planDate, Nullable<int> zvenoID)
        {
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            var zvenoIDParameter = zvenoID.HasValue ?
                new ObjectParameter("ZvenoID", zvenoID) :
                new ObjectParameter("ZvenoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GrafikKabinet_Result>("[BISEntities].[GrafikKabinet](@PlanDate, @ZvenoID)", planDateParameter, zvenoIDParameter);
        }
    
        [DbFunction("BISEntities", "GrafikKabinet1")]
        public virtual IQueryable<GrafikKabinet1_Result> GrafikKabinet1(Nullable<int> zvenoID, Nullable<System.DateTime> planDate)
        {
            var zvenoIDParameter = zvenoID.HasValue ?
                new ObjectParameter("ZvenoID", zvenoID) :
                new ObjectParameter("ZvenoID", typeof(int));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GrafikKabinet1_Result>("[BISEntities].[GrafikKabinet1](@ZvenoID, @PlanDate)", zvenoIDParameter, planDateParameter);
        }
    
        [DbFunction("BISEntities", "HavingPacID")]
        public virtual IQueryable<HavingPacID_Result> HavingPacID(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HavingPacID_Result>("[BISEntities].[HavingPacID](@OtData, @DoData, @LZ)", otDataParameter, doDataParameter, lZParameter);
        }
    
        [DbFunction("BISEntities", "HavingPacIDEC")]
        public virtual IQueryable<HavingPacIDEC_Result> HavingPacIDEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HavingPacIDEC_Result>("[BISEntities].[HavingPacIDEC](@OtData, @DoData, @LZ)", otDataParameter, doDataParameter, lZParameter);
        }
    
        [DbFunction("BISEntities", "HospitalMestoF")]
        public virtual IQueryable<HospitalMestoF_Result> HospitalMestoF(Nullable<System.DateTime> datata)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HospitalMestoF_Result>("[BISEntities].[HospitalMestoF](@datata)", datataParameter);
        }
    
        [DbFunction("BISEntities", "HospitalMestoID")]
        public virtual IQueryable<HospitalMestoID_Result> HospitalMestoID(Nullable<System.DateTime> datata)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HospitalMestoID_Result>("[BISEntities].[HospitalMestoID](@datata)", datataParameter);
        }
    
        [DbFunction("BISEntities", "HospitalMestoX")]
        public virtual IQueryable<HospitalMestoX_Result> HospitalMestoX(Nullable<System.DateTime> datata, Nullable<int> bolId)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(System.DateTime));
    
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("bolId", bolId) :
                new ObjectParameter("bolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HospitalMestoX_Result>("[BISEntities].[HospitalMestoX](@datata, @bolId)", datataParameter, bolIdParameter);
        }
    
        [DbFunction("BISEntities", "HospitalMestoZ")]
        public virtual IQueryable<HospitalMestoZ_Result> HospitalMestoZ(string datata)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HospitalMestoZ_Result>("[BISEntities].[HospitalMestoZ](@datata)", datataParameter);
        }
    
        [DbFunction("BISEntities", "HronologiaDiagnozi")]
        public virtual IQueryable<HronologiaDiagnozi_Result> HronologiaDiagnozi(Nullable<int> pacID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HronologiaDiagnozi_Result>("[BISEntities].[HronologiaDiagnozi](@PacID)", pacIDParameter);
        }
    
        [DbFunction("BISEntities", "HronologiaPulna")]
        public virtual IQueryable<HronologiaPulna_Result> HronologiaPulna(Nullable<int> pacID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HronologiaPulna_Result>("[BISEntities].[HronologiaPulna](@PacID)", pacIDParameter);
        }
    
        [DbFunction("BISEntities", "HronologiaTip")]
        public virtual IQueryable<HronologiaTip_Result> HronologiaTip(Nullable<int> pacID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HronologiaTip_Result>("[BISEntities].[HronologiaTip](@PacID)", pacIDParameter);
        }
    
        [DbFunction("BISEntities", "KPProceduriSData")]
        public virtual IQueryable<KPProceduriSData_Result> KPProceduriSData(Nullable<int> kPID, Nullable<int> bolID)
        {
            var kPIDParameter = kPID.HasValue ?
                new ObjectParameter("KPID", kPID) :
                new ObjectParameter("KPID", typeof(int));
    
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<KPProceduriSData_Result>("[BISEntities].[KPProceduriSData](@KPID, @BolID)", kPIDParameter, bolIDParameter);
        }
    
        [DbFunction("BISEntities", "KPProcList")]
        public virtual IQueryable<KPProcList_Result> KPProcList(Nullable<int> bolID, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<KPProcList_Result>("[BISEntities].[KPProcList](@BolID, @BlKP)", bolIDParameter, blKPParameter);
        }
    
        [DbFunction("BISEntities", "LastPatientType")]
        public virtual IQueryable<LastPatientType_Result> LastPatientType(Nullable<int> pacID, Nullable<System.DateTime> dt)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LastPatientType_Result>("[BISEntities].[LastPatientType](@PacID, @dt)", pacIDParameter, dtParameter);
        }
    
        [DbFunction("BISEntities", "LastPatientType1")]
        public virtual IQueryable<LastPatientType1_Result> LastPatientType1(Nullable<int> pacID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LastPatientType1_Result>("[BISEntities].[LastPatientType1](@PacID)", pacIDParameter);
        }
    
        [DbFunction("BISEntities", "LastPatientType2")]
        public virtual IQueryable<LastPatientType2_Result> LastPatientType2(Nullable<int> pacID, Nullable<System.DateTime> dt)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LastPatientType2_Result>("[BISEntities].[LastPatientType2](@PacID, @dt)", pacIDParameter, dtParameter);
        }
    
        [DbFunction("BISEntities", "Leglofond")]
        public virtual IQueryable<Leglofond_Result> Leglofond(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Leglofond_Result>("[BISEntities].[Leglofond](@OtData, @DoData)", otDataParameter, doDataParameter);
        }
    
        [DbFunction("BISEntities", "NZOKRLFunc")]
        public virtual IQueryable<NZOKRLFunc_Result> NZOKRLFunc(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NZOKRLFunc_Result>("[BISEntities].[NZOKRLFunc](@OtData, @DoData, @LZ)", otDataParameter, doDataParameter, lZParameter);
        }
    
        [DbFunction("BISEntities", "NZOKRLFuncEC")]
        public virtual IQueryable<NZOKRLFuncEC_Result> NZOKRLFuncEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NZOKRLFuncEC_Result>("[BISEntities].[NZOKRLFuncEC](@OtData, @DoData, @LZ)", otDataParameter, doDataParameter, lZParameter);
        }
    
        [DbFunction("BISEntities", "PrestoiZaPeriod")]
        public virtual IQueryable<PrestoiZaPeriod_Result> PrestoiZaPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PrestoiZaPeriod_Result>("[BISEntities].[PrestoiZaPeriod](@OtData, @DoData)", otDataParameter, doDataParameter);
        }
    
        [DbFunction("BISEntities", "prevEpikriza")]
        public virtual IQueryable<prevEpikriza_Result> prevEpikriza(Nullable<int> bolId)
        {
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("bolId", bolId) :
                new ObjectParameter("bolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<prevEpikriza_Result>("[BISEntities].[prevEpikriza](@bolId)", bolIdParameter);
        }
    
        [DbFunction("BISEntities", "selAKrpt1")]
        public virtual IQueryable<selAKrpt1_Result> selAKrpt1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno, Nullable<int> pacID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<selAKrpt1_Result>("[BISEntities].[selAKrpt1](@OtData, @DoData, @Zveno, @PacID)", otDataParameter, doDataParameter, zvenoParameter, pacIDParameter);
        }
    
        [DbFunction("BISEntities", "SpecIMPLekariFunction")]
        public virtual IQueryable<SpecIMPLekariFunction_Result> SpecIMPLekariFunction(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SpecIMPLekariFunction_Result>("[BISEntities].[SpecIMPLekariFunction](@OtData, @DoData, @LZ, @OtData2)", otDataParameter, doDataParameter, lZParameter, otData2Parameter);
        }
    
        [DbFunction("BISEntities", "SpecIMPLekariFunctionEC")]
        public virtual IQueryable<SpecIMPLekariFunctionEC_Result> SpecIMPLekariFunctionEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SpecIMPLekariFunctionEC_Result>("[BISEntities].[SpecIMPLekariFunctionEC](@OtData, @DoData, @LZ, @OtData2)", otDataParameter, doDataParameter, lZParameter, otData2Parameter);
        }
    
        [DbFunction("BISEntities", "SplitArray")]
        public virtual IQueryable<SplitArray_Result> SplitArray(string list)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitArray_Result>("[BISEntities].[SplitArray](@List)", listParameter);
        }
    
        [DbFunction("BISEntities", "SplitArrayWithTableName")]
        public virtual IQueryable<SplitArrayWithTableName_Result> SplitArrayWithTableName(string tableName, string list)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitArrayWithTableName_Result>("[BISEntities].[SplitArrayWithTableName](@TableName, @List)", tableNameParameter, listParameter);
        }
    
        [DbFunction("BISEntities", "splitSemicolonNumbers")]
        public virtual IQueryable<splitSemicolonNumbers_Result> splitSemicolonNumbers(Nullable<decimal> id, string delimitedString)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var delimitedStringParameter = delimitedString != null ?
                new ObjectParameter("DelimitedString", delimitedString) :
                new ObjectParameter("DelimitedString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<splitSemicolonNumbers_Result>("[BISEntities].[splitSemicolonNumbers](@id, @DelimitedString)", idParameter, delimitedStringParameter);
        }
    
        [DbFunction("BISEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string myString, string deliminator)
        {
            var myStringParameter = myString != null ?
                new ObjectParameter("myString", myString) :
                new ObjectParameter("myString", typeof(string));
    
            var deliminatorParameter = deliminator != null ?
                new ObjectParameter("deliminator", deliminator) :
                new ObjectParameter("deliminator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[BISEntities].[SplitString](@myString, @deliminator)", myStringParameter, deliminatorParameter);
        }
    
        [DbFunction("BISEntities", "StacionarReport")]
        public virtual IQueryable<StacionarReport_Result> StacionarReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StacionarReport_Result>("[BISEntities].[StacionarReport]()");
        }
    
        [DbFunction("BISEntities", "VlojeniImplantantiZaPeriod")]
        public virtual IQueryable<VlojeniImplantantiZaPeriod_Result> VlojeniImplantantiZaPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VlojeniImplantantiZaPeriod_Result>("[BISEntities].[VlojeniImplantantiZaPeriod](@OtData, @DoData, @DogovorID)", otDataParameter, doDataParameter, dogovorIDParameter);
        }
    
        [DbFunction("BISEntities", "VsiListiZaPeriod")]
        public virtual IQueryable<VsiListiZaPeriod_Result> VsiListiZaPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VsiListiZaPeriod_Result>("[BISEntities].[VsiListiZaPeriod](@otData, @doData, @medCentur)", otDataParameter, doDataParameter, medCenturParameter);
        }
    
        [DbFunction("BISEntities", "ZvenoServ")]
        public virtual IQueryable<ZvenoServ_Result> ZvenoServ()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ZvenoServ_Result>("[BISEntities].[ZvenoServ]()");
        }
    
        public virtual ObjectResult<AbortiGodini_Result> AbortiGodini(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AbortiGodini_Result>("AbortiGodini", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<AbortiZavedenie_Result> AbortiZavedenie(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AbortiZavedenie_Result>("AbortiZavedenie", otDataParameter, doDataParameter);
        }
    
        public virtual int AdjustServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdjustServices");
        }
    
        public virtual ObjectResult<AmbJournal_Result> AmbJournal(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmbJournal_Result>("AmbJournal", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<AmbJournal01_Result> AmbJournal01(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmbJournal01_Result>("AmbJournal01", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<AmbJournal01Dop_Result> AmbJournal01Dop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmbJournal01Dop_Result>("AmbJournal01Dop", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<AmbJournal02_Result> AmbJournal02(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmbJournal02_Result>("AmbJournal02", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<AmbJournal02Dop_Result> AmbJournal02Dop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmbJournal02Dop_Result>("AmbJournal02Dop", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<AmbListFill_Result> AmbListFill(Nullable<decimal> pregledID, Nullable<decimal> proID, Nullable<decimal> diiID, Nullable<decimal> efiID, Nullable<decimal> ipID, Nullable<decimal> rodID, Nullable<decimal> fniID)
        {
            var pregledIDParameter = pregledID.HasValue ?
                new ObjectParameter("PregledID", pregledID) :
                new ObjectParameter("PregledID", typeof(decimal));
    
            var proIDParameter = proID.HasValue ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(decimal));
    
            var diiIDParameter = diiID.HasValue ?
                new ObjectParameter("DiiID", diiID) :
                new ObjectParameter("DiiID", typeof(decimal));
    
            var efiIDParameter = efiID.HasValue ?
                new ObjectParameter("EfiID", efiID) :
                new ObjectParameter("EfiID", typeof(decimal));
    
            var ipIDParameter = ipID.HasValue ?
                new ObjectParameter("IpID", ipID) :
                new ObjectParameter("IpID", typeof(decimal));
    
            var rodIDParameter = rodID.HasValue ?
                new ObjectParameter("RodID", rodID) :
                new ObjectParameter("RodID", typeof(decimal));
    
            var fniIDParameter = fniID.HasValue ?
                new ObjectParameter("FniID", fniID) :
                new ObjectParameter("FniID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmbListFill_Result>("AmbListFill", pregledIDParameter, proIDParameter, diiIDParameter, efiIDParameter, ipIDParameter, rodIDParameter, fniIDParameter);
        }
    
        public virtual ObjectResult<AmbListFill1_Result> AmbListFill1(Nullable<decimal> pregledID, Nullable<decimal> proID, Nullable<decimal> diiID, Nullable<decimal> efiID, Nullable<decimal> ipID, Nullable<decimal> rodID, Nullable<decimal> fniID, Nullable<bool> refresh)
        {
            var pregledIDParameter = pregledID.HasValue ?
                new ObjectParameter("PregledID", pregledID) :
                new ObjectParameter("PregledID", typeof(decimal));
    
            var proIDParameter = proID.HasValue ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(decimal));
    
            var diiIDParameter = diiID.HasValue ?
                new ObjectParameter("DiiID", diiID) :
                new ObjectParameter("DiiID", typeof(decimal));
    
            var efiIDParameter = efiID.HasValue ?
                new ObjectParameter("EfiID", efiID) :
                new ObjectParameter("EfiID", typeof(decimal));
    
            var ipIDParameter = ipID.HasValue ?
                new ObjectParameter("IpID", ipID) :
                new ObjectParameter("IpID", typeof(decimal));
    
            var rodIDParameter = rodID.HasValue ?
                new ObjectParameter("RodID", rodID) :
                new ObjectParameter("RodID", typeof(decimal));
    
            var fniIDParameter = fniID.HasValue ?
                new ObjectParameter("FniID", fniID) :
                new ObjectParameter("FniID", typeof(decimal));
    
            var refreshParameter = refresh.HasValue ?
                new ObjectParameter("Refresh", refresh) :
                new ObjectParameter("Refresh", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AmbListFill1_Result>("AmbListFill1", pregledIDParameter, proIDParameter, diiIDParameter, efiIDParameter, ipIDParameter, rodIDParameter, fniIDParameter, refreshParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AmbListModify(Nullable<decimal> ambListID, Nullable<decimal> pacientID, Nullable<decimal> lekarID, Nullable<decimal> lZID, Nullable<decimal> pregledID, Nullable<decimal> proID, Nullable<decimal> diiID, Nullable<decimal> efiID, Nullable<decimal> ipID, Nullable<decimal> rodID, Nullable<decimal> fniID, Nullable<bool> isValid, Nullable<bool> isOthvurlen, Nullable<decimal> ambListNo, Nullable<System.DateTime> datata, string simpAmbNo, Nullable<System.DateTime> simpData, Nullable<bool> consult, Nullable<bool> profilact, Nullable<bool> dZ, Nullable<bool> mZ, Nullable<bool> z18, Nullable<short> gestWeek, Nullable<bool> riskGroup, Nullable<bool> disp, Nullable<bool> vSD, Nullable<bool> vSDBol, Nullable<bool> rpHosp, Nullable<bool> expertiza, Nullable<bool> poTELK, Nullable<bool> pregledAmb, Nullable<bool> ambParv, Nullable<bool> ambVtor, Nullable<bool> pregledDom, Nullable<bool> domParv, Nullable<bool> domVtor, string imunKod1, string imunKod2, string imunKod3, string mantuKod, Nullable<bool> talonLKK, string talonLKKNo, Nullable<bool> hospitaliz, Nullable<bool> bList, string bListNo, Nullable<decimal> bListDiag, Nullable<short> bListDni, Nullable<System.DateTime> bListOtData, Nullable<System.DateTime> bListDoData, Nullable<bool> bListParv, string rpType, string rpBook, Nullable<bool> izvestie, Nullable<bool> etEpikriza, Nullable<bool> podpis, Nullable<decimal> mainDiag1, Nullable<decimal> mainDiag2, Nullable<decimal> dopDiag1, Nullable<decimal> dopDiag2, Nullable<decimal> dopDiag3, Nullable<decimal> dopDiag4, Nullable<decimal> dopDiag5, Nullable<decimal> dopDiag6, Nullable<decimal> dopDiag7, Nullable<decimal> dopDiag8, string anamnesa, string hState, string examine, string therapy, string procedura1Kod, string procedura2Kod, string procedura3Kod, string procedura4Kod, string procedura1Text, string procedura2Text, string procedura3Text, string procedura4Text, Nullable<bool> neblUslovia, string specLekar, string uINZamNaet, Nullable<decimal> lekarIDKod, Nullable<bool> zamLekar, Nullable<bool> naetLekar, Nullable<bool> potrTaksa, Nullable<bool> ambMZDisp, Nullable<decimal> doctorCommissionId, Nullable<bool> bezNapr3, Nullable<bool> izborDisp, Nullable<bool> pMS17)
        {
            var ambListIDParameter = ambListID.HasValue ?
                new ObjectParameter("AmbListID", ambListID) :
                new ObjectParameter("AmbListID", typeof(decimal));
    
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(decimal));
    
            var lekarIDParameter = lekarID.HasValue ?
                new ObjectParameter("LekarID", lekarID) :
                new ObjectParameter("LekarID", typeof(decimal));
    
            var lZIDParameter = lZID.HasValue ?
                new ObjectParameter("LZID", lZID) :
                new ObjectParameter("LZID", typeof(decimal));
    
            var pregledIDParameter = pregledID.HasValue ?
                new ObjectParameter("PregledID", pregledID) :
                new ObjectParameter("PregledID", typeof(decimal));
    
            var proIDParameter = proID.HasValue ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(decimal));
    
            var diiIDParameter = diiID.HasValue ?
                new ObjectParameter("DiiID", diiID) :
                new ObjectParameter("DiiID", typeof(decimal));
    
            var efiIDParameter = efiID.HasValue ?
                new ObjectParameter("EfiID", efiID) :
                new ObjectParameter("EfiID", typeof(decimal));
    
            var ipIDParameter = ipID.HasValue ?
                new ObjectParameter("IpID", ipID) :
                new ObjectParameter("IpID", typeof(decimal));
    
            var rodIDParameter = rodID.HasValue ?
                new ObjectParameter("RodID", rodID) :
                new ObjectParameter("RodID", typeof(decimal));
    
            var fniIDParameter = fniID.HasValue ?
                new ObjectParameter("FniID", fniID) :
                new ObjectParameter("FniID", typeof(decimal));
    
            var isValidParameter = isValid.HasValue ?
                new ObjectParameter("IsValid", isValid) :
                new ObjectParameter("IsValid", typeof(bool));
    
            var isOthvurlenParameter = isOthvurlen.HasValue ?
                new ObjectParameter("IsOthvurlen", isOthvurlen) :
                new ObjectParameter("IsOthvurlen", typeof(bool));
    
            var ambListNoParameter = ambListNo.HasValue ?
                new ObjectParameter("AmbListNo", ambListNo) :
                new ObjectParameter("AmbListNo", typeof(decimal));
    
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var simpAmbNoParameter = simpAmbNo != null ?
                new ObjectParameter("SimpAmbNo", simpAmbNo) :
                new ObjectParameter("SimpAmbNo", typeof(string));
    
            var simpDataParameter = simpData.HasValue ?
                new ObjectParameter("SimpData", simpData) :
                new ObjectParameter("SimpData", typeof(System.DateTime));
    
            var consultParameter = consult.HasValue ?
                new ObjectParameter("Consult", consult) :
                new ObjectParameter("Consult", typeof(bool));
    
            var profilactParameter = profilact.HasValue ?
                new ObjectParameter("Profilact", profilact) :
                new ObjectParameter("Profilact", typeof(bool));
    
            var dZParameter = dZ.HasValue ?
                new ObjectParameter("DZ", dZ) :
                new ObjectParameter("DZ", typeof(bool));
    
            var mZParameter = mZ.HasValue ?
                new ObjectParameter("MZ", mZ) :
                new ObjectParameter("MZ", typeof(bool));
    
            var z18Parameter = z18.HasValue ?
                new ObjectParameter("Z18", z18) :
                new ObjectParameter("Z18", typeof(bool));
    
            var gestWeekParameter = gestWeek.HasValue ?
                new ObjectParameter("GestWeek", gestWeek) :
                new ObjectParameter("GestWeek", typeof(short));
    
            var riskGroupParameter = riskGroup.HasValue ?
                new ObjectParameter("RiskGroup", riskGroup) :
                new ObjectParameter("RiskGroup", typeof(bool));
    
            var dispParameter = disp.HasValue ?
                new ObjectParameter("Disp", disp) :
                new ObjectParameter("Disp", typeof(bool));
    
            var vSDParameter = vSD.HasValue ?
                new ObjectParameter("VSD", vSD) :
                new ObjectParameter("VSD", typeof(bool));
    
            var vSDBolParameter = vSDBol.HasValue ?
                new ObjectParameter("VSDBol", vSDBol) :
                new ObjectParameter("VSDBol", typeof(bool));
    
            var rpHospParameter = rpHosp.HasValue ?
                new ObjectParameter("RpHosp", rpHosp) :
                new ObjectParameter("RpHosp", typeof(bool));
    
            var expertizaParameter = expertiza.HasValue ?
                new ObjectParameter("Expertiza", expertiza) :
                new ObjectParameter("Expertiza", typeof(bool));
    
            var poTELKParameter = poTELK.HasValue ?
                new ObjectParameter("PoTELK", poTELK) :
                new ObjectParameter("PoTELK", typeof(bool));
    
            var pregledAmbParameter = pregledAmb.HasValue ?
                new ObjectParameter("PregledAmb", pregledAmb) :
                new ObjectParameter("PregledAmb", typeof(bool));
    
            var ambParvParameter = ambParv.HasValue ?
                new ObjectParameter("AmbParv", ambParv) :
                new ObjectParameter("AmbParv", typeof(bool));
    
            var ambVtorParameter = ambVtor.HasValue ?
                new ObjectParameter("AmbVtor", ambVtor) :
                new ObjectParameter("AmbVtor", typeof(bool));
    
            var pregledDomParameter = pregledDom.HasValue ?
                new ObjectParameter("PregledDom", pregledDom) :
                new ObjectParameter("PregledDom", typeof(bool));
    
            var domParvParameter = domParv.HasValue ?
                new ObjectParameter("DomParv", domParv) :
                new ObjectParameter("DomParv", typeof(bool));
    
            var domVtorParameter = domVtor.HasValue ?
                new ObjectParameter("DomVtor", domVtor) :
                new ObjectParameter("DomVtor", typeof(bool));
    
            var imunKod1Parameter = imunKod1 != null ?
                new ObjectParameter("ImunKod1", imunKod1) :
                new ObjectParameter("ImunKod1", typeof(string));
    
            var imunKod2Parameter = imunKod2 != null ?
                new ObjectParameter("ImunKod2", imunKod2) :
                new ObjectParameter("ImunKod2", typeof(string));
    
            var imunKod3Parameter = imunKod3 != null ?
                new ObjectParameter("ImunKod3", imunKod3) :
                new ObjectParameter("ImunKod3", typeof(string));
    
            var mantuKodParameter = mantuKod != null ?
                new ObjectParameter("MantuKod", mantuKod) :
                new ObjectParameter("MantuKod", typeof(string));
    
            var talonLKKParameter = talonLKK.HasValue ?
                new ObjectParameter("TalonLKK", talonLKK) :
                new ObjectParameter("TalonLKK", typeof(bool));
    
            var talonLKKNoParameter = talonLKKNo != null ?
                new ObjectParameter("TalonLKKNo", talonLKKNo) :
                new ObjectParameter("TalonLKKNo", typeof(string));
    
            var hospitalizParameter = hospitaliz.HasValue ?
                new ObjectParameter("Hospitaliz", hospitaliz) :
                new ObjectParameter("Hospitaliz", typeof(bool));
    
            var bListParameter = bList.HasValue ?
                new ObjectParameter("BList", bList) :
                new ObjectParameter("BList", typeof(bool));
    
            var bListNoParameter = bListNo != null ?
                new ObjectParameter("BListNo", bListNo) :
                new ObjectParameter("BListNo", typeof(string));
    
            var bListDiagParameter = bListDiag.HasValue ?
                new ObjectParameter("BListDiag", bListDiag) :
                new ObjectParameter("BListDiag", typeof(decimal));
    
            var bListDniParameter = bListDni.HasValue ?
                new ObjectParameter("BListDni", bListDni) :
                new ObjectParameter("BListDni", typeof(short));
    
            var bListOtDataParameter = bListOtData.HasValue ?
                new ObjectParameter("BListOtData", bListOtData) :
                new ObjectParameter("BListOtData", typeof(System.DateTime));
    
            var bListDoDataParameter = bListDoData.HasValue ?
                new ObjectParameter("BListDoData", bListDoData) :
                new ObjectParameter("BListDoData", typeof(System.DateTime));
    
            var bListParvParameter = bListParv.HasValue ?
                new ObjectParameter("BListParv", bListParv) :
                new ObjectParameter("BListParv", typeof(bool));
    
            var rpTypeParameter = rpType != null ?
                new ObjectParameter("RpType", rpType) :
                new ObjectParameter("RpType", typeof(string));
    
            var rpBookParameter = rpBook != null ?
                new ObjectParameter("RpBook", rpBook) :
                new ObjectParameter("RpBook", typeof(string));
    
            var izvestieParameter = izvestie.HasValue ?
                new ObjectParameter("Izvestie", izvestie) :
                new ObjectParameter("Izvestie", typeof(bool));
    
            var etEpikrizaParameter = etEpikriza.HasValue ?
                new ObjectParameter("EtEpikriza", etEpikriza) :
                new ObjectParameter("EtEpikriza", typeof(bool));
    
            var podpisParameter = podpis.HasValue ?
                new ObjectParameter("Podpis", podpis) :
                new ObjectParameter("Podpis", typeof(bool));
    
            var mainDiag1Parameter = mainDiag1.HasValue ?
                new ObjectParameter("MainDiag1", mainDiag1) :
                new ObjectParameter("MainDiag1", typeof(decimal));
    
            var mainDiag2Parameter = mainDiag2.HasValue ?
                new ObjectParameter("MainDiag2", mainDiag2) :
                new ObjectParameter("MainDiag2", typeof(decimal));
    
            var dopDiag1Parameter = dopDiag1.HasValue ?
                new ObjectParameter("DopDiag1", dopDiag1) :
                new ObjectParameter("DopDiag1", typeof(decimal));
    
            var dopDiag2Parameter = dopDiag2.HasValue ?
                new ObjectParameter("DopDiag2", dopDiag2) :
                new ObjectParameter("DopDiag2", typeof(decimal));
    
            var dopDiag3Parameter = dopDiag3.HasValue ?
                new ObjectParameter("DopDiag3", dopDiag3) :
                new ObjectParameter("DopDiag3", typeof(decimal));
    
            var dopDiag4Parameter = dopDiag4.HasValue ?
                new ObjectParameter("DopDiag4", dopDiag4) :
                new ObjectParameter("DopDiag4", typeof(decimal));
    
            var dopDiag5Parameter = dopDiag5.HasValue ?
                new ObjectParameter("DopDiag5", dopDiag5) :
                new ObjectParameter("DopDiag5", typeof(decimal));
    
            var dopDiag6Parameter = dopDiag6.HasValue ?
                new ObjectParameter("DopDiag6", dopDiag6) :
                new ObjectParameter("DopDiag6", typeof(decimal));
    
            var dopDiag7Parameter = dopDiag7.HasValue ?
                new ObjectParameter("DopDiag7", dopDiag7) :
                new ObjectParameter("DopDiag7", typeof(decimal));
    
            var dopDiag8Parameter = dopDiag8.HasValue ?
                new ObjectParameter("DopDiag8", dopDiag8) :
                new ObjectParameter("DopDiag8", typeof(decimal));
    
            var anamnesaParameter = anamnesa != null ?
                new ObjectParameter("Anamnesa", anamnesa) :
                new ObjectParameter("Anamnesa", typeof(string));
    
            var hStateParameter = hState != null ?
                new ObjectParameter("HState", hState) :
                new ObjectParameter("HState", typeof(string));
    
            var examineParameter = examine != null ?
                new ObjectParameter("Examine", examine) :
                new ObjectParameter("Examine", typeof(string));
    
            var therapyParameter = therapy != null ?
                new ObjectParameter("Therapy", therapy) :
                new ObjectParameter("Therapy", typeof(string));
    
            var procedura1KodParameter = procedura1Kod != null ?
                new ObjectParameter("Procedura1Kod", procedura1Kod) :
                new ObjectParameter("Procedura1Kod", typeof(string));
    
            var procedura2KodParameter = procedura2Kod != null ?
                new ObjectParameter("Procedura2Kod", procedura2Kod) :
                new ObjectParameter("Procedura2Kod", typeof(string));
    
            var procedura3KodParameter = procedura3Kod != null ?
                new ObjectParameter("Procedura3Kod", procedura3Kod) :
                new ObjectParameter("Procedura3Kod", typeof(string));
    
            var procedura4KodParameter = procedura4Kod != null ?
                new ObjectParameter("Procedura4Kod", procedura4Kod) :
                new ObjectParameter("Procedura4Kod", typeof(string));
    
            var procedura1TextParameter = procedura1Text != null ?
                new ObjectParameter("Procedura1Text", procedura1Text) :
                new ObjectParameter("Procedura1Text", typeof(string));
    
            var procedura2TextParameter = procedura2Text != null ?
                new ObjectParameter("Procedura2Text", procedura2Text) :
                new ObjectParameter("Procedura2Text", typeof(string));
    
            var procedura3TextParameter = procedura3Text != null ?
                new ObjectParameter("Procedura3Text", procedura3Text) :
                new ObjectParameter("Procedura3Text", typeof(string));
    
            var procedura4TextParameter = procedura4Text != null ?
                new ObjectParameter("Procedura4Text", procedura4Text) :
                new ObjectParameter("Procedura4Text", typeof(string));
    
            var neblUsloviaParameter = neblUslovia.HasValue ?
                new ObjectParameter("NeblUslovia", neblUslovia) :
                new ObjectParameter("NeblUslovia", typeof(bool));
    
            var specLekarParameter = specLekar != null ?
                new ObjectParameter("SpecLekar", specLekar) :
                new ObjectParameter("SpecLekar", typeof(string));
    
            var uINZamNaetParameter = uINZamNaet != null ?
                new ObjectParameter("UINZamNaet", uINZamNaet) :
                new ObjectParameter("UINZamNaet", typeof(string));
    
            var lekarIDKodParameter = lekarIDKod.HasValue ?
                new ObjectParameter("LekarIDKod", lekarIDKod) :
                new ObjectParameter("LekarIDKod", typeof(decimal));
    
            var zamLekarParameter = zamLekar.HasValue ?
                new ObjectParameter("ZamLekar", zamLekar) :
                new ObjectParameter("ZamLekar", typeof(bool));
    
            var naetLekarParameter = naetLekar.HasValue ?
                new ObjectParameter("NaetLekar", naetLekar) :
                new ObjectParameter("NaetLekar", typeof(bool));
    
            var potrTaksaParameter = potrTaksa.HasValue ?
                new ObjectParameter("PotrTaksa", potrTaksa) :
                new ObjectParameter("PotrTaksa", typeof(bool));
    
            var ambMZDispParameter = ambMZDisp.HasValue ?
                new ObjectParameter("AmbMZDisp", ambMZDisp) :
                new ObjectParameter("AmbMZDisp", typeof(bool));
    
            var doctorCommissionIdParameter = doctorCommissionId.HasValue ?
                new ObjectParameter("DoctorCommissionId", doctorCommissionId) :
                new ObjectParameter("DoctorCommissionId", typeof(decimal));
    
            var bezNapr3Parameter = bezNapr3.HasValue ?
                new ObjectParameter("BezNapr3", bezNapr3) :
                new ObjectParameter("BezNapr3", typeof(bool));
    
            var izborDispParameter = izborDisp.HasValue ?
                new ObjectParameter("IzborDisp", izborDisp) :
                new ObjectParameter("IzborDisp", typeof(bool));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AmbListModify", ambListIDParameter, pacientIDParameter, lekarIDParameter, lZIDParameter, pregledIDParameter, proIDParameter, diiIDParameter, efiIDParameter, ipIDParameter, rodIDParameter, fniIDParameter, isValidParameter, isOthvurlenParameter, ambListNoParameter, datataParameter, simpAmbNoParameter, simpDataParameter, consultParameter, profilactParameter, dZParameter, mZParameter, z18Parameter, gestWeekParameter, riskGroupParameter, dispParameter, vSDParameter, vSDBolParameter, rpHospParameter, expertizaParameter, poTELKParameter, pregledAmbParameter, ambParvParameter, ambVtorParameter, pregledDomParameter, domParvParameter, domVtorParameter, imunKod1Parameter, imunKod2Parameter, imunKod3Parameter, mantuKodParameter, talonLKKParameter, talonLKKNoParameter, hospitalizParameter, bListParameter, bListNoParameter, bListDiagParameter, bListDniParameter, bListOtDataParameter, bListDoDataParameter, bListParvParameter, rpTypeParameter, rpBookParameter, izvestieParameter, etEpikrizaParameter, podpisParameter, mainDiag1Parameter, mainDiag2Parameter, dopDiag1Parameter, dopDiag2Parameter, dopDiag3Parameter, dopDiag4Parameter, dopDiag5Parameter, dopDiag6Parameter, dopDiag7Parameter, dopDiag8Parameter, anamnesaParameter, hStateParameter, examineParameter, therapyParameter, procedura1KodParameter, procedura2KodParameter, procedura3KodParameter, procedura4KodParameter, procedura1TextParameter, procedura2TextParameter, procedura3TextParameter, procedura4TextParameter, neblUsloviaParameter, specLekarParameter, uINZamNaetParameter, lekarIDKodParameter, zamLekarParameter, naetLekarParameter, potrTaksaParameter, ambMZDispParameter, doctorCommissionIdParameter, bezNapr3Parameter, izborDispParameter, pMS17Parameter);
        }
    
        public virtual ObjectResult<AnestJurnal_Result> AnestJurnal(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AnestJurnal_Result>("AnestJurnal", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Azbuchnik_Result> Azbuchnik(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Azbuchnik_Result>("Azbuchnik", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<BlAllProc4KP_Result> BlAllProc4KP(Nullable<int> bolID, Nullable<System.DateTime> blDataChas, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blDataChasParameter = blDataChas.HasValue ?
                new ObjectParameter("BlDataChas", blDataChas) :
                new ObjectParameter("BlDataChas", typeof(System.DateTime));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlAllProc4KP_Result>("BlAllProc4KP", bolIDParameter, blDataChasParameter, blKPParameter);
        }
    
        public virtual ObjectResult<BlAllProc4KPNew_Result> BlAllProc4KPNew(Nullable<int> bolID, Nullable<System.DateTime> blDataChas, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blDataChasParameter = blDataChas.HasValue ?
                new ObjectParameter("BlDataChas", blDataChas) :
                new ObjectParameter("BlDataChas", typeof(System.DateTime));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlAllProc4KPNew_Result>("BlAllProc4KPNew", bolIDParameter, blDataChasParameter, blKPParameter);
        }
    
        public virtual ObjectResult<BlChujdiGrajdane_Result> BlChujdiGrajdane(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlChujdiGrajdane_Result>("BlChujdiGrajdane", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<BlHospPeriod_Result> BlHospPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlHospPeriod_Result>("BlHospPeriod", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<BlHospPeriodDay_Result> BlHospPeriodDay(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlHospPeriodDay_Result>("BlHospPeriodDay", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<BLHronologiaAnestezia_Result> BLHronologiaAnestezia(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaAnestezia_Result>("BLHronologiaAnestezia", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaDII_Result> BLHronologiaDII(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaDII_Result>("BLHronologiaDII", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaEFI_Result> BLHronologiaEFI(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaEFI_Result>("BLHronologiaEFI", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaEjNaznachenie_Result> BLHronologiaEjNaznachenie(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaEjNaznachenie_Result>("BLHronologiaEjNaznachenie", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaFNI_Result> BLHronologiaFNI(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaFNI_Result>("BLHronologiaFNI", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaIP_Result> BLHronologiaIP(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaIP_Result>("BLHronologiaIP", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaKPR_Result> BLHronologiaKPR(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaKPR_Result>("BLHronologiaKPR", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaKPRIzp_Result> BLHronologiaKPRIzp(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaKPRIzp_Result>("BLHronologiaKPRIzp", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaLAB_Result> BLHronologiaLAB(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaLAB_Result>("BLHronologiaLAB", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaMedikacia_Result> BLHronologiaMedikacia(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaMedikacia_Result>("BLHronologiaMedikacia", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaMedikamenti_Result> BLHronologiaMedikamenti(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaMedikamenti_Result>("BLHronologiaMedikamenti", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaNapuskane_Result> BLHronologiaNapuskane(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaNapuskane_Result>("BLHronologiaNapuskane", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaNaznachenie_Result> BLHronologiaNaznachenie(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaNaznachenie_Result>("BLHronologiaNaznachenie", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaOperacia_Result> BLHronologiaOperacia(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaOperacia_Result>("BLHronologiaOperacia", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaOperEKK_Result> BLHronologiaOperEKK(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaOperEKK_Result>("BLHronologiaOperEKK", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaPrevejdane_Result> BLHronologiaPrevejdane(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaPrevejdane_Result>("BLHronologiaPrevejdane", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaPridrujitel_Result> BLHronologiaPridrujitel(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaPridrujitel_Result>("BLHronologiaPridrujitel", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaPriem_Result> BLHronologiaPriem(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaPriem_Result>("BLHronologiaPriem", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaPRO_Result> BLHronologiaPRO(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaPRO_Result>("BLHronologiaPRO", iDParameter);
        }
    
        public virtual ObjectResult<BLHronologiaROD_Result> BLHronologiaROD(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronologiaROD_Result>("BLHronologiaROD", iDParameter);
        }
    
        public virtual ObjectResult<BlHronologiaScores_Result> BlHronologiaScores(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlHronologiaScores_Result>("BlHronologiaScores", iDParameter);
        }
    
        public virtual ObjectResult<BLHronoNapravlenie_Result> BLHronoNapravlenie(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLHronoNapravlenie_Result>("BLHronoNapravlenie", iDParameter);
        }
    
        public virtual ObjectResult<BListAmbPrint_Result> BListAmbPrint(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BListAmbPrint_Result>("BListAmbPrint", idParameter);
        }
    
        public virtual ObjectResult<BListKpLechPrint_Result> BListKpLechPrint(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BListKpLechPrint_Result>("BListKpLechPrint", idParameter);
        }
    
        public virtual ObjectResult<BListPregPrint_Result> BListPregPrint(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BListPregPrint_Result>("BListPregPrint", idParameter);
        }
    
        public virtual ObjectResult<BListPrint_Result> BListPrint(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BListPrint_Result>("BListPrint", idParameter);
        }
    
        public virtual int BLLegloviFond1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BLLegloviFond1");
        }
    
        public virtual int BLLegloviFond2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BLLegloviFond2");
        }
    
        public virtual int BLLegloviFondDV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BLLegloviFondDV");
        }
    
        public virtual ObjectResult<BlPacDvijenie_Result> BlPacDvijenie(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlPacDvijenie_Result>("BlPacDvijenie", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<BlPacDvijenieNew_Result> BlPacDvijenieNew(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlPacDvijenieNew_Result>("BlPacDvijenieNew", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<BLPacPrevejdane_Result> BLPacPrevejdane(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BLPacPrevejdane_Result>("BLPacPrevejdane", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<CalcBudget_Result> CalcBudget(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcBudget_Result>("CalcBudget", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<CalcBudgetNew_Result> CalcBudgetNew(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> yrFrom, Nullable<int> yrTO)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var yrFromParameter = yrFrom.HasValue ?
                new ObjectParameter("YrFrom", yrFrom) :
                new ObjectParameter("YrFrom", typeof(int));
    
            var yrTOParameter = yrTO.HasValue ?
                new ObjectParameter("YrTO", yrTO) :
                new ObjectParameter("YrTO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcBudgetNew_Result>("CalcBudgetNew", otDataParameter, doDataParameter, yrFromParameter, yrTOParameter);
        }
    
        public virtual int CalcDiagnoza(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalcDiagnoza", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<CalcKlinichnaPateka_Result> CalcKlinichnaPateka(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcKlinichnaPateka_Result>("CalcKlinichnaPateka", otDataParameter, doDataParameter);
        }
    
        public virtual int CalcKlinichnaPatekaNew(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> yrFROM, Nullable<int> yrTO)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var yrFROMParameter = yrFROM.HasValue ?
                new ObjectParameter("YrFROM", yrFROM) :
                new ObjectParameter("YrFROM", typeof(int));
    
            var yrTOParameter = yrTO.HasValue ?
                new ObjectParameter("YrTO", yrTO) :
                new ObjectParameter("YrTO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalcKlinichnaPatekaNew", otDataParameter, doDataParameter, yrFROMParameter, yrTOParameter);
        }
    
        public virtual ObjectResult<CalcLechenie_Result> CalcLechenie(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> dni, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcLechenie_Result>("CalcLechenie", otDataParameter, doDataParameter, dniParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual ObjectResult<CalcPacienti_Result> CalcPacienti(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<System.DateTime> datata)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcPacienti_Result>("CalcPacienti", otDataParameter, doDataParameter, datataParameter);
        }
    
        public virtual int CalcPacienti1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalcPacienti1", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<CalcPacientiKP_Result> CalcPacientiKP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcPacientiKP_Result>("CalcPacientiKP", otDataParameter, doDataParameter);
        }
    
        public virtual int CalcPacientiKP1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalcPacientiKP1", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<CalcStatistika_Result> CalcStatistika(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<System.DateTime> datata)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalcStatistika_Result>("CalcStatistika", otDataParameter, doDataParameter, datataParameter);
        }
    
        public virtual int CalcStatistika1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalcStatistika1", otDataParameter, doDataParameter);
        }
    
        public virtual int CalcStatistika3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalcStatistika3", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<CalculaciaPacienti0_Result> CalculaciaPacienti0(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<System.DateTime> datata)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalculaciaPacienti0_Result>("CalculaciaPacienti0", otDataParameter, doDataParameter, datataParameter);
        }
    
        public virtual int CalculaciaPacienti1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalculaciaPacienti1", otDataParameter, doDataParameter);
        }
    
        public virtual int Calculation(Nullable<int> pac)
        {
            var pacParameter = pac.HasValue ?
                new ObjectParameter("Pac", pac) :
                new ObjectParameter("Pac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Calculation", pacParameter);
        }
    
        public virtual int CalculationModify(Nullable<decimal> pacientID, Nullable<int> type, Nullable<int> subType, string usluga, Nullable<decimal> cena, Nullable<decimal> broi, string dates, Nullable<decimal> medCentar, Nullable<System.DateTime> date1, string prestoi)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(decimal));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var subTypeParameter = subType.HasValue ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(int));
    
            var uslugaParameter = usluga != null ?
                new ObjectParameter("Usluga", usluga) :
                new ObjectParameter("Usluga", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(decimal));
    
            var broiParameter = broi.HasValue ?
                new ObjectParameter("Broi", broi) :
                new ObjectParameter("Broi", typeof(decimal));
    
            var datesParameter = dates != null ?
                new ObjectParameter("Dates", dates) :
                new ObjectParameter("Dates", typeof(string));
    
            var medCentarParameter = medCentar.HasValue ?
                new ObjectParameter("MedCentar", medCentar) :
                new ObjectParameter("MedCentar", typeof(decimal));
    
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("Date1", date1) :
                new ObjectParameter("Date1", typeof(System.DateTime));
    
            var prestoiParameter = prestoi != null ?
                new ObjectParameter("Prestoi", prestoi) :
                new ObjectParameter("Prestoi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalculationModify", pacientIDParameter, typeParameter, subTypeParameter, uslugaParameter, cenaParameter, broiParameter, datesParameter, medCentarParameter, date1Parameter, prestoiParameter);
        }
    
        public virtual int CalculationNew(Nullable<int> pac)
        {
            var pacParameter = pac.HasValue ?
                new ObjectParameter("Pac", pac) :
                new ObjectParameter("Pac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalculationNew", pacParameter);
        }
    
        public virtual ObjectResult<CeniNZOKZaData_Result> CeniNZOKZaData(Nullable<System.DateTime> data)
        {
            var dataParameter = data.HasValue ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CeniNZOKZaData_Result>("CeniNZOKZaData", dataParameter);
        }
    
        public virtual ObjectResult<CeniZaData_Result> CeniZaData(Nullable<System.DateTime> data, Nullable<int> medCentar)
        {
            var dataParameter = data.HasValue ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(System.DateTime));
    
            var medCentarParameter = medCentar.HasValue ?
                new ObjectParameter("MedCentar", medCentar) :
                new ObjectParameter("MedCentar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CeniZaData_Result>("CeniZaData", dataParameter, medCentarParameter);
        }
    
        public virtual int CeniZaDataModify(Nullable<decimal> uslugaID, Nullable<decimal> cenaBg, Nullable<decimal> cenaNotBg, Nullable<decimal> cenaNZOK, Nullable<System.DateTime> cenaData, Nullable<decimal> cenaID, Nullable<decimal> medCentar, Nullable<int> newRecord)
        {
            var uslugaIDParameter = uslugaID.HasValue ?
                new ObjectParameter("UslugaID", uslugaID) :
                new ObjectParameter("UslugaID", typeof(decimal));
    
            var cenaBgParameter = cenaBg.HasValue ?
                new ObjectParameter("CenaBg", cenaBg) :
                new ObjectParameter("CenaBg", typeof(decimal));
    
            var cenaNotBgParameter = cenaNotBg.HasValue ?
                new ObjectParameter("CenaNotBg", cenaNotBg) :
                new ObjectParameter("CenaNotBg", typeof(decimal));
    
            var cenaNZOKParameter = cenaNZOK.HasValue ?
                new ObjectParameter("CenaNZOK", cenaNZOK) :
                new ObjectParameter("CenaNZOK", typeof(decimal));
    
            var cenaDataParameter = cenaData.HasValue ?
                new ObjectParameter("CenaData", cenaData) :
                new ObjectParameter("CenaData", typeof(System.DateTime));
    
            var cenaIDParameter = cenaID.HasValue ?
                new ObjectParameter("CenaID", cenaID) :
                new ObjectParameter("CenaID", typeof(decimal));
    
            var medCentarParameter = medCentar.HasValue ?
                new ObjectParameter("MedCentar", medCentar) :
                new ObjectParameter("MedCentar", typeof(decimal));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CeniZaDataModify", uslugaIDParameter, cenaBgParameter, cenaNotBgParameter, cenaNZOKParameter, cenaDataParameter, cenaIDParameter, medCentarParameter, newRecordParameter);
        }
    
        public virtual ObjectResult<CenorazpisReport_Result> CenorazpisReport(Nullable<System.DateTime> datata, Nullable<int> mC, Nullable<int> nZOK)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(int));
    
            var nZOKParameter = nZOK.HasValue ?
                new ObjectParameter("NZOK", nZOK) :
                new ObjectParameter("NZOK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CenorazpisReport_Result>("CenorazpisReport", datataParameter, mCParameter, nZOKParameter);
        }
    
        public virtual ObjectResult<ControlaDD_Result> ControlaDD(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlaDD_Result>("ControlaDD", iDParameter);
        }
    
        public virtual ObjectResult<ControlaMZ_Result> ControlaMZ(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlaMZ_Result>("ControlaMZ", otDataParameter, doDataParameter);
        }
    
        public virtual int CopySec_Log(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopySec_Log", otDataParameter, doDataParameter);
        }
    
        public virtual int CreateInvoice(string facNo, Nullable<System.DateTime> facData, Nullable<decimal> facSuma, string facSastavil, Nullable<bool> facVid)
        {
            var facNoParameter = facNo != null ?
                new ObjectParameter("FacNo", facNo) :
                new ObjectParameter("FacNo", typeof(string));
    
            var facDataParameter = facData.HasValue ?
                new ObjectParameter("FacData", facData) :
                new ObjectParameter("FacData", typeof(System.DateTime));
    
            var facSumaParameter = facSuma.HasValue ?
                new ObjectParameter("FacSuma", facSuma) :
                new ObjectParameter("FacSuma", typeof(decimal));
    
            var facSastavilParameter = facSastavil != null ?
                new ObjectParameter("FacSastavil", facSastavil) :
                new ObjectParameter("FacSastavil", typeof(string));
    
            var facVidParameter = facVid.HasValue ?
                new ObjectParameter("FacVid", facVid) :
                new ObjectParameter("FacVid", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateInvoice", facNoParameter, facDataParameter, facSumaParameter, facSastavilParameter, facVidParameter);
        }
    
        public virtual int CreatePatientList(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePatientList", tableNameParameter);
        }
    
        public virtual ObjectResult<DebitniPacienti_Result> DebitniPacienti(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DebitniPacienti_Result>("DebitniPacienti", otDataParameter, doDataParameter);
        }
    
        public virtual int deleteBadInrs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteBadInrs");
        }
    
        public virtual ObjectResult<DetskaSmartnost_Result> DetskaSmartnost(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetskaSmartnost_Result>("DetskaSmartnost", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<DiffDiag_Result> DiffDiag(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiffDiag_Result>("DiffDiag", otDataParameter, doDataParameter);
        }
    
        public virtual int DiffHistolog()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DiffHistolog");
        }
    
        public virtual int DiffHistologIzv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DiffHistologIzv", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<DiiIzhod_Result> DiiIzhod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiiIzhod_Result>("DiiIzhod", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<DIIZaPeriod_Result> DIIZaPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> mes1, Nullable<int> mes2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mes1Parameter = mes1.HasValue ?
                new ObjectParameter("Mes1", mes1) :
                new ObjectParameter("Mes1", typeof(int));
    
            var mes2Parameter = mes2.HasValue ?
                new ObjectParameter("Mes2", mes2) :
                new ObjectParameter("Mes2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIIZaPeriod_Result>("DIIZaPeriod", otDataParameter, doDataParameter, mes1Parameter, mes2Parameter);
        }
    
        public virtual ObjectResult<DispFiles_Result> DispFiles(Nullable<System.DateTime> otdata, Nullable<System.DateTime> dodata, Nullable<int> medcentar)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("Otdata", otdata) :
                new ObjectParameter("Otdata", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            var medcentarParameter = medcentar.HasValue ?
                new ObjectParameter("medcentar", medcentar) :
                new ObjectParameter("medcentar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DispFiles_Result>("DispFiles", otdataParameter, dodataParameter, medcentarParameter);
        }
    
        public virtual ObjectResult<DnevnikKP_Result> DnevnikKP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DnevnikKP_Result>("DnevnikKP", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<DosieSecPacient_Result> DosieSecPacient(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> pacID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DosieSecPacient_Result>("DosieSecPacient", otDataParameter, doDataParameter, pacIDParameter);
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int DZModify(Nullable<decimal> dZID, string dZKod, string dZLekar, string dZIme, string dZMKB, Nullable<bool> dZIsDeca, Nullable<bool> dZIsGolemi, Nullable<bool> dZIsNZOK, Nullable<System.DateTime> dZDoData, Nullable<int> newRecord)
        {
            var dZIDParameter = dZID.HasValue ?
                new ObjectParameter("DZID", dZID) :
                new ObjectParameter("DZID", typeof(decimal));
    
            var dZKodParameter = dZKod != null ?
                new ObjectParameter("DZKod", dZKod) :
                new ObjectParameter("DZKod", typeof(string));
    
            var dZLekarParameter = dZLekar != null ?
                new ObjectParameter("DZLekar", dZLekar) :
                new ObjectParameter("DZLekar", typeof(string));
    
            var dZImeParameter = dZIme != null ?
                new ObjectParameter("DZIme", dZIme) :
                new ObjectParameter("DZIme", typeof(string));
    
            var dZMKBParameter = dZMKB != null ?
                new ObjectParameter("DZMKB", dZMKB) :
                new ObjectParameter("DZMKB", typeof(string));
    
            var dZIsDecaParameter = dZIsDeca.HasValue ?
                new ObjectParameter("DZIsDeca", dZIsDeca) :
                new ObjectParameter("DZIsDeca", typeof(bool));
    
            var dZIsGolemiParameter = dZIsGolemi.HasValue ?
                new ObjectParameter("DZIsGolemi", dZIsGolemi) :
                new ObjectParameter("DZIsGolemi", typeof(bool));
    
            var dZIsNZOKParameter = dZIsNZOK.HasValue ?
                new ObjectParameter("DZIsNZOK", dZIsNZOK) :
                new ObjectParameter("DZIsNZOK", typeof(bool));
    
            var dZDoDataParameter = dZDoData.HasValue ?
                new ObjectParameter("DZDoData", dZDoData) :
                new ObjectParameter("DZDoData", typeof(System.DateTime));
    
            var newRecordParameter = newRecord.HasValue ?
                new ObjectParameter("NewRecord", newRecord) :
                new ObjectParameter("NewRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DZModify", dZIDParameter, dZKodParameter, dZLekarParameter, dZImeParameter, dZMKBParameter, dZIsDecaParameter, dZIsGolemiParameter, dZIsNZOKParameter, dZDoDataParameter, newRecordParameter);
        }
    
        public virtual ObjectResult<EjednevnoSvPrihodi_Result> EjednevnoSvPrihodi(Nullable<System.DateTime> from1, Nullable<System.DateTime> to1, Nullable<System.DateTime> from2, Nullable<System.DateTime> to2, Nullable<System.DateTime> from3, Nullable<System.DateTime> to3)
        {
            var from1Parameter = from1.HasValue ?
                new ObjectParameter("From1", from1) :
                new ObjectParameter("From1", typeof(System.DateTime));
    
            var to1Parameter = to1.HasValue ?
                new ObjectParameter("To1", to1) :
                new ObjectParameter("To1", typeof(System.DateTime));
    
            var from2Parameter = from2.HasValue ?
                new ObjectParameter("From2", from2) :
                new ObjectParameter("From2", typeof(System.DateTime));
    
            var to2Parameter = to2.HasValue ?
                new ObjectParameter("To2", to2) :
                new ObjectParameter("To2", typeof(System.DateTime));
    
            var from3Parameter = from3.HasValue ?
                new ObjectParameter("From3", from3) :
                new ObjectParameter("From3", typeof(System.DateTime));
    
            var to3Parameter = to3.HasValue ?
                new ObjectParameter("To3", to3) :
                new ObjectParameter("To3", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EjednevnoSvPrihodi_Result>("EjednevnoSvPrihodi", from1Parameter, to1Parameter, from2Parameter, to2Parameter, from3Parameter, to3Parameter);
        }
    
        public virtual ObjectResult<EjednevnoSvPrihodi2014_Result> EjednevnoSvPrihodi2014(Nullable<System.DateTime> from1, Nullable<System.DateTime> to1, Nullable<System.DateTime> from2, Nullable<System.DateTime> to2, Nullable<System.DateTime> from3, Nullable<System.DateTime> to3, Nullable<int> otchet, Nullable<int> dDS, Nullable<int> varnat, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> foreigner, Nullable<bool> all, string nzokContractsIds, string nzokContractsLastMonthIds, string nzokContractsLastYearIds)
        {
            var from1Parameter = from1.HasValue ?
                new ObjectParameter("From1", from1) :
                new ObjectParameter("From1", typeof(System.DateTime));
    
            var to1Parameter = to1.HasValue ?
                new ObjectParameter("To1", to1) :
                new ObjectParameter("To1", typeof(System.DateTime));
    
            var from2Parameter = from2.HasValue ?
                new ObjectParameter("From2", from2) :
                new ObjectParameter("From2", typeof(System.DateTime));
    
            var to2Parameter = to2.HasValue ?
                new ObjectParameter("To2", to2) :
                new ObjectParameter("To2", typeof(System.DateTime));
    
            var from3Parameter = from3.HasValue ?
                new ObjectParameter("From3", from3) :
                new ObjectParameter("From3", typeof(System.DateTime));
    
            var to3Parameter = to3.HasValue ?
                new ObjectParameter("To3", to3) :
                new ObjectParameter("To3", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var foreignerParameter = foreigner.HasValue ?
                new ObjectParameter("Foreigner", foreigner) :
                new ObjectParameter("Foreigner", typeof(bool));
    
            var allParameter = all.HasValue ?
                new ObjectParameter("All", all) :
                new ObjectParameter("All", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            var nzokContractsLastMonthIdsParameter = nzokContractsLastMonthIds != null ?
                new ObjectParameter("nzokContractsLastMonthIds", nzokContractsLastMonthIds) :
                new ObjectParameter("nzokContractsLastMonthIds", typeof(string));
    
            var nzokContractsLastYearIdsParameter = nzokContractsLastYearIds != null ?
                new ObjectParameter("nzokContractsLastYearIds", nzokContractsLastYearIds) :
                new ObjectParameter("nzokContractsLastYearIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EjednevnoSvPrihodi2014_Result>("EjednevnoSvPrihodi2014", from1Parameter, to1Parameter, from2Parameter, to2Parameter, from3Parameter, to3Parameter, otchetParameter, dDSParameter, varnatParameter, pMS17Parameter, histologParameter, foreignerParameter, allParameter, nzokContractsIdsParameter, nzokContractsLastMonthIdsParameter, nzokContractsLastYearIdsParameter);
        }
    
        public virtual ObjectResult<EjednevnoSvPrihodi2014All_Result> EjednevnoSvPrihodi2014All(Nullable<System.DateTime> from1, Nullable<System.DateTime> to1, Nullable<System.DateTime> from2, Nullable<System.DateTime> to2, Nullable<System.DateTime> from3, Nullable<System.DateTime> to3, string nzokContractsIds, string nzokContractsLastMonthIds, string nzokContractsLastYearIds)
        {
            var from1Parameter = from1.HasValue ?
                new ObjectParameter("From1", from1) :
                new ObjectParameter("From1", typeof(System.DateTime));
    
            var to1Parameter = to1.HasValue ?
                new ObjectParameter("To1", to1) :
                new ObjectParameter("To1", typeof(System.DateTime));
    
            var from2Parameter = from2.HasValue ?
                new ObjectParameter("From2", from2) :
                new ObjectParameter("From2", typeof(System.DateTime));
    
            var to2Parameter = to2.HasValue ?
                new ObjectParameter("To2", to2) :
                new ObjectParameter("To2", typeof(System.DateTime));
    
            var from3Parameter = from3.HasValue ?
                new ObjectParameter("From3", from3) :
                new ObjectParameter("From3", typeof(System.DateTime));
    
            var to3Parameter = to3.HasValue ?
                new ObjectParameter("To3", to3) :
                new ObjectParameter("To3", typeof(System.DateTime));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            var nzokContractsLastMonthIdsParameter = nzokContractsLastMonthIds != null ?
                new ObjectParameter("nzokContractsLastMonthIds", nzokContractsLastMonthIds) :
                new ObjectParameter("nzokContractsLastMonthIds", typeof(string));
    
            var nzokContractsLastYearIdsParameter = nzokContractsLastYearIds != null ?
                new ObjectParameter("nzokContractsLastYearIds", nzokContractsLastYearIds) :
                new ObjectParameter("nzokContractsLastYearIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EjednevnoSvPrihodi2014All_Result>("EjednevnoSvPrihodi2014All", from1Parameter, to1Parameter, from2Parameter, to2Parameter, from3Parameter, to3Parameter, nzokContractsIdsParameter, nzokContractsLastMonthIdsParameter, nzokContractsLastYearIdsParameter);
        }
    
        public virtual ObjectResult<EjednevnoSvPrihodi2014AllDop_Result> EjednevnoSvPrihodi2014AllDop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<bool> pMS17)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EjednevnoSvPrihodi2014AllDop_Result>("EjednevnoSvPrihodi2014AllDop", otDataParameter, doDataParameter, otchetParameter, pMS17Parameter);
        }
    
        public virtual ObjectResult<EjednevnoSvPrihodi2014Dop_Result> EjednevnoSvPrihodi2014Dop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<bool> pMS17, Nullable<bool> foreigner, Nullable<bool> all)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var foreignerParameter = foreigner.HasValue ?
                new ObjectParameter("Foreigner", foreigner) :
                new ObjectParameter("Foreigner", typeof(bool));
    
            var allParameter = all.HasValue ?
                new ObjectParameter("All", all) :
                new ObjectParameter("All", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EjednevnoSvPrihodi2014Dop_Result>("EjednevnoSvPrihodi2014Dop", otDataParameter, doDataParameter, otchetParameter, pMS17Parameter, foreignerParameter, allParameter);
        }
    
        public virtual ObjectResult<EjednevnoSvPrihodiNew_Result> EjednevnoSvPrihodiNew(Nullable<System.DateTime> from1, Nullable<System.DateTime> to1, Nullable<System.DateTime> from2, Nullable<System.DateTime> to2, Nullable<System.DateTime> from3, Nullable<System.DateTime> to3, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var from1Parameter = from1.HasValue ?
                new ObjectParameter("From1", from1) :
                new ObjectParameter("From1", typeof(System.DateTime));
    
            var to1Parameter = to1.HasValue ?
                new ObjectParameter("To1", to1) :
                new ObjectParameter("To1", typeof(System.DateTime));
    
            var from2Parameter = from2.HasValue ?
                new ObjectParameter("From2", from2) :
                new ObjectParameter("From2", typeof(System.DateTime));
    
            var to2Parameter = to2.HasValue ?
                new ObjectParameter("To2", to2) :
                new ObjectParameter("To2", typeof(System.DateTime));
    
            var from3Parameter = from3.HasValue ?
                new ObjectParameter("From3", from3) :
                new ObjectParameter("From3", typeof(System.DateTime));
    
            var to3Parameter = to3.HasValue ?
                new ObjectParameter("To3", to3) :
                new ObjectParameter("To3", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EjednevnoSvPrihodiNew_Result>("EjednevnoSvPrihodiNew", from1Parameter, to1Parameter, from2Parameter, to2Parameter, from3Parameter, to3Parameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual ObjectResult<EjednewnoSvedenie_Result> EjednewnoSvedenie(Nullable<System.DateTime> datata, Nullable<System.DateTime> datata00, Nullable<decimal> ot, Nullable<decimal> @do)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var datata00Parameter = datata00.HasValue ?
                new ObjectParameter("Datata00", datata00) :
                new ObjectParameter("Datata00", typeof(System.DateTime));
    
            var otParameter = ot.HasValue ?
                new ObjectParameter("Ot", ot) :
                new ObjectParameter("Ot", typeof(decimal));
    
            var doParameter = @do.HasValue ?
                new ObjectParameter("Do", @do) :
                new ObjectParameter("Do", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EjednewnoSvedenie_Result>("EjednewnoSvedenie", datataParameter, datata00Parameter, otParameter, doParameter);
        }
    
        public virtual int EpikrizaMove(Nullable<int> ot, Nullable<int> @do)
        {
            var otParameter = ot.HasValue ?
                new ObjectParameter("Ot", ot) :
                new ObjectParameter("Ot", typeof(int));
    
            var doParameter = @do.HasValue ?
                new ObjectParameter("Do", @do) :
                new ObjectParameter("Do", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EpikrizaMove", otParameter, doParameter);
        }
    
        public virtual ObjectResult<ESpravkaNapusnali_Result> ESpravkaNapusnali(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ESpravkaNapusnali_Result>("ESpravkaNapusnali", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ESpravkaPrieti_Result> ESpravkaPrieti(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ESpravkaPrieti_Result>("ESpravkaPrieti", otDataParameter, doDataParameter);
        }
    
        public virtual int ESutSvedenie(Nullable<System.DateTime> datata, Nullable<System.DateTime> datata00)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(System.DateTime));
    
            var datata00Parameter = datata00.HasValue ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenie", datataParameter, datata00Parameter);
        }
    
        public virtual int ESutSvedenieDii(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenieDii", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        public virtual int ESutSvedenieDiiDop(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenieDiiDop", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        public virtual int ESutSvedenieEFI(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenieEFI", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        public virtual int ESutSvedenieIP(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenieIP", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        public virtual int ESutSvedenieOP(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenieOP", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        public virtual int ESutSvedenieOPDop(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenieOPDop", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        public virtual int ESutSvedenieOPDop1(string datata, string datata00, Nullable<System.DateTime> dataOtchet)
        {
            var datataParameter = datata != null ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(string));
    
            var datata00Parameter = datata00 != null ?
                new ObjectParameter("datata00", datata00) :
                new ObjectParameter("datata00", typeof(string));
    
            var dataOtchetParameter = dataOtchet.HasValue ?
                new ObjectParameter("DataOtchet", dataOtchet) :
                new ObjectParameter("DataOtchet", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESutSvedenieOPDop1", datataParameter, datata00Parameter, dataOtchetParameter);
        }
    
        public virtual ObjectResult<extfiles_Result> extfiles(Nullable<decimal> pacientId, Nullable<decimal> bolId, string eventTbl, Nullable<decimal> eventId, Nullable<decimal> fLId)
        {
            var pacientIdParameter = pacientId.HasValue ?
                new ObjectParameter("PacientId", pacientId) :
                new ObjectParameter("PacientId", typeof(decimal));
    
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("BolId", bolId) :
                new ObjectParameter("BolId", typeof(decimal));
    
            var eventTblParameter = eventTbl != null ?
                new ObjectParameter("EventTbl", eventTbl) :
                new ObjectParameter("EventTbl", typeof(string));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(decimal));
    
            var fLIdParameter = fLId.HasValue ?
                new ObjectParameter("FLId", fLId) :
                new ObjectParameter("FLId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<extfiles_Result>("extfiles", pacientIdParameter, bolIdParameter, eventTblParameter, eventIdParameter, fLIdParameter);
        }
    
        public virtual int F30_Izv1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("F30_Izv1", otDataParameter, doDataParameter);
        }
    
        public virtual int F30_Izv2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("F30_Izv2");
        }
    
        public virtual int F30_Main(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("F30_Main", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<F30Speshni_Result> F30Speshni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<F30Speshni_Result>("F30Speshni", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<FacturaFirmi_Result> FacturaFirmi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturaFirmi_Result>("FacturaFirmi");
        }
    
        public virtual ObjectResult<FacturaSelect_Result> FacturaSelect(Nullable<System.DateTime> otData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturaSelect_Result>("FacturaSelect", otDataParameter);
        }
    
        public virtual ObjectResult<FacturaWrite_Result> FacturaWrite(Nullable<decimal> facID, Nullable<decimal> pacID, Nullable<bool> facVid, string facNo, Nullable<System.DateTime> facData, string facMiasto, Nullable<decimal> facPoOt, string facPIme, string facPAdres, string facPId, string facPPass, string facDDSNomer, string facPMol, string facPBanka, string facPBIC, string facPIBAN, string facPl, string facPol, Nullable<System.DateTime> facDataPol, string facSastavil, Nullable<bool> facAnul, Nullable<decimal> facSuma, Nullable<decimal> facDDS, Nullable<System.DateTime> facDataV, string facOsnovanie, Nullable<decimal> facVidPlastane, Nullable<bool> facPrinted)
        {
            var facIDParameter = facID.HasValue ?
                new ObjectParameter("FacID", facID) :
                new ObjectParameter("FacID", typeof(decimal));
    
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(decimal));
    
            var facVidParameter = facVid.HasValue ?
                new ObjectParameter("FacVid", facVid) :
                new ObjectParameter("FacVid", typeof(bool));
    
            var facNoParameter = facNo != null ?
                new ObjectParameter("FacNo", facNo) :
                new ObjectParameter("FacNo", typeof(string));
    
            var facDataParameter = facData.HasValue ?
                new ObjectParameter("FacData", facData) :
                new ObjectParameter("FacData", typeof(System.DateTime));
    
            var facMiastoParameter = facMiasto != null ?
                new ObjectParameter("FacMiasto", facMiasto) :
                new ObjectParameter("FacMiasto", typeof(string));
    
            var facPoOtParameter = facPoOt.HasValue ?
                new ObjectParameter("FacPoOt", facPoOt) :
                new ObjectParameter("FacPoOt", typeof(decimal));
    
            var facPImeParameter = facPIme != null ?
                new ObjectParameter("FacPIme", facPIme) :
                new ObjectParameter("FacPIme", typeof(string));
    
            var facPAdresParameter = facPAdres != null ?
                new ObjectParameter("FacPAdres", facPAdres) :
                new ObjectParameter("FacPAdres", typeof(string));
    
            var facPIdParameter = facPId != null ?
                new ObjectParameter("FacPId", facPId) :
                new ObjectParameter("FacPId", typeof(string));
    
            var facPPassParameter = facPPass != null ?
                new ObjectParameter("FacPPass", facPPass) :
                new ObjectParameter("FacPPass", typeof(string));
    
            var facDDSNomerParameter = facDDSNomer != null ?
                new ObjectParameter("FacDDSNomer", facDDSNomer) :
                new ObjectParameter("FacDDSNomer", typeof(string));
    
            var facPMolParameter = facPMol != null ?
                new ObjectParameter("FacPMol", facPMol) :
                new ObjectParameter("FacPMol", typeof(string));
    
            var facPBankaParameter = facPBanka != null ?
                new ObjectParameter("FacPBanka", facPBanka) :
                new ObjectParameter("FacPBanka", typeof(string));
    
            var facPBICParameter = facPBIC != null ?
                new ObjectParameter("FacPBIC", facPBIC) :
                new ObjectParameter("FacPBIC", typeof(string));
    
            var facPIBANParameter = facPIBAN != null ?
                new ObjectParameter("FacPIBAN", facPIBAN) :
                new ObjectParameter("FacPIBAN", typeof(string));
    
            var facPlParameter = facPl != null ?
                new ObjectParameter("FacPl", facPl) :
                new ObjectParameter("FacPl", typeof(string));
    
            var facPolParameter = facPol != null ?
                new ObjectParameter("FacPol", facPol) :
                new ObjectParameter("FacPol", typeof(string));
    
            var facDataPolParameter = facDataPol.HasValue ?
                new ObjectParameter("FacDataPol", facDataPol) :
                new ObjectParameter("FacDataPol", typeof(System.DateTime));
    
            var facSastavilParameter = facSastavil != null ?
                new ObjectParameter("FacSastavil", facSastavil) :
                new ObjectParameter("FacSastavil", typeof(string));
    
            var facAnulParameter = facAnul.HasValue ?
                new ObjectParameter("FacAnul", facAnul) :
                new ObjectParameter("FacAnul", typeof(bool));
    
            var facSumaParameter = facSuma.HasValue ?
                new ObjectParameter("FacSuma", facSuma) :
                new ObjectParameter("FacSuma", typeof(decimal));
    
            var facDDSParameter = facDDS.HasValue ?
                new ObjectParameter("FacDDS", facDDS) :
                new ObjectParameter("FacDDS", typeof(decimal));
    
            var facDataVParameter = facDataV.HasValue ?
                new ObjectParameter("FacDataV", facDataV) :
                new ObjectParameter("FacDataV", typeof(System.DateTime));
    
            var facOsnovanieParameter = facOsnovanie != null ?
                new ObjectParameter("FacOsnovanie", facOsnovanie) :
                new ObjectParameter("FacOsnovanie", typeof(string));
    
            var facVidPlastaneParameter = facVidPlastane.HasValue ?
                new ObjectParameter("FacVidPlastane", facVidPlastane) :
                new ObjectParameter("FacVidPlastane", typeof(decimal));
    
            var facPrintedParameter = facPrinted.HasValue ?
                new ObjectParameter("FacPrinted", facPrinted) :
                new ObjectParameter("FacPrinted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturaWrite_Result>("FacturaWrite", facIDParameter, pacIDParameter, facVidParameter, facNoParameter, facDataParameter, facMiastoParameter, facPoOtParameter, facPImeParameter, facPAdresParameter, facPIdParameter, facPPassParameter, facDDSNomerParameter, facPMolParameter, facPBankaParameter, facPBICParameter, facPIBANParameter, facPlParameter, facPolParameter, facDataPolParameter, facSastavilParameter, facAnulParameter, facSumaParameter, facDDSParameter, facDataVParameter, facOsnovanieParameter, facVidPlastaneParameter, facPrintedParameter);
        }
    
        public virtual ObjectResult<FacturaWriteNew_Result> FacturaWriteNew(Nullable<decimal> facID, Nullable<decimal> pacID, Nullable<bool> facVid, string facNo, Nullable<System.DateTime> facData, string facMiasto, Nullable<decimal> facPoOt, string facPIme, string facPAdres, string facPId, string facPPass, string facDDSNomer, string facPMol, string facPBanka, string facPBIC, string facPIBAN, string facPl, string facPol, Nullable<System.DateTime> facDataPol, string facSastavil, Nullable<bool> facAnul, Nullable<decimal> facSuma, Nullable<decimal> facDDS, Nullable<System.DateTime> facDataV, string facOsnovanie, Nullable<decimal> facVidPlastane, Nullable<bool> facPrinted)
        {
            var facIDParameter = facID.HasValue ?
                new ObjectParameter("FacID", facID) :
                new ObjectParameter("FacID", typeof(decimal));
    
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(decimal));
    
            var facVidParameter = facVid.HasValue ?
                new ObjectParameter("FacVid", facVid) :
                new ObjectParameter("FacVid", typeof(bool));
    
            var facNoParameter = facNo != null ?
                new ObjectParameter("FacNo", facNo) :
                new ObjectParameter("FacNo", typeof(string));
    
            var facDataParameter = facData.HasValue ?
                new ObjectParameter("FacData", facData) :
                new ObjectParameter("FacData", typeof(System.DateTime));
    
            var facMiastoParameter = facMiasto != null ?
                new ObjectParameter("FacMiasto", facMiasto) :
                new ObjectParameter("FacMiasto", typeof(string));
    
            var facPoOtParameter = facPoOt.HasValue ?
                new ObjectParameter("FacPoOt", facPoOt) :
                new ObjectParameter("FacPoOt", typeof(decimal));
    
            var facPImeParameter = facPIme != null ?
                new ObjectParameter("FacPIme", facPIme) :
                new ObjectParameter("FacPIme", typeof(string));
    
            var facPAdresParameter = facPAdres != null ?
                new ObjectParameter("FacPAdres", facPAdres) :
                new ObjectParameter("FacPAdres", typeof(string));
    
            var facPIdParameter = facPId != null ?
                new ObjectParameter("FacPId", facPId) :
                new ObjectParameter("FacPId", typeof(string));
    
            var facPPassParameter = facPPass != null ?
                new ObjectParameter("FacPPass", facPPass) :
                new ObjectParameter("FacPPass", typeof(string));
    
            var facDDSNomerParameter = facDDSNomer != null ?
                new ObjectParameter("FacDDSNomer", facDDSNomer) :
                new ObjectParameter("FacDDSNomer", typeof(string));
    
            var facPMolParameter = facPMol != null ?
                new ObjectParameter("FacPMol", facPMol) :
                new ObjectParameter("FacPMol", typeof(string));
    
            var facPBankaParameter = facPBanka != null ?
                new ObjectParameter("FacPBanka", facPBanka) :
                new ObjectParameter("FacPBanka", typeof(string));
    
            var facPBICParameter = facPBIC != null ?
                new ObjectParameter("FacPBIC", facPBIC) :
                new ObjectParameter("FacPBIC", typeof(string));
    
            var facPIBANParameter = facPIBAN != null ?
                new ObjectParameter("FacPIBAN", facPIBAN) :
                new ObjectParameter("FacPIBAN", typeof(string));
    
            var facPlParameter = facPl != null ?
                new ObjectParameter("FacPl", facPl) :
                new ObjectParameter("FacPl", typeof(string));
    
            var facPolParameter = facPol != null ?
                new ObjectParameter("FacPol", facPol) :
                new ObjectParameter("FacPol", typeof(string));
    
            var facDataPolParameter = facDataPol.HasValue ?
                new ObjectParameter("FacDataPol", facDataPol) :
                new ObjectParameter("FacDataPol", typeof(System.DateTime));
    
            var facSastavilParameter = facSastavil != null ?
                new ObjectParameter("FacSastavil", facSastavil) :
                new ObjectParameter("FacSastavil", typeof(string));
    
            var facAnulParameter = facAnul.HasValue ?
                new ObjectParameter("FacAnul", facAnul) :
                new ObjectParameter("FacAnul", typeof(bool));
    
            var facSumaParameter = facSuma.HasValue ?
                new ObjectParameter("FacSuma", facSuma) :
                new ObjectParameter("FacSuma", typeof(decimal));
    
            var facDDSParameter = facDDS.HasValue ?
                new ObjectParameter("FacDDS", facDDS) :
                new ObjectParameter("FacDDS", typeof(decimal));
    
            var facDataVParameter = facDataV.HasValue ?
                new ObjectParameter("FacDataV", facDataV) :
                new ObjectParameter("FacDataV", typeof(System.DateTime));
    
            var facOsnovanieParameter = facOsnovanie != null ?
                new ObjectParameter("FacOsnovanie", facOsnovanie) :
                new ObjectParameter("FacOsnovanie", typeof(string));
    
            var facVidPlastaneParameter = facVidPlastane.HasValue ?
                new ObjectParameter("FacVidPlastane", facVidPlastane) :
                new ObjectParameter("FacVidPlastane", typeof(decimal));
    
            var facPrintedParameter = facPrinted.HasValue ?
                new ObjectParameter("FacPrinted", facPrinted) :
                new ObjectParameter("FacPrinted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturaWriteNew_Result>("FacturaWriteNew", facIDParameter, pacIDParameter, facVidParameter, facNoParameter, facDataParameter, facMiastoParameter, facPoOtParameter, facPImeParameter, facPAdresParameter, facPIdParameter, facPPassParameter, facDDSNomerParameter, facPMolParameter, facPBankaParameter, facPBICParameter, facPIBANParameter, facPlParameter, facPolParameter, facDataPolParameter, facSastavilParameter, facAnulParameter, facSumaParameter, facDDSParameter, facDataVParameter, facOsnovanieParameter, facVidPlastaneParameter, facPrintedParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart1_Result> FinOtchetPart1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart1_Result>("FinOtchetPart1", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart2_Result> FinOtchetPart2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart2_Result>("FinOtchetPart2", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart3_Result> FinOtchetPart3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart3_Result>("FinOtchetPart3", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart4_Result> FinOtchetPart4(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart4_Result>("FinOtchetPart4", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart5_Result> FinOtchetPart5(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart5_Result>("FinOtchetPart5", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart6_Result> FinOtchetPart6(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart6_Result>("FinOtchetPart6", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart8_Result> FinOtchetPart8(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart8_Result>("FinOtchetPart8", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<FinOtchetPart81_Result> FinOtchetPart81(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinOtchetPart81_Result>("FinOtchetPart81", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<Formular3_00_Result> Formular3_00(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Formular3_00_Result>("Formular3_00", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Formular3_03_Result> Formular3_03(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Formular3_03_Result>("Formular3_03", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Formular3_32_Result> Formular3_32(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Formular3_32_Result>("Formular3_32", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<GenBoListTablici_Result> GenBoListTablici(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenBoListTablici_Result>("GenBoListTablici", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<GenMddLabIzvadka_Result> GenMddLabIzvadka(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenMddLabIzvadka_Result>("GenMddLabIzvadka", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<GenMddRodIzvadka_Result> GenMddRodIzvadka(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenMddRodIzvadka_Result>("GenMddRodIzvadka", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int GenMDDTabAll_2006(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenMDDTabAll_2006", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int GenMDDTablici_2006(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenMDDTablici_2006", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int GenMDDTabROD_2006(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenMDDTabROD_2006", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int GenMDDxls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenMDDxls");
        }
    
        public virtual int GenMddxlsIzvadka(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenMddxlsIzvadka", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<GenVsiListTablici_Result> GenVsiListTablici(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenVsiListTablici_Result>("GenVsiListTablici", otDataParameter, doDataParameter, medCenturParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Get24hProceduriDni(Nullable<int> bolId)
        {
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("bolId", bolId) :
                new ObjectParameter("bolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get24hProceduriDni", bolIdParameter);
        }
    
        public virtual ObjectResult<GetBLInfo_Result> GetBLInfo(Nullable<int> pacID, Nullable<System.DateTime> zaData, Nullable<int> bolID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            var zaDataParameter = zaData.HasValue ?
                new ObjectParameter("ZaData", zaData) :
                new ObjectParameter("ZaData", typeof(System.DateTime));
    
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBLInfo_Result>("GetBLInfo", pacIDParameter, zaDataParameter, bolIDParameter);
        }
    
        public virtual ObjectResult<GetClinicalProcByTimeRange_Result> GetClinicalProcByTimeRange(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<bool> pMS17, Nullable<int> isEuPatient)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var isEuPatientParameter = isEuPatient.HasValue ?
                new ObjectParameter("IsEuPatient", isEuPatient) :
                new ObjectParameter("IsEuPatient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClinicalProcByTimeRange_Result>("GetClinicalProcByTimeRange", otDataParameter, doDataParameter, otchetParameter, pMS17Parameter, isEuPatientParameter);
        }
    
        public virtual ObjectResult<GetCntEQKod_Result> GetCntEQKod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCntEQKod_Result>("GetCntEQKod");
        }
    
        public virtual ObjectResult<GetCntEQName_Result> GetCntEQName(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCntEQName_Result>("GetCntEQName", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<GetCntEQNameKDKK_Result> GetCntEQNameKDKK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCntEQNameKDKK_Result>("GetCntEQNameKDKK");
        }
    
        public virtual ObjectResult<GetCountPacient_Result> GetCountPacient(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountPacient_Result>("GetCountPacient", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<string> GetDiagModelText(Nullable<int> diagId)
        {
            var diagIdParameter = diagId.HasValue ?
                new ObjectParameter("DiagId", diagId) :
                new ObjectParameter("DiagId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDiagModelText", diagIdParameter);
        }
    
        public virtual ObjectResult<string> GetDiagSpecText(Nullable<int> diagId)
        {
            var diagIdParameter = diagId.HasValue ?
                new ObjectParameter("DiagId", diagId) :
                new ObjectParameter("DiagId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDiagSpecText", diagIdParameter);
        }
    
        public virtual ObjectResult<string> GetDiagText(Nullable<int> diagId)
        {
            var diagIdParameter = diagId.HasValue ?
                new ObjectParameter("DiagId", diagId) :
                new ObjectParameter("DiagId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDiagText", diagIdParameter);
        }
    
        public virtual int GetDoneNewProcByKPLechenieIDs(string list)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDoneNewProcByKPLechenieIDs", listParameter);
        }
    
        public virtual ObjectResult<string> GetKamOtchetaText(Nullable<int> medCentarId)
        {
            var medCentarIdParameter = medCentarId.HasValue ?
                new ObjectParameter("MedCentarId", medCentarId) :
                new ObjectParameter("MedCentarId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetKamOtchetaText", medCentarIdParameter);
        }
    
        public virtual ObjectResult<getLabResults_Result> getLabResults(Nullable<int> bolid)
        {
            var bolidParameter = bolid.HasValue ?
                new ObjectParameter("bolid", bolid) :
                new ObjectParameter("bolid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLabResults_Result>("getLabResults", bolidParameter);
        }
    
        public virtual ObjectResult<GetLabSelector_Result> GetLabSelector(Nullable<int> bolid)
        {
            var bolidParameter = bolid.HasValue ?
                new ObjectParameter("bolid", bolid) :
                new ObjectParameter("bolid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLabSelector_Result>("GetLabSelector", bolidParameter);
        }
    
        public virtual ObjectResult<string> GetLekarZvanie(Nullable<int> personalId)
        {
            var personalIdParameter = personalId.HasValue ?
                new ObjectParameter("PersonalId", personalId) :
                new ObjectParameter("PersonalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLekarZvanie", personalIdParameter);
        }
    
        public virtual ObjectResult<GetMedikamenti_Result> GetMedikamenti(Nullable<int> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMedikamenti_Result>("GetMedikamenti", bolIDParameter);
        }
    
        public virtual ObjectResult<string> GetNomenk(Nullable<int> id, Nullable<bool> sKod, Nullable<bool> postId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var sKodParameter = sKod.HasValue ?
                new ObjectParameter("sKod", sKod) :
                new ObjectParameter("sKod", typeof(bool));
    
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetNomenk", idParameter, sKodParameter, postIdParameter);
        }
    
        public virtual ObjectResult<GetStacionarStatus_Result> GetStacionarStatus(Nullable<System.DateTime> datata)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStacionarStatus_Result>("GetStacionarStatus", datataParameter);
        }
    
        public virtual ObjectResult<string> GetUslugaText(Nullable<int> uslugaId)
        {
            var uslugaIdParameter = uslugaId.HasValue ?
                new ObjectParameter("UslugaId", uslugaId) :
                new ObjectParameter("UslugaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUslugaText", uslugaIdParameter);
        }
    
        public virtual int GetValueFromFK(string fkTableName, string fkColumnName, Nullable<decimal> fkColValue, string selectedColName)
        {
            var fkTableNameParameter = fkTableName != null ?
                new ObjectParameter("fkTableName", fkTableName) :
                new ObjectParameter("fkTableName", typeof(string));
    
            var fkColumnNameParameter = fkColumnName != null ?
                new ObjectParameter("fkColumnName", fkColumnName) :
                new ObjectParameter("fkColumnName", typeof(string));
    
            var fkColValueParameter = fkColValue.HasValue ?
                new ObjectParameter("fkColValue", fkColValue) :
                new ObjectParameter("fkColValue", typeof(decimal));
    
            var selectedColNameParameter = selectedColName != null ?
                new ObjectParameter("SelectedColName", selectedColName) :
                new ObjectParameter("SelectedColName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetValueFromFK", fkTableNameParameter, fkColumnNameParameter, fkColValueParameter, selectedColNameParameter);
        }
    
        public virtual ObjectResult<GreshenUINZam_Naet_Result> GreshenUINZam_Naet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GreshenUINZam_Naet_Result>("GreshenUINZam_Naet");
        }
    
        public virtual ObjectResult<HemodializaNasoch_Result> HemodializaNasoch(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HemodializaNasoch_Result>("HemodializaNasoch", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<hipoPregled_Result> hipoPregled(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hipoPregled_Result>("hipoPregled", idParameter);
        }
    
        public virtual ObjectResult<HirurgDejnostOtdel_Result> HirurgDejnostOtdel(Nullable<System.DateTime> data1, Nullable<System.DateTime> data2)
        {
            var data1Parameter = data1.HasValue ?
                new ObjectParameter("Data1", data1) :
                new ObjectParameter("Data1", typeof(System.DateTime));
    
            var data2Parameter = data2.HasValue ?
                new ObjectParameter("Data2", data2) :
                new ObjectParameter("Data2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HirurgDejnostOtdel_Result>("HirurgDejnostOtdel", data1Parameter, data2Parameter);
        }
    
        public virtual ObjectResult<HirurgiaTbl5_Result> HirurgiaTbl5(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HirurgiaTbl5_Result>("HirurgiaTbl5", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<HirurgichenJurnal_Result> HirurgichenJurnal(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HirurgichenJurnal_Result>("HirurgichenJurnal", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<HmHronologiaHEM_Result> HmHronologiaHEM(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HmHronologiaHEM_Result>("HmHronologiaHEM", iDParameter);
        }
    
        public virtual ObjectResult<HospitalActivity_Result> HospitalActivity(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> currDate, Nullable<decimal> currMonth, Nullable<decimal> currYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var currDateParameter = currDate.HasValue ?
                new ObjectParameter("CurrDate", currDate) :
                new ObjectParameter("CurrDate", typeof(System.DateTime));
    
            var currMonthParameter = currMonth.HasValue ?
                new ObjectParameter("CurrMonth", currMonth) :
                new ObjectParameter("CurrMonth", typeof(decimal));
    
            var currYearParameter = currYear.HasValue ?
                new ObjectParameter("CurrYear", currYear) :
                new ObjectParameter("CurrYear", typeof(decimal));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivity_Result>("HospitalActivity", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, currDateParameter, currMonthParameter, currYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivity1_Result> HospitalActivity1(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> currDate, Nullable<decimal> currMonth, Nullable<decimal> currYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var currDateParameter = currDate.HasValue ?
                new ObjectParameter("CurrDate", currDate) :
                new ObjectParameter("CurrDate", typeof(System.DateTime));
    
            var currMonthParameter = currMonth.HasValue ?
                new ObjectParameter("CurrMonth", currMonth) :
                new ObjectParameter("CurrMonth", typeof(decimal));
    
            var currYearParameter = currYear.HasValue ?
                new ObjectParameter("CurrYear", currYear) :
                new ObjectParameter("CurrYear", typeof(decimal));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivity1_Result>("HospitalActivity1", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, currDateParameter, currMonthParameter, currYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivity2_Result> HospitalActivity2(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> currDate, Nullable<decimal> currMonth, Nullable<decimal> currYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var currDateParameter = currDate.HasValue ?
                new ObjectParameter("CurrDate", currDate) :
                new ObjectParameter("CurrDate", typeof(System.DateTime));
    
            var currMonthParameter = currMonth.HasValue ?
                new ObjectParameter("CurrMonth", currMonth) :
                new ObjectParameter("CurrMonth", typeof(decimal));
    
            var currYearParameter = currYear.HasValue ?
                new ObjectParameter("CurrYear", currYear) :
                new ObjectParameter("CurrYear", typeof(decimal));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivity2_Result>("HospitalActivity2", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, currDateParameter, currMonthParameter, currYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivityA_Result> HospitalActivityA(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> currDate, Nullable<decimal> currMonth, Nullable<decimal> currYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var currDateParameter = currDate.HasValue ?
                new ObjectParameter("CurrDate", currDate) :
                new ObjectParameter("CurrDate", typeof(System.DateTime));
    
            var currMonthParameter = currMonth.HasValue ?
                new ObjectParameter("CurrMonth", currMonth) :
                new ObjectParameter("CurrMonth", typeof(decimal));
    
            var currYearParameter = currYear.HasValue ?
                new ObjectParameter("CurrYear", currYear) :
                new ObjectParameter("CurrYear", typeof(decimal));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivityA_Result>("HospitalActivityA", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, currDateParameter, currMonthParameter, currYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivityNew1_Result> HospitalActivityNew1(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> dayMonth, Nullable<System.DateTime> dayYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var dayMonthParameter = dayMonth.HasValue ?
                new ObjectParameter("DayMonth", dayMonth) :
                new ObjectParameter("DayMonth", typeof(System.DateTime));
    
            var dayYearParameter = dayYear.HasValue ?
                new ObjectParameter("DayYear", dayYear) :
                new ObjectParameter("DayYear", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivityNew1_Result>("HospitalActivityNew1", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, dayMonthParameter, dayYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivityNew1Dop_Result> HospitalActivityNew1Dop(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> dayMonth, Nullable<System.DateTime> dayYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var dayMonthParameter = dayMonth.HasValue ?
                new ObjectParameter("DayMonth", dayMonth) :
                new ObjectParameter("DayMonth", typeof(System.DateTime));
    
            var dayYearParameter = dayYear.HasValue ?
                new ObjectParameter("DayYear", dayYear) :
                new ObjectParameter("DayYear", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivityNew1Dop_Result>("HospitalActivityNew1Dop", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, dayMonthParameter, dayYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivityNew2_Result> HospitalActivityNew2(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> dayMonth, Nullable<System.DateTime> dayYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var dayMonthParameter = dayMonth.HasValue ?
                new ObjectParameter("DayMonth", dayMonth) :
                new ObjectParameter("DayMonth", typeof(System.DateTime));
    
            var dayYearParameter = dayYear.HasValue ?
                new ObjectParameter("DayYear", dayYear) :
                new ObjectParameter("DayYear", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivityNew2_Result>("HospitalActivityNew2", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, dayMonthParameter, dayYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivityNew2Dop_Result> HospitalActivityNew2Dop(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> dayMonth, Nullable<System.DateTime> dayYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var dayMonthParameter = dayMonth.HasValue ?
                new ObjectParameter("DayMonth", dayMonth) :
                new ObjectParameter("DayMonth", typeof(System.DateTime));
    
            var dayYearParameter = dayYear.HasValue ?
                new ObjectParameter("DayYear", dayYear) :
                new ObjectParameter("DayYear", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivityNew2Dop_Result>("HospitalActivityNew2Dop", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, dayMonthParameter, dayYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalActivityNew3_Result> HospitalActivityNew3(Nullable<System.DateTime> day1, Nullable<System.DateTime> day2, Nullable<System.DateTime> day3, Nullable<System.DateTime> day4, Nullable<System.DateTime> day5, Nullable<System.DateTime> day6, Nullable<System.DateTime> day7, Nullable<System.DateTime> dayMonth, Nullable<System.DateTime> dayYear, Nullable<decimal> lZ)
        {
            var day1Parameter = day1.HasValue ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(System.DateTime));
    
            var day2Parameter = day2.HasValue ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(System.DateTime));
    
            var day3Parameter = day3.HasValue ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(System.DateTime));
    
            var day4Parameter = day4.HasValue ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(System.DateTime));
    
            var day5Parameter = day5.HasValue ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(System.DateTime));
    
            var day6Parameter = day6.HasValue ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(System.DateTime));
    
            var day7Parameter = day7.HasValue ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(System.DateTime));
    
            var dayMonthParameter = dayMonth.HasValue ?
                new ObjectParameter("DayMonth", dayMonth) :
                new ObjectParameter("DayMonth", typeof(System.DateTime));
    
            var dayYearParameter = dayYear.HasValue ?
                new ObjectParameter("DayYear", dayYear) :
                new ObjectParameter("DayYear", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalActivityNew3_Result>("HospitalActivityNew3", day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, dayMonthParameter, dayYearParameter, lZParameter);
        }
    
        public virtual ObjectResult<HospitalMesto_Result> HospitalMesto(Nullable<System.DateTime> datata)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HospitalMesto_Result>("HospitalMesto", datataParameter);
        }
    
        public virtual int HospPacienti(Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HospPacienti", zveno1Parameter, zveno2Parameter);
        }
    
        public virtual int HospPacientiIzv(Nullable<System.DateTime> datata)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("datata", datata) :
                new ObjectParameter("datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HospPacientiIzv", datataParameter);
        }
    
        public virtual ObjectResult<HronologiaAlert_Result> HronologiaAlert(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaAlert_Result>("HronologiaAlert", iDParameter);
        }
    
        public virtual ObjectResult<HronologiaIntLechenie_Result> HronologiaIntLechenie(Nullable<int> iLID)
        {
            var iLIDParameter = iLID.HasValue ?
                new ObjectParameter("ILID", iLID) :
                new ObjectParameter("ILID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaIntLechenie_Result>("HronologiaIntLechenie", iLIDParameter);
        }
    
        public virtual ObjectResult<HronologiaKom_Result> HronologiaKom(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaKom_Result>("HronologiaKom", iDParameter);
        }
    
        public virtual ObjectResult<HronologiaObs_Result> HronologiaObs(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaObs_Result>("HronologiaObs", iDParameter);
        }
    
        public virtual ObjectResult<HronologiaPO_Result> HronologiaPO(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaPO_Result>("HronologiaPO", iDParameter);
        }
    
        public virtual ObjectResult<HronologiaPulnaAutopsia_Result> HronologiaPulnaAutopsia(Nullable<int> pochinalID)
        {
            var pochinalIDParameter = pochinalID.HasValue ?
                new ObjectParameter("PochinalID", pochinalID) :
                new ObjectParameter("PochinalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaPulnaAutopsia_Result>("HronologiaPulnaAutopsia", pochinalIDParameter);
        }
    
        public virtual ObjectResult<HronologiaPulnaKonsultacia_Result> HronologiaPulnaKonsultacia(Nullable<int> konID)
        {
            var konIDParameter = konID.HasValue ?
                new ObjectParameter("KonID", konID) :
                new ObjectParameter("KonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaPulnaKonsultacia_Result>("HronologiaPulnaKonsultacia", konIDParameter);
        }
    
        public virtual ObjectResult<HronologiaPulnaPregled_Result> HronologiaPulnaPregled(Nullable<int> pregledID)
        {
            var pregledIDParameter = pregledID.HasValue ?
                new ObjectParameter("PregledID", pregledID) :
                new ObjectParameter("PregledID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaPulnaPregled_Result>("HronologiaPulnaPregled", pregledIDParameter);
        }
    
        public virtual ObjectResult<HronologiaPulnaRegistracia_Result> HronologiaPulnaRegistracia(Nullable<int> pacientID)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaPulnaRegistracia_Result>("HronologiaPulnaRegistracia", pacientIDParameter);
        }
    
        public virtual ObjectResult<HronologiaPulnaSmurt_Result> HronologiaPulnaSmurt(Nullable<int> pochinalID)
        {
            var pochinalIDParameter = pochinalID.HasValue ?
                new ObjectParameter("PochinalID", pochinalID) :
                new ObjectParameter("PochinalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HronologiaPulnaSmurt_Result>("HronologiaPulnaSmurt", pochinalIDParameter);
        }
    
        public virtual ObjectResult<ICB008Export_Result> ICB008Export(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ICB008Export_Result>("ICB008Export", otDataParameter, doDataParameter, medCenturParameter);
        }
    
        public virtual int ICB008ExportOld(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ICB008ExportOld", otDataParameter, doDataParameter, medCenturParameter);
        }
    
        public virtual ObjectResult<ICB008ExportPro_Result> ICB008ExportPro(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ICB008ExportPro_Result>("ICB008ExportPro", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ImplantantiBL_Result> ImplantantiBL(Nullable<decimal> bolId)
        {
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("BolId", bolId) :
                new ObjectParameter("BolId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiBL_Result>("ImplantantiBL", bolIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiBLNoNZOK_Result> ImplantantiBLNoNZOK(Nullable<decimal> bolId)
        {
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("BolId", bolId) :
                new ObjectParameter("BolId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiBLNoNZOK_Result>("ImplantantiBLNoNZOK", bolIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiDII_Result> ImplantantiDII(Nullable<decimal> dIIId)
        {
            var dIIIdParameter = dIIId.HasValue ?
                new ObjectParameter("DIIId", dIIId) :
                new ObjectParameter("DIIId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiDII_Result>("ImplantantiDII", dIIIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiDIIDop_Result> ImplantantiDIIDop(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiDIIDop_Result>("ImplantantiDIIDop", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiDIIDopNoNZOK_Result> ImplantantiDIIDopNoNZOK(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiDIIDopNoNZOK_Result>("ImplantantiDIIDopNoNZOK", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiDIINoNZOK_Result> ImplantantiDIINoNZOK(Nullable<decimal> dIIId)
        {
            var dIIIdParameter = dIIId.HasValue ?
                new ObjectParameter("DIIId", dIIId) :
                new ObjectParameter("DIIId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiDIINoNZOK_Result>("ImplantantiDIINoNZOK", dIIIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiEFI_Result> ImplantantiEFI(Nullable<decimal> eFIId)
        {
            var eFIIdParameter = eFIId.HasValue ?
                new ObjectParameter("EFIId", eFIId) :
                new ObjectParameter("EFIId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiEFI_Result>("ImplantantiEFI", eFIIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiEFIDop_Result> ImplantantiEFIDop(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiEFIDop_Result>("ImplantantiEFIDop", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiEFIDopNoNZOK_Result> ImplantantiEFIDopNoNZOK(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiEFIDopNoNZOK_Result>("ImplantantiEFIDopNoNZOK", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiEFINoNZOK_Result> ImplantantiEFINoNZOK(Nullable<decimal> eFIId)
        {
            var eFIIdParameter = eFIId.HasValue ?
                new ObjectParameter("EFIId", eFIId) :
                new ObjectParameter("EFIId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiEFINoNZOK_Result>("ImplantantiEFINoNZOK", eFIIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiIP_Result> ImplantantiIP(Nullable<decimal> iPId)
        {
            var iPIdParameter = iPId.HasValue ?
                new ObjectParameter("IPId", iPId) :
                new ObjectParameter("IPId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiIP_Result>("ImplantantiIP", iPIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiIPDop_Result> ImplantantiIPDop(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiIPDop_Result>("ImplantantiIPDop", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiIPDopNoNZOK_Result> ImplantantiIPDopNoNZOK(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiIPDopNoNZOK_Result>("ImplantantiIPDopNoNZOK", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiIPNoNZOK_Result> ImplantantiIPNoNZOK(Nullable<decimal> iPId)
        {
            var iPIdParameter = iPId.HasValue ?
                new ObjectParameter("IPId", iPId) :
                new ObjectParameter("IPId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiIPNoNZOK_Result>("ImplantantiIPNoNZOK", iPIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiOper_Result> ImplantantiOper(Nullable<decimal> operId)
        {
            var operIdParameter = operId.HasValue ?
                new ObjectParameter("OperId", operId) :
                new ObjectParameter("OperId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiOper_Result>("ImplantantiOper", operIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiOperDop_Result> ImplantantiOperDop(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiOperDop_Result>("ImplantantiOperDop", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiOperDopNoNZOK_Result> ImplantantiOperDopNoNZOK(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiOperDopNoNZOK_Result>("ImplantantiOperDopNoNZOK", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiOperNoNZOK_Result> ImplantantiOperNoNZOK(Nullable<decimal> operId)
        {
            var operIdParameter = operId.HasValue ?
                new ObjectParameter("OperId", operId) :
                new ObjectParameter("OperId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiOperNoNZOK_Result>("ImplantantiOperNoNZOK", operIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiPoPacienti_Result> ImplantantiPoPacienti(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<bool> otchet, Nullable<bool> dDS, Nullable<int> periodID, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(bool));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(bool));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiPoPacienti_Result>("ImplantantiPoPacienti", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, dDSParameter, periodIDParameter, varnatParameter);
        }
    
        public virtual ObjectResult<ImplantantiProc_Result> ImplantantiProc(Nullable<decimal> proId)
        {
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiProc_Result>("ImplantantiProc", proIdParameter);
        }
    
        public virtual ObjectResult<ImplantantiProcDop_Result> ImplantantiProcDop(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiProcDop_Result>("ImplantantiProcDop", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiProcDopNoNZOK_Result> ImplantantiProcDopNoNZOK(Nullable<decimal> izsID, Nullable<int> kpID, Nullable<int> diagID)
        {
            var izsIDParameter = izsID.HasValue ?
                new ObjectParameter("IzsID", izsID) :
                new ObjectParameter("IzsID", typeof(decimal));
    
            var kpIDParameter = kpID.HasValue ?
                new ObjectParameter("KpID", kpID) :
                new ObjectParameter("KpID", typeof(int));
    
            var diagIDParameter = diagID.HasValue ?
                new ObjectParameter("DiagID", diagID) :
                new ObjectParameter("DiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiProcDopNoNZOK_Result>("ImplantantiProcDopNoNZOK", izsIDParameter, kpIDParameter, diagIDParameter);
        }
    
        public virtual ObjectResult<ImplantantiProcNoNZOK_Result> ImplantantiProcNoNZOK(Nullable<decimal> proId)
        {
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplantantiProcNoNZOK_Result>("ImplantantiProcNoNZOK", proIdParameter);
        }
    
        public virtual ObjectResult<ImplBolLech_Result> ImplBolLech(Nullable<decimal> iD, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImplBolLech_Result>("ImplBolLech", iDParameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual ObjectResult<InfarctH01_H17_Result> InfarctH01_H17(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InfarctH01_H17_Result>("InfarctH01_H17", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<InsultH01_H12_Result> InsultH01_H12(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsultH01_H12_Result>("InsultH01_H12", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<IPDIIPoLekari_Result> IPDIIPoLekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IPDIIPoLekari_Result>("IPDIIPoLekari", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<IzpisaniPoKP_Result> IzpisaniPoKP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzpisaniPoKP_Result>("IzpisaniPoKP", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual ObjectResult<IzsFish_Result> IzsFish(string myTable, Nullable<int> iD)
        {
            var myTableParameter = myTable != null ?
                new ObjectParameter("MyTable", myTable) :
                new ObjectParameter("MyTable", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzsFish_Result>("IzsFish", myTableParameter, iDParameter);
        }
    
        public virtual int IzsOrderDelete(string myTable, Nullable<int> proID)
        {
            var myTableParameter = myTable != null ?
                new ObjectParameter("MyTable", myTable) :
                new ObjectParameter("MyTable", typeof(string));
    
            var proIDParameter = proID.HasValue ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IzsOrderDelete", myTableParameter, proIDParameter);
        }
    
        public virtual ObjectResult<JournalBolList_Result> JournalBolList(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JournalBolList_Result>("JournalBolList", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<JournalFNI_Result> JournalFNI(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ1, Nullable<int> lZ2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZ1Parameter = lZ1.HasValue ?
                new ObjectParameter("LZ1", lZ1) :
                new ObjectParameter("LZ1", typeof(int));
    
            var lZ2Parameter = lZ2.HasValue ?
                new ObjectParameter("LZ2", lZ2) :
                new ObjectParameter("LZ2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JournalFNI_Result>("JournalFNI", otDataParameter, doDataParameter, lZ1Parameter, lZ2Parameter);
        }
    
        public virtual ObjectResult<JournalNapusnali_Result> JournalNapusnali(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JournalNapusnali_Result>("JournalNapusnali", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<JournalPlanPriem_Result> JournalPlanPriem(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JournalPlanPriem_Result>("JournalPlanPriem", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<JurnalJivorodeni_Result> JurnalJivorodeni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JurnalJivorodeni_Result>("JurnalJivorodeni", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<JurnalRodilki_Result> JurnalRodilki(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JurnalRodilki_Result>("JurnalRodilki", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<KartaNapStac_Result> KartaNapStac(Nullable<int> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KartaNapStac_Result>("KartaNapStac", bolIDParameter);
        }
    
        public virtual ObjectResult<KnigaPrietiBolni_Result> KnigaPrietiBolni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KnigaPrietiBolni_Result>("KnigaPrietiBolni", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<KonsultSpec_Result> KonsultSpec(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KonsultSpec_Result>("KonsultSpec", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<KontrolImplantanti_Result> KontrolImplantanti(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontrolImplantanti_Result>("KontrolImplantanti", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<KontrolImplantantiRaz_Result> KontrolImplantantiRaz(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontrolImplantantiRaz_Result>("KontrolImplantantiRaz", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<KontrSpravka_Result> KontrSpravka(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontrSpravka_Result>("KontrSpravka", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<KontrSprKpr_Result> KontrSprKpr(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontrSprKpr_Result>("KontrSprKpr", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<KontsSprKlinPat_Result> KontsSprKlinPat(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> blOtchet, Nullable<int> pKOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var blOtchetParameter = blOtchet.HasValue ?
                new ObjectParameter("BlOtchet", blOtchet) :
                new ObjectParameter("BlOtchet", typeof(int));
    
            var pKOtchetParameter = pKOtchet.HasValue ?
                new ObjectParameter("PKOtchet", pKOtchet) :
                new ObjectParameter("PKOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KontsSprKlinPat_Result>("KontsSprKlinPat", otDataParameter, doDataParameter, blOtchetParameter, pKOtchetParameter);
        }
    
        public virtual ObjectResult<Kp251_Result> Kp251(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kp251_Result>("Kp251", idParameter);
        }
    
        public virtual ObjectResult<KPImplALL_Result> KPImplALL(Nullable<int> toDelete, Nullable<decimal> kPIID, Nullable<decimal> klinicnaPatekaID, string kPIKod, Nullable<decimal> kPIVid, Nullable<decimal> cenata, Nullable<System.DateTime> datata, Nullable<bool> kPIDDS)
        {
            var toDeleteParameter = toDelete.HasValue ?
                new ObjectParameter("ToDelete", toDelete) :
                new ObjectParameter("ToDelete", typeof(int));
    
            var kPIIDParameter = kPIID.HasValue ?
                new ObjectParameter("KPIID", kPIID) :
                new ObjectParameter("KPIID", typeof(decimal));
    
            var klinicnaPatekaIDParameter = klinicnaPatekaID.HasValue ?
                new ObjectParameter("KlinicnaPatekaID", klinicnaPatekaID) :
                new ObjectParameter("KlinicnaPatekaID", typeof(decimal));
    
            var kPIKodParameter = kPIKod != null ?
                new ObjectParameter("KPIKod", kPIKod) :
                new ObjectParameter("KPIKod", typeof(string));
    
            var kPIVidParameter = kPIVid.HasValue ?
                new ObjectParameter("KPIVid", kPIVid) :
                new ObjectParameter("KPIVid", typeof(decimal));
    
            var cenataParameter = cenata.HasValue ?
                new ObjectParameter("Cenata", cenata) :
                new ObjectParameter("Cenata", typeof(decimal));
    
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var kPIDDSParameter = kPIDDS.HasValue ?
                new ObjectParameter("KPIDDS", kPIDDS) :
                new ObjectParameter("KPIDDS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KPImplALL_Result>("KPImplALL", toDeleteParameter, kPIIDParameter, klinicnaPatekaIDParameter, kPIKodParameter, kPIVidParameter, cenataParameter, datataParameter, kPIDDSParameter);
        }
    
        public virtual ObjectResult<KpNZOKReps_Result> KpNZOKReps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KpNZOKReps_Result>("KpNZOKReps");
        }
    
        public virtual ObjectResult<KPProverka1_Result> KPProverka1(Nullable<int> bolID, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KPProverka1_Result>("KPProverka1", bolIDParameter, blKPParameter);
        }
    
        public virtual ObjectResult<KPProverka1New_Result> KPProverka1New(Nullable<int> bolID, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KPProverka1New_Result>("KPProverka1New", bolIDParameter, blKPParameter);
        }
    
        public virtual ObjectResult<KPProverka2_Result> KPProverka2(Nullable<int> bolID, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KPProverka2_Result>("KPProverka2", bolIDParameter, blKPParameter);
        }
    
        public virtual ObjectResult<KPProverka2New_Result> KPProverka2New(Nullable<int> bolID, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KPProverka2New_Result>("KPProverka2New", bolIDParameter, blKPParameter);
        }
    
        public virtual ObjectResult<KPProverka3_Result> KPProverka3(Nullable<int> bolID, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KPProverka3_Result>("KPProverka3", bolIDParameter, blKPParameter);
        }
    
        public virtual ObjectResult<KPProverka3NKB_Result> KPProverka3NKB(Nullable<int> bolID, Nullable<int> blKP)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var blKPParameter = blKP.HasValue ?
                new ObjectParameter("BlKP", blKP) :
                new ObjectParameter("BlKP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KPProverka3NKB_Result>("KPProverka3NKB", bolIDParameter, blKPParameter);
        }
    
        public virtual ObjectResult<KProc6_Result> KProc6(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProc6_Result>("KProc6", iDParameter);
        }
    
        public virtual ObjectResult<KProc7_Result> KProc7(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProc7_Result>("KProc7", iDParameter);
        }
    
        public virtual ObjectResult<KProcN4_N1_Result> KProcN4_N1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> blOtchet, Nullable<int> pKOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var blOtchetParameter = blOtchet.HasValue ?
                new ObjectParameter("BlOtchet", blOtchet) :
                new ObjectParameter("BlOtchet", typeof(int));
    
            var pKOtchetParameter = pKOtchet.HasValue ?
                new ObjectParameter("PKOtchet", pKOtchet) :
                new ObjectParameter("PKOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProcN4_N1_Result>("KProcN4_N1", otDataParameter, doDataParameter, blOtchetParameter, pKOtchetParameter);
        }
    
        public virtual ObjectResult<KProcN5_Result> KProcN5(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> blOtchet, Nullable<int> pKOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var blOtchetParameter = blOtchet.HasValue ?
                new ObjectParameter("BlOtchet", blOtchet) :
                new ObjectParameter("BlOtchet", typeof(int));
    
            var pKOtchetParameter = pKOtchet.HasValue ?
                new ObjectParameter("PKOtchet", pKOtchet) :
                new ObjectParameter("PKOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProcN5_Result>("KProcN5", otDataParameter, doDataParameter, blOtchetParameter, pKOtchetParameter);
        }
    
        public virtual ObjectResult<KProcN8_Result> KProcN8(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProcN8_Result>("KProcN8", iDParameter);
        }
    
        public virtual ObjectResult<KProcN8A_Result> KProcN8A(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProcN8A_Result>("KProcN8A", iDParameter);
        }
    
        public virtual ObjectResult<KProcN8ASummary_Result> KProcN8ASummary(Nullable<int> iD, Nullable<int> zvenoID, Nullable<System.DateTime> datata)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var zvenoIDParameter = zvenoID.HasValue ?
                new ObjectParameter("ZvenoID", zvenoID) :
                new ObjectParameter("ZvenoID", typeof(int));
    
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProcN8ASummary_Result>("KProcN8ASummary", iDParameter, zvenoIDParameter, datataParameter);
        }
    
        public virtual ObjectResult<KProcN9_Result> KProcN9(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProcN9_Result>("KProcN9", iDParameter);
        }
    
        public virtual ObjectResult<KProcXml_Result> KProcXml(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> blOtchet, Nullable<int> pKOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var blOtchetParameter = blOtchet.HasValue ?
                new ObjectParameter("BlOtchet", blOtchet) :
                new ObjectParameter("BlOtchet", typeof(int));
    
            var pKOtchetParameter = pKOtchet.HasValue ?
                new ObjectParameter("PKOtchet", pKOtchet) :
                new ObjectParameter("PKOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KProcXml_Result>("KProcXml", otDataParameter, doDataParameter, blOtchetParameter, pKOtchetParameter);
        }
    
        public virtual ObjectResult<KprOtchet_Result> KprOtchet(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> blOtchet, Nullable<int> pKOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var blOtchetParameter = blOtchet.HasValue ?
                new ObjectParameter("BlOtchet", blOtchet) :
                new ObjectParameter("BlOtchet", typeof(int));
    
            var pKOtchetParameter = pKOtchet.HasValue ?
                new ObjectParameter("PKOtchet", pKOtchet) :
                new ObjectParameter("PKOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KprOtchet_Result>("KprOtchet", otDataParameter, doDataParameter, blOtchetParameter, pKOtchetParameter);
        }
    
        public virtual ObjectResult<LabProfili_Result> LabProfili(Nullable<System.DateTime> dtNow)
        {
            var dtNowParameter = dtNow.HasValue ?
                new ObjectParameter("dtNow", dtNow) :
                new ObjectParameter("dtNow", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabProfili_Result>("LabProfili", dtNowParameter);
        }
    
        public virtual ObjectResult<LabProfilUsluga_Result> LabProfilUsluga(Nullable<System.DateTime> dtNow)
        {
            var dtNowParameter = dtNow.HasValue ?
                new ObjectParameter("dtNow", dtNow) :
                new ObjectParameter("dtNow", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabProfilUsluga_Result>("LabProfilUsluga", dtNowParameter);
        }
    
        public virtual ObjectResult<LabsClaim2006_Result> LabsClaim2006(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabsClaim2006_Result>("LabsClaim2006", otDataParameter, doDataParameter, medCenturParameter);
        }
    
        public virtual int LegloFondDop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LegloFondDop", otDataParameter, doDataParameter);
        }
    
        public virtual int LegloFondDopZveno(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> iD)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LegloFondDopZveno", otDataParameter, doDataParameter, iDParameter);
        }
    
        public virtual int LegloFondDV(Nullable<System.DateTime> datata, Nullable<bool> excludeBudget)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var excludeBudgetParameter = excludeBudget.HasValue ?
                new ObjectParameter("ExcludeBudget", excludeBudget) :
                new ObjectParameter("ExcludeBudget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LegloFondDV", datataParameter, excludeBudgetParameter);
        }
    
        public virtual int LeglofondFirst(Nullable<System.DateTime> dO)
        {
            var dOParameter = dO.HasValue ?
                new ObjectParameter("DO", dO) :
                new ObjectParameter("DO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LeglofondFirst", dOParameter);
        }
    
        public virtual int LeglofondFirst1(Nullable<System.DateTime> dO)
        {
            var dOParameter = dO.HasValue ?
                new ObjectParameter("DO", dO) :
                new ObjectParameter("DO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LeglofondFirst1", dOParameter);
        }
    
        public virtual int LeglofondFirstDop(Nullable<System.DateTime> dO)
        {
            var dOParameter = dO.HasValue ?
                new ObjectParameter("DO", dO) :
                new ObjectParameter("DO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LeglofondFirstDop", dOParameter);
        }
    
        public virtual int LeglofondSecond(Nullable<System.DateTime> dO)
        {
            var dOParameter = dO.HasValue ?
                new ObjectParameter("DO", dO) :
                new ObjectParameter("DO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LeglofondSecond", dOParameter);
        }
    
        public virtual int LeglofondSecond1(Nullable<System.DateTime> dO)
        {
            var dOParameter = dO.HasValue ?
                new ObjectParameter("DO", dO) :
                new ObjectParameter("DO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LeglofondSecond1", dOParameter);
        }
    
        public virtual int LeglofondSecondDop(Nullable<System.DateTime> dO)
        {
            var dOParameter = dO.HasValue ?
                new ObjectParameter("DO", dO) :
                new ObjectParameter("DO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LeglofondSecondDop", dOParameter);
        }
    
        public virtual int LegloFondZZZ(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LegloFondZZZ", otDataParameter, doDataParameter);
        }
    
        public virtual int LegloviFondKamData(Nullable<System.DateTime> datata, Nullable<bool> excludeBudget)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var excludeBudgetParameter = excludeBudget.HasValue ?
                new ObjectParameter("ExcludeBudget", excludeBudget) :
                new ObjectParameter("ExcludeBudget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LegloviFondKamData", datataParameter, excludeBudgetParameter);
        }
    
        public virtual ObjectResult<ListBackOrders_Result> ListBackOrders(Nullable<decimal> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListBackOrders_Result>("ListBackOrders", bolIDParameter);
        }
    
        public virtual ObjectResult<ListBackOrdersDop_Result> ListBackOrdersDop(Nullable<decimal> bolID, Nullable<System.DateTime> data)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(decimal));
    
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListBackOrdersDop_Result>("ListBackOrdersDop", bolIDParameter, dataParameter);
        }
    
        public virtual ObjectResult<ListDogovoriPC_Result> ListDogovoriPC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListDogovoriPC_Result>("ListDogovoriPC");
        }
    
        public virtual ObjectResult<ListOrders_Result> ListOrders(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListOrders_Result>("ListOrders", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ListOrdersOS003_Result> ListOrdersOS003(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListOrdersOS003_Result>("ListOrdersOS003", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<loadAntro_Pok_Result> loadAntro_Pok(Nullable<int> pacientID, Nullable<System.DateTime> aPData, Nullable<int> aPMed)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(int));
    
            var aPDataParameter = aPData.HasValue ?
                new ObjectParameter("APData", aPData) :
                new ObjectParameter("APData", typeof(System.DateTime));
    
            var aPMedParameter = aPMed.HasValue ?
                new ObjectParameter("APMed", aPMed) :
                new ObjectParameter("APMed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadAntro_Pok_Result>("loadAntro_Pok", pacientIDParameter, aPDataParameter, aPMedParameter);
        }
    
        public virtual ObjectResult<LoadBolnichnoLechenie_Result> LoadBolnichnoLechenie(Nullable<int> iD, Nullable<int> bLPACID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bLPACIDParameter = bLPACID.HasValue ?
                new ObjectParameter("BLPACID", bLPACID) :
                new ObjectParameter("BLPACID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadBolnichnoLechenie_Result>("LoadBolnichnoLechenie", iDParameter, bLPACIDParameter);
        }
    
        public virtual ObjectResult<loadDoctorCommission_Result> loadDoctorCommission(Nullable<bool> effective, Nullable<decimal> doctorId, Nullable<decimal> id, Nullable<int> kind)
        {
            var effectiveParameter = effective.HasValue ?
                new ObjectParameter("Effective", effective) :
                new ObjectParameter("Effective", typeof(bool));
    
            var doctorIdParameter = doctorId.HasValue ?
                new ObjectParameter("DoctorId", doctorId) :
                new ObjectParameter("DoctorId", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(decimal));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("Kind", kind) :
                new ObjectParameter("Kind", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadDoctorCommission_Result>("loadDoctorCommission", effectiveParameter, doctorIdParameter, idParameter, kindParameter);
        }
    
        public virtual ObjectResult<loadDoctorsSchedule_Result> loadDoctorsSchedule(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadDoctorsSchedule_Result>("loadDoctorsSchedule", idParameter);
        }
    
        public virtual ObjectResult<loadImplants_Result> loadImplants(string grupaKod, string kpkod, string diagkod, Nullable<int> bolId, Nullable<bool> isNewImp, Nullable<bool> isMaintenance)
        {
            var grupaKodParameter = grupaKod != null ?
                new ObjectParameter("grupaKod", grupaKod) :
                new ObjectParameter("grupaKod", typeof(string));
    
            var kpkodParameter = kpkod != null ?
                new ObjectParameter("kpkod", kpkod) :
                new ObjectParameter("kpkod", typeof(string));
    
            var diagkodParameter = diagkod != null ?
                new ObjectParameter("diagkod", diagkod) :
                new ObjectParameter("diagkod", typeof(string));
    
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("bolId", bolId) :
                new ObjectParameter("bolId", typeof(int));
    
            var isNewImpParameter = isNewImp.HasValue ?
                new ObjectParameter("isNewImp", isNewImp) :
                new ObjectParameter("isNewImp", typeof(bool));
    
            var isMaintenanceParameter = isMaintenance.HasValue ?
                new ObjectParameter("isMaintenance", isMaintenance) :
                new ObjectParameter("isMaintenance", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadImplants_Result>("loadImplants", grupaKodParameter, kpkodParameter, diagkodParameter, bolIdParameter, isNewImpParameter, isMaintenanceParameter);
        }
    
        public virtual ObjectResult<loadIzsDi_Result> loadIzsDi(Nullable<int> pacId, Nullable<int> bolId, Nullable<int> diiId)
        {
            var pacIdParameter = pacId.HasValue ?
                new ObjectParameter("PacId", pacId) :
                new ObjectParameter("PacId", typeof(int));
    
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("BolId", bolId) :
                new ObjectParameter("BolId", typeof(int));
    
            var diiIdParameter = diiId.HasValue ?
                new ObjectParameter("DiiId", diiId) :
                new ObjectParameter("DiiId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadIzsDi_Result>("loadIzsDi", pacIdParameter, bolIdParameter, diiIdParameter);
        }
    
        public virtual ObjectResult<LoadIzsDi_Res_Result> LoadIzsDi_Res(Nullable<int> diiId)
        {
            var diiIdParameter = diiId.HasValue ?
                new ObjectParameter("DiiId", diiId) :
                new ObjectParameter("DiiId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadIzsDi_Res_Result>("LoadIzsDi_Res", diiIdParameter);
        }
    
        public virtual ObjectResult<loadIzsLab_Result> loadIzsLab(Nullable<int> labid, Nullable<int> bolid, Nullable<int> pacid, Nullable<int> includekp)
        {
            var labidParameter = labid.HasValue ?
                new ObjectParameter("labid", labid) :
                new ObjectParameter("labid", typeof(int));
    
            var bolidParameter = bolid.HasValue ?
                new ObjectParameter("bolid", bolid) :
                new ObjectParameter("bolid", typeof(int));
    
            var pacidParameter = pacid.HasValue ?
                new ObjectParameter("pacid", pacid) :
                new ObjectParameter("pacid", typeof(int));
    
            var includekpParameter = includekp.HasValue ?
                new ObjectParameter("includekp", includekp) :
                new ObjectParameter("includekp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadIzsLab_Result>("loadIzsLab", labidParameter, bolidParameter, pacidParameter, includekpParameter);
        }
    
        public virtual ObjectResult<loadIzsOrder_Result> loadIzsOrder(Nullable<int> proId, Nullable<int> labId, Nullable<int> rodId, Nullable<int> fniId)
        {
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(int));
    
            var labIdParameter = labId.HasValue ?
                new ObjectParameter("LabId", labId) :
                new ObjectParameter("LabId", typeof(int));
    
            var rodIdParameter = rodId.HasValue ?
                new ObjectParameter("RodId", rodId) :
                new ObjectParameter("RodId", typeof(int));
    
            var fniIdParameter = fniId.HasValue ?
                new ObjectParameter("FniId", fniId) :
                new ObjectParameter("FniId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadIzsOrder_Result>("loadIzsOrder", proIdParameter, labIdParameter, rodIdParameter, fniIdParameter);
        }
    
        public virtual ObjectResult<loadOncoDecision_Result> loadOncoDecision(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadOncoDecision_Result>("loadOncoDecision", iDParameter);
        }
    
        public virtual ObjectResult<loadOperacia_Result> loadOperacia(Nullable<int> operaciaID, Nullable<int> bolID)
        {
            var operaciaIDParameter = operaciaID.HasValue ?
                new ObjectParameter("OperaciaID", operaciaID) :
                new ObjectParameter("OperaciaID", typeof(int));
    
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadOperacia_Result>("loadOperacia", operaciaIDParameter, bolIDParameter);
        }
    
        public virtual ObjectResult<loadOperEKK_Result> loadOperEKK(Nullable<int> operaciaId, Nullable<int> operEKKID)
        {
            var operaciaIdParameter = operaciaId.HasValue ?
                new ObjectParameter("OperaciaId", operaciaId) :
                new ObjectParameter("OperaciaId", typeof(int));
    
            var operEKKIDParameter = operEKKID.HasValue ?
                new ObjectParameter("operEKKID", operEKKID) :
                new ObjectParameter("operEKKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadOperEKK_Result>("loadOperEKK", operaciaIdParameter, operEKKIDParameter);
        }
    
        public virtual ObjectResult<loadOPrograma_Result> loadOPrograma(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> poID, Nullable<int> poMiasto, Nullable<int> pOZA)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var poIDParameter = poID.HasValue ?
                new ObjectParameter("PoID", poID) :
                new ObjectParameter("PoID", typeof(int));
    
            var poMiastoParameter = poMiasto.HasValue ?
                new ObjectParameter("PoMiasto", poMiasto) :
                new ObjectParameter("PoMiasto", typeof(int));
    
            var pOZAParameter = pOZA.HasValue ?
                new ObjectParameter("POZA", pOZA) :
                new ObjectParameter("POZA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadOPrograma_Result>("loadOPrograma", otDataParameter, doDataParameter, poIDParameter, poMiastoParameter, pOZAParameter);
        }
    
        public virtual ObjectResult<loadOrderEntries_Result> loadOrderEntries(Nullable<int> pacientID, Nullable<int> ordDataID, Nullable<int> bolID, Nullable<int> pregledID, Nullable<int> ordID, Nullable<int> ordEID)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(int));
    
            var ordDataIDParameter = ordDataID.HasValue ?
                new ObjectParameter("OrdDataID", ordDataID) :
                new ObjectParameter("OrdDataID", typeof(int));
    
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var pregledIDParameter = pregledID.HasValue ?
                new ObjectParameter("PregledID", pregledID) :
                new ObjectParameter("PregledID", typeof(int));
    
            var ordIDParameter = ordID.HasValue ?
                new ObjectParameter("OrdID", ordID) :
                new ObjectParameter("OrdID", typeof(int));
    
            var ordEIDParameter = ordEID.HasValue ?
                new ObjectParameter("OrdEID", ordEID) :
                new ObjectParameter("OrdEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadOrderEntries_Result>("loadOrderEntries", pacientIDParameter, ordDataIDParameter, bolIDParameter, pregledIDParameter, ordIDParameter, ordEIDParameter);
        }
    
        public virtual ObjectResult<loadOrders_Result> loadOrders(Nullable<int> ordId, Nullable<int> pacientId, Nullable<int> ordDataId)
        {
            var ordIdParameter = ordId.HasValue ?
                new ObjectParameter("OrdId", ordId) :
                new ObjectParameter("OrdId", typeof(int));
    
            var pacientIdParameter = pacientId.HasValue ?
                new ObjectParameter("PacientId", pacientId) :
                new ObjectParameter("PacientId", typeof(int));
    
            var ordDataIdParameter = ordDataId.HasValue ?
                new ObjectParameter("OrdDataId", ordDataId) :
                new ObjectParameter("OrdDataId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadOrders_Result>("loadOrders", ordIdParameter, pacientIdParameter, ordDataIdParameter);
        }
    
        public virtual ObjectResult<loadPersonal_Result> loadPersonal(Nullable<System.DateTime> data1)
        {
            var data1Parameter = data1.HasValue ?
                new ObjectParameter("Data1", data1) :
                new ObjectParameter("Data1", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadPersonal_Result>("loadPersonal", data1Parameter);
        }
    
        public virtual ObjectResult<loadPersonalOper_Result> loadPersonalOper(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadPersonalOper_Result>("loadPersonalOper", kodParameter);
        }
    
        public virtual ObjectResult<loadPlaniraneOper_Result> loadPlaniraneOper(Nullable<int> pOID, Nullable<int> obsID)
        {
            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));
    
            var obsIDParameter = obsID.HasValue ?
                new ObjectParameter("ObsID", obsID) :
                new ObjectParameter("ObsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadPlaniraneOper_Result>("loadPlaniraneOper", pOIDParameter, obsIDParameter);
        }
    
        public virtual ObjectResult<loadPrevejdane_Result> loadPrevejdane(Nullable<int> prevejdaneID, Nullable<int> bolId)
        {
            var prevejdaneIDParameter = prevejdaneID.HasValue ?
                new ObjectParameter("PrevejdaneID", prevejdaneID) :
                new ObjectParameter("PrevejdaneID", typeof(int));
    
            var bolIdParameter = bolId.HasValue ?
                new ObjectParameter("BolId", bolId) :
                new ObjectParameter("BolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadPrevejdane_Result>("loadPrevejdane", prevejdaneIDParameter, bolIdParameter);
        }
    
        public virtual ObjectResult<LoadTabelaMedi_Result> LoadTabelaMedi(Nullable<int> pacientID, Nullable<int> bolID, Nullable<int> tMID)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(int));
    
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadTabelaMedi_Result>("LoadTabelaMedi", pacientIDParameter, bolIDParameter, tMIDParameter);
        }
    
        public virtual ObjectResult<loadTabelaMediIzp_Result> loadTabelaMediIzp(Nullable<int> pacientID, Nullable<int> tMID, Nullable<int> oRDID)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(int));
    
            var tMIDParameter = tMID.HasValue ?
                new ObjectParameter("TMID", tMID) :
                new ObjectParameter("TMID", typeof(int));
    
            var oRDIDParameter = oRDID.HasValue ?
                new ObjectParameter("ORDID", oRDID) :
                new ObjectParameter("ORDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadTabelaMediIzp_Result>("loadTabelaMediIzp", pacientIDParameter, tMIDParameter, oRDIDParameter);
        }
    
        public virtual ObjectResult<loadZveno_Result> loadZveno(Nullable<bool> zvenoIsOperativno)
        {
            var zvenoIsOperativnoParameter = zvenoIsOperativno.HasValue ?
                new ObjectParameter("ZvenoIsOperativno", zvenoIsOperativno) :
                new ObjectParameter("ZvenoIsOperativno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loadZveno_Result>("loadZveno", zvenoIsOperativnoParameter);
        }
    
        public virtual int madis_Insert(string senderEntityCode, string senderEIK, string senderIDN, string senderName, string personIDNType, string personIDN, string personFirstName, string personSecondName, string personThirdName, string personDOB, string personExceptionID, string personExceptionCode, string personExceptionName, string attendantIDNType, string attendantIDN, string attendantFirstName, string attendantSecondName, string attendantThirdName, string attendantExceptionID, string attendantExceptionCode, string attendantExceptionName, string eventTypeID, string eventTypeCode, string eventTypeName, string eventEventTime, string eventCaptureType, string eventCaseNum, string xmlRequest)
        {
            var senderEntityCodeParameter = senderEntityCode != null ?
                new ObjectParameter("SenderEntityCode", senderEntityCode) :
                new ObjectParameter("SenderEntityCode", typeof(string));
    
            var senderEIKParameter = senderEIK != null ?
                new ObjectParameter("SenderEIK", senderEIK) :
                new ObjectParameter("SenderEIK", typeof(string));
    
            var senderIDNParameter = senderIDN != null ?
                new ObjectParameter("SenderIDN", senderIDN) :
                new ObjectParameter("SenderIDN", typeof(string));
    
            var senderNameParameter = senderName != null ?
                new ObjectParameter("SenderName", senderName) :
                new ObjectParameter("SenderName", typeof(string));
    
            var personIDNTypeParameter = personIDNType != null ?
                new ObjectParameter("PersonIDNType", personIDNType) :
                new ObjectParameter("PersonIDNType", typeof(string));
    
            var personIDNParameter = personIDN != null ?
                new ObjectParameter("PersonIDN", personIDN) :
                new ObjectParameter("PersonIDN", typeof(string));
    
            var personFirstNameParameter = personFirstName != null ?
                new ObjectParameter("PersonFirstName", personFirstName) :
                new ObjectParameter("PersonFirstName", typeof(string));
    
            var personSecondNameParameter = personSecondName != null ?
                new ObjectParameter("PersonSecondName", personSecondName) :
                new ObjectParameter("PersonSecondName", typeof(string));
    
            var personThirdNameParameter = personThirdName != null ?
                new ObjectParameter("PersonThirdName", personThirdName) :
                new ObjectParameter("PersonThirdName", typeof(string));
    
            var personDOBParameter = personDOB != null ?
                new ObjectParameter("PersonDOB", personDOB) :
                new ObjectParameter("PersonDOB", typeof(string));
    
            var personExceptionIDParameter = personExceptionID != null ?
                new ObjectParameter("PersonExceptionID", personExceptionID) :
                new ObjectParameter("PersonExceptionID", typeof(string));
    
            var personExceptionCodeParameter = personExceptionCode != null ?
                new ObjectParameter("PersonExceptionCode", personExceptionCode) :
                new ObjectParameter("PersonExceptionCode", typeof(string));
    
            var personExceptionNameParameter = personExceptionName != null ?
                new ObjectParameter("PersonExceptionName", personExceptionName) :
                new ObjectParameter("PersonExceptionName", typeof(string));
    
            var attendantIDNTypeParameter = attendantIDNType != null ?
                new ObjectParameter("AttendantIDNType", attendantIDNType) :
                new ObjectParameter("AttendantIDNType", typeof(string));
    
            var attendantIDNParameter = attendantIDN != null ?
                new ObjectParameter("AttendantIDN", attendantIDN) :
                new ObjectParameter("AttendantIDN", typeof(string));
    
            var attendantFirstNameParameter = attendantFirstName != null ?
                new ObjectParameter("AttendantFirstName", attendantFirstName) :
                new ObjectParameter("AttendantFirstName", typeof(string));
    
            var attendantSecondNameParameter = attendantSecondName != null ?
                new ObjectParameter("AttendantSecondName", attendantSecondName) :
                new ObjectParameter("AttendantSecondName", typeof(string));
    
            var attendantThirdNameParameter = attendantThirdName != null ?
                new ObjectParameter("AttendantThirdName", attendantThirdName) :
                new ObjectParameter("AttendantThirdName", typeof(string));
    
            var attendantExceptionIDParameter = attendantExceptionID != null ?
                new ObjectParameter("AttendantExceptionID", attendantExceptionID) :
                new ObjectParameter("AttendantExceptionID", typeof(string));
    
            var attendantExceptionCodeParameter = attendantExceptionCode != null ?
                new ObjectParameter("AttendantExceptionCode", attendantExceptionCode) :
                new ObjectParameter("AttendantExceptionCode", typeof(string));
    
            var attendantExceptionNameParameter = attendantExceptionName != null ?
                new ObjectParameter("AttendantExceptionName", attendantExceptionName) :
                new ObjectParameter("AttendantExceptionName", typeof(string));
    
            var eventTypeIDParameter = eventTypeID != null ?
                new ObjectParameter("EventTypeID", eventTypeID) :
                new ObjectParameter("EventTypeID", typeof(string));
    
            var eventTypeCodeParameter = eventTypeCode != null ?
                new ObjectParameter("EventTypeCode", eventTypeCode) :
                new ObjectParameter("EventTypeCode", typeof(string));
    
            var eventTypeNameParameter = eventTypeName != null ?
                new ObjectParameter("EventTypeName", eventTypeName) :
                new ObjectParameter("EventTypeName", typeof(string));
    
            var eventEventTimeParameter = eventEventTime != null ?
                new ObjectParameter("EventEventTime", eventEventTime) :
                new ObjectParameter("EventEventTime", typeof(string));
    
            var eventCaptureTypeParameter = eventCaptureType != null ?
                new ObjectParameter("EventCaptureType", eventCaptureType) :
                new ObjectParameter("EventCaptureType", typeof(string));
    
            var eventCaseNumParameter = eventCaseNum != null ?
                new ObjectParameter("EventCaseNum", eventCaseNum) :
                new ObjectParameter("EventCaseNum", typeof(string));
    
            var xmlRequestParameter = xmlRequest != null ?
                new ObjectParameter("xmlRequest", xmlRequest) :
                new ObjectParameter("xmlRequest", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("madis_Insert", senderEntityCodeParameter, senderEIKParameter, senderIDNParameter, senderNameParameter, personIDNTypeParameter, personIDNParameter, personFirstNameParameter, personSecondNameParameter, personThirdNameParameter, personDOBParameter, personExceptionIDParameter, personExceptionCodeParameter, personExceptionNameParameter, attendantIDNTypeParameter, attendantIDNParameter, attendantFirstNameParameter, attendantSecondNameParameter, attendantThirdNameParameter, attendantExceptionIDParameter, attendantExceptionCodeParameter, attendantExceptionNameParameter, eventTypeIDParameter, eventTypeCodeParameter, eventTypeNameParameter, eventEventTimeParameter, eventCaptureTypeParameter, eventCaseNumParameter, xmlRequestParameter);
        }
    
        public virtual ObjectResult<MDDRep01_Result> MDDRep01(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep01_Result>("MDDRep01", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep02_Result> MDDRep02(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep02_Result>("MDDRep02", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep04_Result> MDDRep04(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep04_Result>("MDDRep04", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep05_Result> MDDRep05(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep05_Result>("MDDRep05", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep06_Result> MDDRep06(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep06_Result>("MDDRep06", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep07_Result> MDDRep07(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep07_Result>("MDDRep07", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep09_Result> MDDRep09(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep09_Result>("MDDRep09", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep10_Result> MDDRep10(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep10_Result>("MDDRep10", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual ObjectResult<MDDRep11_Result> MDDRep11(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> mC)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MDDRep11_Result>("MDDRep11", otDataParameter, doDataParameter, mCParameter);
        }
    
        public virtual int MedStatOtchet(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatOtchet", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int MedStatOtchetEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatOtchetEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int MedStatOtchetHist(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatOtchetHist", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int MedStatOtchetHistEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatOtchetHistEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int MedStatPril1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatPril1", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int MedStatPril1EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatPril1EC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int MedStatPril1Hist(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatPril1Hist", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int MedStatPril1HistEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedStatPril1HistEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<MonitorFromCCC_Result> MonitorFromCCC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorFromCCC_Result>("MonitorFromCCC", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<MonitorFromLIS_Result> MonitorFromLIS(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorFromLIS_Result>("MonitorFromLIS", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<MonitorFromLISMsg_Result> MonitorFromLISMsg(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorFromLISMsg_Result>("MonitorFromLISMsg", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<MonitorFromLISMsgDop_Result> MonitorFromLISMsgDop(Nullable<int> fLID)
        {
            var fLIDParameter = fLID.HasValue ?
                new ObjectParameter("FLID", fLID) :
                new ObjectParameter("FLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorFromLISMsgDop_Result>("MonitorFromLISMsgDop", fLIDParameter);
        }
    
        public virtual ObjectResult<MonitorFromPACS_Result> MonitorFromPACS(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorFromPACS_Result>("MonitorFromPACS", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<MonitorSMOBZ_Result> MonitorSMOBZ(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorSMOBZ_Result>("MonitorSMOBZ", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<MonitorToCCC_Result> MonitorToCCC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorToCCC_Result>("MonitorToCCC", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<MonitorToLIS_Result> MonitorToLIS(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorToLIS_Result>("MonitorToLIS", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<MonitorToPACS_Result> MonitorToPACS(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MonitorToPACS_Result>("MonitorToPACS", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NapMestoJitelstvo_Result> NapMestoJitelstvo(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NapMestoJitelstvo_Result>("NapMestoJitelstvo", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<NapusnaliDiag_Result> NapusnaliDiag(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NapusnaliDiag_Result>("NapusnaliDiag", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<NapusnaliDiagPrid_Result> NapusnaliDiagPrid(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NapusnaliDiagPrid_Result>("NapusnaliDiagPrid", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<NasLZAmbList_Result> NasLZAmbList(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NasLZAmbList_Result>("NasLZAmbList", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NasZdrZavedenie_Result> NasZdrZavedenie(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NasZdrZavedenie_Result>("NasZdrZavedenie", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<string> newBroiachNomer(string broiachTip, Nullable<int> godina, Nullable<decimal> id, string tail)
        {
            var broiachTipParameter = broiachTip != null ?
                new ObjectParameter("broiachTip", broiachTip) :
                new ObjectParameter("broiachTip", typeof(string));
    
            var godinaParameter = godina.HasValue ?
                new ObjectParameter("godina", godina) :
                new ObjectParameter("godina", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var tailParameter = tail != null ?
                new ObjectParameter("tail", tail) :
                new ObjectParameter("tail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("newBroiachNomer", broiachTipParameter, godinaParameter, idParameter, tailParameter);
        }
    
        public virtual ObjectResult<string> newBroiachNomerX(string broiachTip, Nullable<int> godina, Nullable<decimal> id, string tail)
        {
            var broiachTipParameter = broiachTip != null ?
                new ObjectParameter("broiachTip", broiachTip) :
                new ObjectParameter("broiachTip", typeof(string));
    
            var godinaParameter = godina.HasValue ?
                new ObjectParameter("godina", godina) :
                new ObjectParameter("godina", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var tailParameter = tail != null ?
                new ObjectParameter("tail", tail) :
                new ObjectParameter("tail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("newBroiachNomerX", broiachTipParameter, godinaParameter, idParameter, tailParameter);
        }
    
        public virtual ObjectResult<NovoPostupili_Result> NovoPostupili(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NovoPostupili_Result>("NovoPostupili", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NovorodeniDeca_Result> NovorodeniDeca(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NovorodeniDeca_Result>("NovorodeniDeca", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NovorodeniMaiki_Result> NovorodeniMaiki(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NovorodeniMaiki_Result>("NovorodeniMaiki", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NovoRodeniZaPeriod_Result> NovoRodeniZaPeriod(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NovoRodeniZaPeriod_Result>("NovoRodeniZaPeriod", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2005NZOKImpDost_Result> NRD2005NZOKImpDost(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005NZOKImpDost_Result>("NRD2005NZOKImpDost", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual ObjectResult<NRD2005NZOKImplantanti_Result> NRD2005NZOKImplantanti(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<bool> otchet, Nullable<bool> dDS)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(bool));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005NZOKImplantanti_Result>("NRD2005NZOKImplantanti", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, dDSParameter);
        }
    
        public virtual ObjectResult<NRD2005NZOKImplantantiEC_Result> NRD2005NZOKImplantantiEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<bool> otchet, Nullable<bool> dDS)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(bool));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005NZOKImplantantiEC_Result>("NRD2005NZOKImplantantiEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, dDSParameter);
        }
    
        public virtual ObjectResult<NRD2005NZOKImplantantiHist_Result> NRD2005NZOKImplantantiHist(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<bool> otchet, Nullable<bool> dDS)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(bool));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005NZOKImplantantiHist_Result>("NRD2005NZOKImplantantiHist", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, dDSParameter);
        }
    
        public virtual ObjectResult<NRD2005NZOKImplantantiHistEC_Result> NRD2005NZOKImplantantiHistEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<bool> otchet, Nullable<bool> dDS)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(bool));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005NZOKImplantantiHistEC_Result>("NRD2005NZOKImplantantiHistEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, dDSParameter);
        }
    
        public virtual ObjectResult<NRD2005NZOKImplantantiXLS_Result> NRD2005NZOKImplantantiXLS(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005NZOKImplantantiXLS_Result>("NRD2005NZOKImplantantiXLS", otDataParameter, doDataParameter, dogovorIDParameter);
        }
    
        public virtual int NRD2005OpisPoKPECrmn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<bool> histolog, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005OpisPoKPECrmn", otDataParameter, doDataParameter, otchetParameter, cenaParameter, varnatParameter, histologParameter, nzokContractsIdsParameter);
        }
    
        public virtual int NRD2005OpisPoKPrmn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<bool> histolog, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005OpisPoKPrmn", otDataParameter, doDataParameter, otchetParameter, cenaParameter, varnatParameter, histologParameter, nzokContractsIdsParameter);
        }
    
        public virtual ObjectResult<NRD2005Pril10_Result> NRD2005Pril10(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005Pril10_Result>("NRD2005Pril10", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2005Pril11_Result> NRD2005Pril11(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005Pril11_Result>("NRD2005Pril11", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2005Pril13_Result> NRD2005Pril13(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005Pril13_Result>("NRD2005Pril13", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2005Pril14_Result> NRD2005Pril14(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005Pril14_Result>("NRD2005Pril14", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2005Pril5b_Result> NRD2005Pril5b(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005Pril5b_Result>("NRD2005Pril5b", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2005Pril6b1_Result> NRD2005Pril6b1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005Pril6b1_Result>("NRD2005Pril6b1", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2005Pril6b2_Result> NRD2005Pril6b2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005Pril6b2_Result>("NRD2005Pril6b2", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Nrd2005SpecIMPIzvanReg_Result> Nrd2005SpecIMPIzvanReg(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nrd2005SpecIMPIzvanReg_Result>("Nrd2005SpecIMPIzvanReg", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual ObjectResult<Nrd2005SpecIMPIzvanRegEC_Result> Nrd2005SpecIMPIzvanRegEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nrd2005SpecIMPIzvanRegEC_Result>("Nrd2005SpecIMPIzvanRegEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int Nrd2005SpecIMPIzvanRegLek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Nrd2005SpecIMPIzvanRegLek", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int Nrd2005SpecIMPIzvanRegLekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Nrd2005SpecIMPIzvanRegLekEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpNapr4Izvadka(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpNapr4Izvadka", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpNapr4IzvadkaEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpNapr4IzvadkaEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpNapr4IzvLek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpNapr4IzvLek", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpNapr4IzvLekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpNapr4IzvLekEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart1_Result> NRD2005SpecIMPPart1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<decimal> zoES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart1_Result>("NRD2005SpecIMPPart1", otDataParameter, doDataParameter, lZParameter, zoESParameter);
        }
    
        public virtual int NRD2005SpecIMPPart1Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart1Lek", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart1LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart1LekEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart2_Result> NRD2005SpecIMPPart2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<decimal> zoES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart2_Result>("NRD2005SpecIMPPart2", otDataParameter, doDataParameter, lZParameter, zoESParameter);
        }
    
        public virtual int NRD2005SpecIMPPart2Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart2Lek", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart2LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart2LekEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart3_Result> NRD2005SpecIMPPart3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart3_Result>("NRD2005SpecIMPPart3", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart3A_Result> NRD2005SpecIMPPart3A(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<decimal> zoES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart3A_Result>("NRD2005SpecIMPPart3A", otDataParameter, doDataParameter, lZParameter, zoESParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart3EC_Result> NRD2005SpecIMPPart3EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart3EC_Result>("NRD2005SpecIMPPart3EC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart3Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart3Lek", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart3LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart3LekEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart4_Result> NRD2005SpecIMPPart4(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart4_Result>("NRD2005SpecIMPPart4", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart5_Result> NRD2005SpecIMPPart5(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<decimal> zoES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart5_Result>("NRD2005SpecIMPPart5", otDataParameter, doDataParameter, lZParameter, zoESParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart5EC_Result> NRD2005SpecIMPPart5EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart5EC_Result>("NRD2005SpecIMPPart5EC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart5Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart5Lek", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart5LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart5LekEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart6_Result> NRD2005SpecIMPPart6(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart6_Result>("NRD2005SpecIMPPart6", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart6EC_Result> NRD2005SpecIMPPart6EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart6EC_Result>("NRD2005SpecIMPPart6EC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart6Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart6Lek", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart6LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart6LekEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart7_Result> NRD2005SpecIMPPart7(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<decimal> zoES, Nullable<bool> pMS17)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart7_Result>("NRD2005SpecIMPPart7", otDataParameter, doDataParameter, lZParameter, zoESParameter, pMS17Parameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart7_1_Result> NRD2005SpecIMPPart7_1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<decimal> zoES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart7_1_Result>("NRD2005SpecIMPPart7_1", otDataParameter, doDataParameter, lZParameter, zoESParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart7_1EC_Result> NRD2005SpecIMPPart7_1EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart7_1EC_Result>("NRD2005SpecIMPPart7_1EC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart7_1Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart7_1Lek", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart7_1LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart7_1LekEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart7EC_Result> NRD2005SpecIMPPart7EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart7EC_Result>("NRD2005SpecIMPPart7EC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart7Lek_Result> NRD2005SpecIMPPart7Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart7Lek_Result>("NRD2005SpecIMPPart7Lek", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart7LekEC_Result> NRD2005SpecIMPPart7LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart7LekEC_Result>("NRD2005SpecIMPPart7LekEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart8_Result> NRD2005SpecIMPPart8(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart8_Result>("NRD2005SpecIMPPart8", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart8_1_Result> NRD2005SpecIMPPart8_1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart8_1_Result>("NRD2005SpecIMPPart8_1", otDataParameter, doDataParameter, lZParameter, lKKForAllDoctorsParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart8_1EC_Result> NRD2005SpecIMPPart8_1EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart8_1EC_Result>("NRD2005SpecIMPPart8_1EC", otDataParameter, doDataParameter, lZParameter, lKKForAllDoctorsParameter);
        }
    
        public virtual int NRD2005SpecIMPPart8_1Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart8_1Lek", otDataParameter, doDataParameter, lZParameter, lKKForAllDoctorsParameter);
        }
    
        public virtual int NRD2005SpecIMPPart8_1LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart8_1LekEC", otDataParameter, doDataParameter, lZParameter, lKKForAllDoctorsParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart9_0_Result> NRD2005SpecIMPPart9_0(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart9_0_Result>("NRD2005SpecIMPPart9_0", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecIMPPart9_0EC_Result> NRD2005SpecIMPPart9_0EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecIMPPart9_0EC_Result>("NRD2005SpecIMPPart9_0EC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart9_0Lec(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart9_0Lec", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2005SpecIMPPart9_0LecEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecIMPPart9_0LecEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecImpRegStand3_Result> NRD2005SpecImpRegStand3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2, Nullable<decimal> zoES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecImpRegStand3_Result>("NRD2005SpecImpRegStand3", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter, zoESParameter);
        }
    
        public virtual ObjectResult<NRD2005SpecImpRegStand3A_Result> NRD2005SpecImpRegStand3A(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecImpRegStand3A_Result>("NRD2005SpecImpRegStand3A", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual ObjectResult<NRD2005SpecImpRegStand3AEC_Result> NRD2005SpecImpRegStand3AEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecImpRegStand3AEC_Result>("NRD2005SpecImpRegStand3AEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpRegStand3ALek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpRegStand3ALek", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpRegStand3ALekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpRegStand3ALekEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual ObjectResult<NRD2005SpecImpRegStand3EC_Result> NRD2005SpecImpRegStand3EC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2005SpecImpRegStand3EC_Result>("NRD2005SpecImpRegStand3EC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpRegStand3Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpRegStand3Lek", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpRegStand3LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpRegStand3LekEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpRegStand4(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpRegStand4", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpRegStand4Lek(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpRegStand4Lek", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual int NRD2005SpecImpRegStand4LekEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<System.DateTime> doData2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var doData2Parameter = doData2.HasValue ?
                new ObjectParameter("DoData2", doData2) :
                new ObjectParameter("DoData2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2005SpecImpRegStand4LekEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, doData2Parameter);
        }
    
        public virtual ObjectResult<NRD2006NCHIPril10_135_Result> NRD2006NCHIPril10_135(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NCHIPril10_135_Result>("NRD2006NCHIPril10_135", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2006NzokDeinostPoKP_Result> NRD2006NzokDeinostPoKP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NzokDeinostPoKP_Result>("NRD2006NzokDeinostPoKP", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006NzokDeinostPoKPEC_Result> NRD2006NzokDeinostPoKPEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NzokDeinostPoKPEC_Result>("NRD2006NzokDeinostPoKPEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006NzokDeinostPoKPHist_Result> NRD2006NzokDeinostPoKPHist(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NzokDeinostPoKPHist_Result>("NRD2006NzokDeinostPoKPHist", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006NzokDeinostPoKPHistEC_Result> NRD2006NzokDeinostPoKPHistEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NzokDeinostPoKPHistEC_Result>("NRD2006NzokDeinostPoKPHistEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006NZOKHospVSMD_Result> NRD2006NZOKHospVSMD(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NZOKHospVSMD_Result>("NRD2006NZOKHospVSMD", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NRD2006NZOKProc_Result> NRD2006NZOKProc(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NZOKProc_Result>("NRD2006NZOKProc", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006NZOKProcEC_Result> NRD2006NZOKProcEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NZOKProcEC_Result>("NRD2006NZOKProcEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006NZOKProcHist_Result> NRD2006NZOKProcHist(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NZOKProcHist_Result>("NRD2006NZOKProcHist", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006NZOKProcHistEC_Result> NRD2006NZOKProcHistEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006NZOKProcHistEC_Result>("NRD2006NZOKProcHistEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<NRD2006Pril3_Result> NRD2006Pril3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2, Nullable<decimal> dogovorID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2006Pril3_Result>("NRD2006Pril3", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter, dogovorIDParameter);
        }
    
        public virtual ObjectResult<NRD2007NZOKVSD_Result> NRD2007NZOKVSD(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2007NZOKVSD_Result>("NRD2007NZOKVSD", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NRD2008Pril15_760(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2008Pril15_760", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual int NRD2008Pril15_760Izv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2008Pril15_760Izv", otDataParameter, doDataParameter);
        }
    
        public virtual int NRD2008Pril15_760IzvPred(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2008Pril15_760IzvPred", otDataParameter, doDataParameter);
        }
    
        public virtual int NRD2008Pril15_760Spr(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2008Pril15_760Spr", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual int NRD2008Pril15_760SprPred(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NRD2008Pril15_760SprPred", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<NRD2009Pril2_Result> NRD2009Pril2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2009Pril2_Result>("NRD2009Pril2", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2011_F30_Result> NRD2011_F30(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2011_F30_Result>("NRD2011_F30", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2011_F30_D4_Result> NRD2011_F30_D4(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2011_F30_D4_Result>("NRD2011_F30_D4", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NRD2011_F30_DO_Result> NRD2011_F30_DO(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NRD2011_F30_DO_Result>("NRD2011_F30_DO", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular115_Result> NZOKFormular115(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular115_Result>("NZOKFormular115", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B_Result> NZOKFormular365B(Nullable<System.DateTime> otdata)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B_Result>("NZOKFormular365B", otdataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B11_Result> NZOKFormular365B11(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> m1, Nullable<int> m2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var m1Parameter = m1.HasValue ?
                new ObjectParameter("M1", m1) :
                new ObjectParameter("M1", typeof(int));
    
            var m2Parameter = m2.HasValue ?
                new ObjectParameter("M2", m2) :
                new ObjectParameter("M2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B11_Result>("NZOKFormular365B11", otDataParameter, doDataParameter, m1Parameter, m2Parameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B13_Result> NZOKFormular365B13(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> m1, Nullable<int> m2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var m1Parameter = m1.HasValue ?
                new ObjectParameter("M1", m1) :
                new ObjectParameter("M1", typeof(int));
    
            var m2Parameter = m2.HasValue ?
                new ObjectParameter("M2", m2) :
                new ObjectParameter("M2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B13_Result>("NZOKFormular365B13", otDataParameter, doDataParameter, m1Parameter, m2Parameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B13_old_Result> NZOKFormular365B13_old(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> m1, Nullable<int> m2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var m1Parameter = m1.HasValue ?
                new ObjectParameter("M1", m1) :
                new ObjectParameter("M1", typeof(int));
    
            var m2Parameter = m2.HasValue ?
                new ObjectParameter("M2", m2) :
                new ObjectParameter("M2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B13_old_Result>("NZOKFormular365B13_old", otDataParameter, doDataParameter, m1Parameter, m2Parameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B14_Result> NZOKFormular365B14(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B14_Result>("NZOKFormular365B14", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B15_Result> NZOKFormular365B15(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B15_Result>("NZOKFormular365B15", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B15a_Result> NZOKFormular365B15a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B15a_Result>("NZOKFormular365B15a", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B2_Result> NZOKFormular365B2(Nullable<System.DateTime> otdata)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B2_Result>("NZOKFormular365B2", otdataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B2_S_Result> NZOKFormular365B2_S(Nullable<System.DateTime> otdata)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B2_S_Result>("NZOKFormular365B2_S", otdataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B3_Result> NZOKFormular365B3(Nullable<System.DateTime> otdata, Nullable<System.DateTime> dodata, Nullable<decimal> mc)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            var mcParameter = mc.HasValue ?
                new ObjectParameter("mc", mc) :
                new ObjectParameter("mc", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B3_Result>("NZOKFormular365B3", otdataParameter, dodataParameter, mcParameter);
        }
    
        public virtual int NZOKFormular365B4(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKFormular365B4", otDataParameter, doDataParameter);
        }
    
        public virtual int NZOKFormular365B4Dop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKFormular365B4Dop", otDataParameter, doDataParameter);
        }
    
        public virtual int NZOKFormular365B4Dop1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKFormular365B4Dop1", otDataParameter, doDataParameter);
        }
    
        public virtual int NZOKFormular365B4New(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKFormular365B4New", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B5_Result> NZOKFormular365B5(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B5_Result>("NZOKFormular365B5", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B6_Result> NZOKFormular365B6(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B6_Result>("NZOKFormular365B6", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B62_Result> NZOKFormular365B62(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B62_Result>("NZOKFormular365B62", otDataParameter, doDataParameter);
        }
    
        public virtual int NZOKFormular365B64(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKFormular365B64", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormular365B7_Result> NZOKFormular365B7(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormular365B7_Result>("NZOKFormular365B7", otDataParameter, doDataParameter);
        }
    
        public virtual int NZOKFormularHem0(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKFormularHem0", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormularHem1_Result> NZOKFormularHem1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormularHem1_Result>("NZOKFormularHem1", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKFormularHem2_Result> NZOKFormularHem2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKFormularHem2_Result>("NZOKFormularHem2", otDataParameter, doDataParameter);
        }
    
        public virtual int NZOKFormularHem3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKFormularHem3", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKHospPatients_Result> NZOKHospPatients(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKHospPatients_Result>("NZOKHospPatients", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NzokNaprZaHosp_Result> NzokNaprZaHosp(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NzokNaprZaHosp_Result>("NzokNaprZaHosp", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<NZOKOpis_Result> NZOKOpis(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKOpis_Result>("NZOKOpis", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<NZOKOpisLekari_Result> NZOKOpisLekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKOpisLekari_Result>("NZOKOpisLekari", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NZOKRLLek()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKRLLek");
        }
    
        public virtual int NZOKRLLekIzvadka(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKRLLekIzvadka", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NZOKRLLekIzvadkaEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKRLLekIzvadkaEC", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int NZOKRLLekWord(Nullable<int> lekar)
        {
            var lekarParameter = lekar.HasValue ?
                new ObjectParameter("Lekar", lekar) :
                new ObjectParameter("Lekar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NZOKRLLekWord", lekarParameter);
        }
    
        public virtual ObjectResult<NZOKSub365BR02_Result> NZOKSub365BR02(Nullable<System.DateTime> otdata)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKSub365BR02_Result>("NZOKSub365BR02", otdataParameter);
        }
    
        public virtual ObjectResult<NZOKYear05_Result> NZOKYear05(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NZOKYear05_Result>("NZOKYear05", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ObPlanDii_Result> ObPlanDii(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObPlanDii_Result>("ObPlanDii", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ObPlanEFI_Result> ObPlanEFI(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObPlanEFI_Result>("ObPlanEFI", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ObPlanIP_Result> ObPlanIP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObPlanIP_Result>("ObPlanIP", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ObPlanOper_Result> ObPlanOper(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObPlanOper_Result>("ObPlanOper", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ObPlanPregled_Result> ObPlanPregled(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObPlanPregled_Result>("ObPlanPregled", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ObPlanPriem_Result> ObPlanPriem(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObPlanPriem_Result>("ObPlanPriem", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ObRecepta_Result> ObRecepta(Nullable<int> pacID, Nullable<int> lekID, Nullable<int> iD)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            var lekIDParameter = lekID.HasValue ?
                new ObjectParameter("LekID", lekID) :
                new ObjectParameter("LekID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObRecepta_Result>("ObRecepta", pacIDParameter, lekIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<ObSpravka_Result> ObSpravka(Nullable<System.DateTime> otData, Nullable<System.DateTime> dodata)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("Dodata", dodata) :
                new ObjectParameter("Dodata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObSpravka_Result>("ObSpravka", otDataParameter, dodataParameter);
        }
    
        public virtual ObjectResult<OpActDiiIP_Result> OpActDiiIP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpActDiiIP_Result>("OpActDiiIP", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<OperaciaZveno_Result> OperaciaZveno(Nullable<System.DateTime> data1, Nullable<System.DateTime> data2, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var data1Parameter = data1.HasValue ?
                new ObjectParameter("data1", data1) :
                new ObjectParameter("data1", typeof(System.DateTime));
    
            var data2Parameter = data2.HasValue ?
                new ObjectParameter("data2", data2) :
                new ObjectParameter("data2", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperaciaZveno_Result>("OperaciaZveno", data1Parameter, data2Parameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual ObjectResult<Operacii_Result> Operacii()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Operacii_Result>("Operacii");
        }
    
        public virtual ObjectResult<OperActivnost_Result> OperActivnost(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperActivnost_Result>("OperActivnost", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<OperActLekari_Result> OperActLekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperActLekari_Result>("OperActLekari", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<OperativnaPrograma_Result> OperativnaPrograma(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperativnaPrograma_Result>("OperativnaPrograma", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<OperKP_Result> OperKP(Nullable<decimal> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperKP_Result>("OperKP", bolIDParameter);
        }
    
        public virtual ObjectResult<OperSposobi_Result> OperSposobi(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperSposobi_Result>("OperSposobi", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<OperStatZveno_Result> OperStatZveno(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperStatZveno_Result>("OperStatZveno", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<OPprograma_Result> OPprograma(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OPprograma_Result>("OPprograma", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<OrderDetails_Result> OrderDetails(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderDetails_Result>("OrderDetails", iDParameter);
        }
    
        public virtual int orderentry_DeleteByID(Nullable<int> ordeid)
        {
            var ordeidParameter = ordeid.HasValue ?
                new ObjectParameter("ordeid", ordeid) :
                new ObjectParameter("ordeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("orderentry_DeleteByID", ordeidParameter);
        }
    
        public virtual int PacObedinenie(Nullable<int> iD1, Nullable<int> iD2)
        {
            var iD1Parameter = iD1.HasValue ?
                new ObjectParameter("ID1", iD1) :
                new ObjectParameter("ID1", typeof(int));
    
            var iD2Parameter = iD2.HasValue ?
                new ObjectParameter("ID2", iD2) :
                new ObjectParameter("ID2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacObedinenie", iD1Parameter, iD2Parameter);
        }
    
        public virtual ObjectResult<PACSADT_Result> PACSADT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PACSADT_Result>("PACSADT");
        }
    
        public virtual ObjectResult<PACSADT1_Result> PACSADT1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PACSADT1_Result>("PACSADT1");
        }
    
        public virtual int pantheon_update_meds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pantheon_update_meds");
        }
    
        public virtual ObjectResult<string> PatoDiagnozi(Nullable<int> pochinalID)
        {
            var pochinalIDParameter = pochinalID.HasValue ?
                new ObjectParameter("PochinalID", pochinalID) :
                new ObjectParameter("PochinalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PatoDiagnozi", pochinalIDParameter);
        }
    
        public virtual ObjectResult<PK011_Result> PK011(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PK011_Result>("PK011", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<PlanKabinetiList_Result> PlanKabinetiList(Nullable<System.DateTime> planDate, Nullable<System.DateTime> planDate2)
        {
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            var planDate2Parameter = planDate2.HasValue ?
                new ObjectParameter("PlanDate2", planDate2) :
                new ObjectParameter("PlanDate2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanKabinetiList_Result>("PlanKabinetiList", planDateParameter, planDate2Parameter);
        }
    
        public virtual ObjectResult<PlanOPSPacient_Result> PlanOPSPacient(Nullable<int> pacientID, Nullable<System.DateTime> planDate)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(int));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanOPSPacient_Result>("PlanOPSPacient", pacientIDParameter, planDateParameter);
        }
    
        public virtual ObjectResult<PlanPreglediKabinet_Result> PlanPreglediKabinet(Nullable<int> zvenoID, Nullable<System.DateTime> planDate)
        {
            var zvenoIDParameter = zvenoID.HasValue ?
                new ObjectParameter("ZvenoID", zvenoID) :
                new ObjectParameter("ZvenoID", typeof(int));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanPreglediKabinet_Result>("PlanPreglediKabinet", zvenoIDParameter, planDateParameter);
        }
    
        public virtual ObjectResult<PlanPreglediKabinet1_Result> PlanPreglediKabinet1(Nullable<int> zvenoID, Nullable<System.DateTime> planDate)
        {
            var zvenoIDParameter = zvenoID.HasValue ?
                new ObjectParameter("ZvenoID", zvenoID) :
                new ObjectParameter("ZvenoID", typeof(int));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanPreglediKabinet1_Result>("PlanPreglediKabinet1", zvenoIDParameter, planDateParameter);
        }
    
        public virtual ObjectResult<PlanPregledPacient_Result> PlanPregledPacient(Nullable<int> pacientID, Nullable<System.DateTime> planDate)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(int));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanPregledPacient_Result>("PlanPregledPacient", pacientIDParameter, planDateParameter);
        }
    
        public virtual ObjectResult<PlanPriemKlinika_Result> PlanPriemKlinika(Nullable<int> zvenoID, Nullable<System.DateTime> planDate)
        {
            var zvenoIDParameter = zvenoID.HasValue ?
                new ObjectParameter("ZvenoID", zvenoID) :
                new ObjectParameter("ZvenoID", typeof(int));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanPriemKlinika_Result>("PlanPriemKlinika", zvenoIDParameter, planDateParameter);
        }
    
        public virtual ObjectResult<PlanZaProc_Result> PlanZaProc(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanZaProc_Result>("PlanZaProc", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<PochinaliDo24h_Result> PochinaliDo24h(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PochinaliDo24h_Result>("PochinaliDo24h", otDataParameter, doDataParameter);
        }
    
        public virtual int PochinaliDop(Nullable<System.DateTime> otdata, Nullable<System.DateTime> doData)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("Otdata", otdata) :
                new ObjectParameter("Otdata", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PochinaliDop", otdataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<POEpikriza_Result> POEpikriza(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POEpikriza_Result>("POEpikriza", iDParameter);
        }
    
        public virtual int POEpikrizaUpdate(string prot, Nullable<int> iD)
        {
            var protParameter = prot != null ?
                new ObjectParameter("prot", prot) :
                new ObjectParameter("prot", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POEpikrizaUpdate", protParameter, iDParameter);
        }
    
        public virtual int populatemanytomany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("populatemanytomany");
        }
    
        public virtual ObjectResult<PostDataErrors_Result> PostDataErrors(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostDataErrors_Result>("PostDataErrors", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<PostnatPOchinali_Result> PostnatPOchinali(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostnatPOchinali_Result>("PostnatPOchinali", otDataParameter, doDataParameter);
        }
    
        public virtual int PPLCalcCommon(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> dni, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PPLCalcCommon", otDataParameter, doDataParameter, dniParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual int PPLCalcInt(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> dni, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PPLCalcInt", otDataParameter, doDataParameter, dniParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual int PPLCalcInt_Izv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> dni, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PPLCalcInt_Izv", otDataParameter, doDataParameter, dniParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual ObjectResult<PPLCalcKP_Result> PPLCalcKP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> dni, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PPLCalcKP_Result>("PPLCalcKP", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, dniParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual ObjectResult<PPLCalcSeb_Result> PPLCalcSeb(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> dni, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PPLCalcSeb_Result>("PPLCalcSeb", otDataParameter, doDataParameter, dniParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual ObjectResult<PPLCalcSeb1_Result> PPLCalcSeb1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> dni, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PPLCalcSeb1_Result>("PPLCalcSeb1", otDataParameter, doDataParameter, dniParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual int PracticeSchema_2006(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PracticeSchema_2006", otDataParameter, doDataParameter, medCenturParameter);
        }
    
        public virtual int PracticeSchema_2008(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PracticeSchema_2008", otDataParameter, doDataParameter, medCenturParameter);
        }
    
        public virtual int PracticeSchema_2009(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur, Nullable<int> lekar1, Nullable<int> lekar2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            var lekar1Parameter = lekar1.HasValue ?
                new ObjectParameter("Lekar1", lekar1) :
                new ObjectParameter("Lekar1", typeof(int));
    
            var lekar2Parameter = lekar2.HasValue ?
                new ObjectParameter("Lekar2", lekar2) :
                new ObjectParameter("Lekar2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PracticeSchema_2009", otDataParameter, doDataParameter, medCenturParameter, lekar1Parameter, lekar2Parameter);
        }
    
        public virtual ObjectResult<PracticeSchema_2009New_Result> PracticeSchema_2009New(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur, string lekari)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            var lekariParameter = lekari != null ?
                new ObjectParameter("Lekari", lekari) :
                new ObjectParameter("Lekari", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PracticeSchema_2009New_Result>("PracticeSchema_2009New", otDataParameter, doDataParameter, medCenturParameter, lekariParameter);
        }
    
        public virtual ObjectResult<PregledHosp_Result> PregledHosp(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PregledHosp_Result>("PregledHosp", otDataParameter, doDataParameter);
        }
    
        public virtual int PreminaliPoKP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PreminaliPoKP", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int PreminaliPoKPEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PreminaliPoKPEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int PreminaliPoKPHist(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PreminaliPoKPHist", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual int PreminaliPoKPHistEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PreminaliPoKPHistEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<PreminaliZaDeniaDetaili_Result> PreminaliZaDeniaDetaili(string userView, Nullable<int> isBudget)
        {
            var userViewParameter = userView != null ?
                new ObjectParameter("UserView", userView) :
                new ObjectParameter("UserView", typeof(string));
    
            var isBudgetParameter = isBudget.HasValue ?
                new ObjectParameter("IsBudget", isBudget) :
                new ObjectParameter("IsBudget", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PreminaliZaDeniaDetaili_Result>("PreminaliZaDeniaDetaili", userViewParameter, isBudgetParameter);
        }
    
        public virtual int PrestoiInt(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrestoiInt", otDataParameter, doDataParameter);
        }
    
        public virtual int PrestoiInt1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrestoiInt1");
        }
    
        public virtual ObjectResult<PrestoiIntenzivni_Result> PrestoiIntenzivni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrestoiIntenzivni_Result>("PrestoiIntenzivni", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<PrestoiZaPeriod111_Result> PrestoiZaPeriod111(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrestoiZaPeriod111_Result>("PrestoiZaPeriod111", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<PrevejdaneDateErrors_Result> PrevejdaneDateErrors(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrevejdaneDateErrors_Result>("PrevejdaneDateErrors", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<PrevejdaneMiastoErrors_Result> PrevejdaneMiastoErrors(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrevejdaneMiastoErrors_Result>("PrevejdaneMiastoErrors", otDataParameter, doDataParameter);
        }
    
        public virtual int Pril2_Izv1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pril2_Izv1", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Pril2_Izv2_Result> Pril2_Izv2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pril2_Izv2_Result>("Pril2_Izv2");
        }
    
        public virtual int Pril2_Main(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pril2_Main", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Prilojenie2_Result> Prilojenie2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prilojenie2_Result>("Prilojenie2", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Prilojenie2_0_Result> Prilojenie2_0(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prilojenie2_0_Result>("Prilojenie2_0", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Prilojenie2_1_Result> Prilojenie2_1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prilojenie2_1_Result>("Prilojenie2_1", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Prilojenie2_2_Result> Prilojenie2_2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prilojenie2_2_Result>("Prilojenie2_2", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Prilojenie2_3_Result> Prilojenie2_3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prilojenie2_3_Result>("Prilojenie2_3", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<Prilojenie3_Result> Prilojenie3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prilojenie3_Result>("Prilojenie3", otDataParameter, doDataParameter);
        }
    
        public virtual int ProcDataCorrect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcDataCorrect");
        }
    
        public virtual ObjectResult<ProcDataDisplay_Result> ProcDataDisplay()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcDataDisplay_Result>("ProcDataDisplay");
        }
    
        public virtual int ProcZaDiagnoza()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcZaDiagnoza");
        }
    
        public virtual ObjectResult<ProdNadNorma_Result> ProdNadNorma()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProdNadNorma_Result>("ProdNadNorma");
        }
    
        public virtual ObjectResult<PSpecIMPEC_Result> PSpecIMPEC(Nullable<System.DateTime> data1, Nullable<System.DateTime> data2, Nullable<int> lZ)
        {
            var data1Parameter = data1.HasValue ?
                new ObjectParameter("Data1", data1) :
                new ObjectParameter("Data1", typeof(System.DateTime));
    
            var data2Parameter = data2.HasValue ?
                new ObjectParameter("Data2", data2) :
                new ObjectParameter("Data2", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PSpecIMPEC_Result>("PSpecIMPEC", data1Parameter, data2Parameter, lZParameter);
        }
    
        public virtual ObjectResult<PSpecKPEC_Result> PSpecKPEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PSpecKPEC_Result>("PSpecKPEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<PSpecKPECHist_Result> PSpecKPECHist(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PSpecKPECHist_Result>("PSpecKPECHist", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter);
        }
    
        public virtual ObjectResult<PSpecKPmEC_Result> PSpecKPmEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> hist, Nullable<int> dDS)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var histParameter = hist.HasValue ?
                new ObjectParameter("Hist", hist) :
                new ObjectParameter("Hist", typeof(int));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PSpecKPmEC_Result>("PSpecKPmEC", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, histParameter, dDSParameter);
        }
    
        public virtual ObjectResult<Rajdaemost_Result> Rajdaemost(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rajdaemost_Result>("Rajdaemost", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RazhodiReport_Result> RazhodiReport(Nullable<decimal> razhodiID)
        {
            var razhodiIDParameter = razhodiID.HasValue ?
                new ObjectParameter("RazhodiID", razhodiID) :
                new ObjectParameter("RazhodiID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RazhodiReport_Result>("RazhodiReport", razhodiIDParameter);
        }
    
        public virtual ObjectResult<RazhodiZvena_Result> RazhodiZvena(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RazhodiZvena_Result>("RazhodiZvena", otDataParameter, doDataParameter);
        }
    
        public virtual int RazhodiZvena1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RazhodiZvena1", otDataParameter, doDataParameter);
        }
    
        public virtual int RazhodiZvena2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RazhodiZvena2", otDataParameter, doDataParameter);
        }
    
        public virtual int RazhodiZvena3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RazhodiZvena3");
        }
    
        public virtual ObjectResult<RazhodMedKon_Result> RazhodMedKon(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RazhodMedKon_Result>("RazhodMedKon", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual int razhodtipactivitiesreport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("razhodtipactivitiesreport");
        }
    
        public virtual ObjectResult<RazpredelenieFNI_Result> RazpredelenieFNI(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RazpredelenieFNI_Result>("RazpredelenieFNI", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RazrReHosp_Result> RazrReHosp(Nullable<System.DateTime> otdata, Nullable<System.DateTime> dodata, Nullable<bool> isNapusnali)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("Otdata", otdata) :
                new ObjectParameter("Otdata", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            var isNapusnaliParameter = isNapusnali.HasValue ?
                new ObjectParameter("isNapusnali", isNapusnali) :
                new ObjectParameter("isNapusnali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RazrReHosp_Result>("RazrReHosp", otdataParameter, dodataParameter, isNapusnaliParameter);
        }
    
        public virtual int RazZvenoModify(Nullable<decimal> razZvenoID, Nullable<decimal> razhodiID, string razZvenoKod, Nullable<decimal> razZvenoSuma, Nullable<decimal> razZvenoSrRazLegloden, Nullable<decimal> razZvenoLeglodni, Nullable<bool> toDelete)
        {
            var razZvenoIDParameter = razZvenoID.HasValue ?
                new ObjectParameter("RazZvenoID", razZvenoID) :
                new ObjectParameter("RazZvenoID", typeof(decimal));
    
            var razhodiIDParameter = razhodiID.HasValue ?
                new ObjectParameter("RazhodiID", razhodiID) :
                new ObjectParameter("RazhodiID", typeof(decimal));
    
            var razZvenoKodParameter = razZvenoKod != null ?
                new ObjectParameter("RazZvenoKod", razZvenoKod) :
                new ObjectParameter("RazZvenoKod", typeof(string));
    
            var razZvenoSumaParameter = razZvenoSuma.HasValue ?
                new ObjectParameter("RazZvenoSuma", razZvenoSuma) :
                new ObjectParameter("RazZvenoSuma", typeof(decimal));
    
            var razZvenoSrRazLeglodenParameter = razZvenoSrRazLegloden.HasValue ?
                new ObjectParameter("RazZvenoSrRazLegloden", razZvenoSrRazLegloden) :
                new ObjectParameter("RazZvenoSrRazLegloden", typeof(decimal));
    
            var razZvenoLeglodniParameter = razZvenoLeglodni.HasValue ?
                new ObjectParameter("RazZvenoLeglodni", razZvenoLeglodni) :
                new ObjectParameter("RazZvenoLeglodni", typeof(decimal));
    
            var toDeleteParameter = toDelete.HasValue ?
                new ObjectParameter("ToDelete", toDelete) :
                new ObjectParameter("ToDelete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RazZvenoModify", razZvenoIDParameter, razhodiIDParameter, razZvenoKodParameter, razZvenoSumaParameter, razZvenoSrRazLeglodenParameter, razZvenoLeglodniParameter, toDeleteParameter);
        }
    
        public virtual ObjectResult<RazZvenoSelect_Result> RazZvenoSelect(Nullable<decimal> razhodiID)
        {
            var razhodiIDParameter = razhodiID.HasValue ?
                new ObjectParameter("RazhodiID", razhodiID) :
                new ObjectParameter("RazhodiID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RazZvenoSelect_Result>("RazZvenoSelect", razhodiIDParameter);
        }
    
        public virtual int RCZFormular(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormular", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RCZFormular_P5_Result> RCZFormular_P5(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular_P5_Result>("RCZFormular_P5", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular_P6_Result> RCZFormular_P6(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular_P6_Result>("RCZFormular_P6", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int RCZFormular0(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormular0", otDataParameter, doDataParameter);
        }
    
        public virtual int RCZFormular02(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormular02", otDataParameter, doDataParameter);
        }
    
        public virtual int RCZFormular1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormular1", otDataParameter, doDataParameter);
        }
    
        public virtual int RCZFormular2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormular2", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RCZFormular365_1_Result> RCZFormular365_1(Nullable<System.DateTime> otdata, Nullable<int> lZ)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_1_Result>("RCZFormular365_1", otdataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular365_2_Result> RCZFormular365_2(Nullable<System.DateTime> otdata, Nullable<int> lZ)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_2_Result>("RCZFormular365_2", otdataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular365_3_Result> RCZFormular365_3(Nullable<System.DateTime> otdata, Nullable<System.DateTime> dodata, Nullable<int> lZ)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_3_Result>("RCZFormular365_3", otdataParameter, dodataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular365_4_Result> RCZFormular365_4(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_4_Result>("RCZFormular365_4", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular365_4Dop_Result> RCZFormular365_4Dop()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_4Dop_Result>("RCZFormular365_4Dop");
        }
    
        public virtual ObjectResult<RCZFormular365_5_Result> RCZFormular365_5(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_5_Result>("RCZFormular365_5", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular365_6_Result> RCZFormular365_6(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_6_Result>("RCZFormular365_6", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular365_7_Result> RCZFormular365_7(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular365_7_Result>("RCZFormular365_7", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RCZFormular370_P_Result> RCZFormular370_P(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular370_P_Result>("RCZFormular370_P", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RCZFormular370_PDet_Result> RCZFormular370_PDet(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RCZFormular370_PDet_Result>("RCZFormular370_PDet", otDataParameter, doDataParameter);
        }
    
        public virtual int RCZFormularIzv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormularIzv", otDataParameter, doDataParameter);
        }
    
        public virtual int RCZFormularIzv1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormularIzv1", otDataParameter, doDataParameter);
        }
    
        public virtual int RCZFormularIzv2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RCZFormularIzv2", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ReceptaMedikamenti_Result> ReceptaMedikamenti(Nullable<int> recID)
        {
            var recIDParameter = recID.HasValue ?
                new ObjectParameter("RecID", recID) :
                new ObjectParameter("RecID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceptaMedikamenti_Result>("ReceptaMedikamenti", recIDParameter);
        }
    
        public virtual int RefreshOrder(string myTable, Nullable<int> ordEID, Nullable<int> proID, Nullable<int> ordVid, Nullable<int> proVid, Nullable<int> ordMKB, Nullable<int> proMKb, Nullable<System.DateTime> proData)
        {
            var myTableParameter = myTable != null ?
                new ObjectParameter("MyTable", myTable) :
                new ObjectParameter("MyTable", typeof(string));
    
            var ordEIDParameter = ordEID.HasValue ?
                new ObjectParameter("OrdEID", ordEID) :
                new ObjectParameter("OrdEID", typeof(int));
    
            var proIDParameter = proID.HasValue ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(int));
    
            var ordVidParameter = ordVid.HasValue ?
                new ObjectParameter("OrdVid", ordVid) :
                new ObjectParameter("OrdVid", typeof(int));
    
            var proVidParameter = proVid.HasValue ?
                new ObjectParameter("ProVid", proVid) :
                new ObjectParameter("ProVid", typeof(int));
    
            var ordMKBParameter = ordMKB.HasValue ?
                new ObjectParameter("OrdMKB", ordMKB) :
                new ObjectParameter("OrdMKB", typeof(int));
    
            var proMKbParameter = proMKb.HasValue ?
                new ObjectParameter("ProMKb", proMKb) :
                new ObjectParameter("ProMKb", typeof(int));
    
            var proDataParameter = proData.HasValue ?
                new ObjectParameter("ProData", proData) :
                new ObjectParameter("ProData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshOrder", myTableParameter, ordEIDParameter, proIDParameter, ordVidParameter, proVidParameter, ordMKBParameter, proMKbParameter, proDataParameter);
        }
    
        public virtual int RefreshOrderLab(string myTable, Nullable<int> ordEID, Nullable<int> proID, string ordVid, string proVid, Nullable<int> ordMKB, Nullable<int> proMKb, Nullable<System.DateTime> proData)
        {
            var myTableParameter = myTable != null ?
                new ObjectParameter("MyTable", myTable) :
                new ObjectParameter("MyTable", typeof(string));
    
            var ordEIDParameter = ordEID.HasValue ?
                new ObjectParameter("OrdEID", ordEID) :
                new ObjectParameter("OrdEID", typeof(int));
    
            var proIDParameter = proID.HasValue ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(int));
    
            var ordVidParameter = ordVid != null ?
                new ObjectParameter("OrdVid", ordVid) :
                new ObjectParameter("OrdVid", typeof(string));
    
            var proVidParameter = proVid != null ?
                new ObjectParameter("ProVid", proVid) :
                new ObjectParameter("ProVid", typeof(string));
    
            var ordMKBParameter = ordMKB.HasValue ?
                new ObjectParameter("OrdMKB", ordMKB) :
                new ObjectParameter("OrdMKB", typeof(int));
    
            var proMKbParameter = proMKb.HasValue ?
                new ObjectParameter("ProMKb", proMKb) :
                new ObjectParameter("ProMKb", typeof(int));
    
            var proDataParameter = proData.HasValue ?
                new ObjectParameter("ProData", proData) :
                new ObjectParameter("ProData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshOrderLab", myTableParameter, ordEIDParameter, proIDParameter, ordVidParameter, proVidParameter, ordMKBParameter, proMKbParameter, proDataParameter);
        }
    
        public virtual ObjectResult<RegDispZZOL_Result> RegDispZZOL(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegDispZZOL_Result>("RegDispZZOL", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<RegEGNNull_Result> RegEGNNull(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegEGNNull_Result>("RegEGNNull", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RegistarEkip_Result> RegistarEkip(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistarEkip_Result>("RegistarEkip", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RegistarNovorodeni_Result> RegistarNovorodeni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistarNovorodeni_Result>("RegistarNovorodeni", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RegistrZZOL_Result> RegistrZZOL(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistrZZOL_Result>("RegistrZZOL", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RegLat_Result> RegLat(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegLat_Result>("RegLat", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<RegStand_Result> RegStand(Nullable<int> dogID)
        {
            var dogIDParameter = dogID.HasValue ?
                new ObjectParameter("DogID", dogID) :
                new ObjectParameter("DogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegStand_Result>("RegStand", dogIDParameter);
        }
    
        public virtual int RegStandCopy(Nullable<int> newID, Nullable<int> oldID)
        {
            var newIDParameter = newID.HasValue ?
                new ObjectParameter("NewID", newID) :
                new ObjectParameter("NewID", typeof(int));
    
            var oldIDParameter = oldID.HasValue ?
                new ObjectParameter("OldID", oldID) :
                new ObjectParameter("OldID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegStandCopy", newIDParameter, oldIDParameter);
        }
    
        public virtual ObjectResult<RegStandIzv_Result> RegStandIzv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ, Nullable<int> dogID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            var dogIDParameter = dogID.HasValue ?
                new ObjectParameter("DogID", dogID) :
                new ObjectParameter("DogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegStandIzv_Result>("RegStandIzv", otDataParameter, doDataParameter, lZParameter, dogIDParameter);
        }
    
        public virtual ObjectResult<RegStandSpr_Result> RegStandSpr(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ, Nullable<int> dogID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            var dogIDParameter = dogID.HasValue ?
                new ObjectParameter("DogID", dogID) :
                new ObjectParameter("DogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegStandSpr_Result>("RegStandSpr", otDataParameter, doDataParameter, lZParameter, dogIDParameter);
        }
    
        public virtual ObjectResult<RegStandSpr1_Result> RegStandSpr1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ, Nullable<int> dogID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            var dogIDParameter = dogID.HasValue ?
                new ObjectParameter("DogID", dogID) :
                new ObjectParameter("DogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegStandSpr1_Result>("RegStandSpr1", otDataParameter, doDataParameter, lZParameter, dogIDParameter);
        }
    
        public virtual ObjectResult<RegStandSpr2_Result> RegStandSpr2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ, Nullable<int> dogID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            var dogIDParameter = dogID.HasValue ?
                new ObjectParameter("DogID", dogID) :
                new ObjectParameter("DogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegStandSpr2_Result>("RegStandSpr2", otDataParameter, doDataParameter, lZParameter, dogIDParameter);
        }
    
        public virtual ObjectResult<RegStandSpr3_Result> RegStandSpr3(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ, Nullable<int> dogID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            var dogIDParameter = dogID.HasValue ?
                new ObjectParameter("DogID", dogID) :
                new ObjectParameter("DogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegStandSpr3_Result>("RegStandSpr3", otDataParameter, doDataParameter, lZParameter, dogIDParameter);
        }
    
        public virtual ObjectResult<Report213_Result> Report213(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report213_Result>("Report213", otDataParameter, doDataParameter);
        }
    
        public virtual int RestoreSec_Log1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreSec_Log1");
        }
    
        public virtual int RODLabLekari()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RODLabLekari");
        }
    
        public virtual ObjectResult<rpAG015_Result> rpAG015(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpAG015_Result>("rpAG015", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpAG016_Result> rpAG016(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpAG016_Result>("rpAG016", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpAG017_Result> rpAG017(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpAG017_Result>("rpAG017", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpAK002_Result> rpAK002(Nullable<System.DateTime> otData, Nullable<System.DateTime> dodata)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpAK002_Result>("rpAK002", otDataParameter, dodataParameter);
        }
    
        public virtual ObjectResult<rpAKrpt1_Result> rpAKrpt1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno, Nullable<int> pacID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpAKrpt1_Result>("rpAKrpt1", otDataParameter, doDataParameter, zvenoParameter, pacIDParameter);
        }
    
        public virtual ObjectResult<rpBL003_Result> rpBL003(Nullable<int> zveno, Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBL003_Result>("rpBL003", zvenoParameter, otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpBP009_Result> rpBP009(Nullable<System.DateTime> otdata, Nullable<System.DateTime> dodata, Nullable<bool> isNapusnali)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            var isNapusnaliParameter = isNapusnali.HasValue ?
                new ObjectParameter("isNapusnali", isNapusnali) :
                new ObjectParameter("isNapusnali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBP009_Result>("rpBP009", otdataParameter, dodataParameter, isNapusnaliParameter);
        }
    
        public virtual ObjectResult<rpBP032_Result> rpBP032(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBP032_Result>("rpBP032", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpBP033_Result> rpBP033(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBP033_Result>("rpBP033", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpBP034_Result> rpBP034(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, string zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno != null ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBP034_Result>("rpBP034", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual int rpBS032(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpBS032", otDataParameter, doDataParameter);
        }
    
        public virtual int rpBS032Izv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<bool> isNzok, Nullable<bool> excludeBudget)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var isNzokParameter = isNzok.HasValue ?
                new ObjectParameter("IsNzok", isNzok) :
                new ObjectParameter("IsNzok", typeof(bool));
    
            var excludeBudgetParameter = excludeBudget.HasValue ?
                new ObjectParameter("ExcludeBudget", excludeBudget) :
                new ObjectParameter("ExcludeBudget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpBS032Izv", otDataParameter, doDataParameter, isNzokParameter, excludeBudgetParameter);
        }
    
        public virtual ObjectResult<rpBS057_Result> rpBS057(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBS057_Result>("rpBS057", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpBS057a_Result> rpBS057a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBS057a_Result>("rpBS057a", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpBS058_Result> rpBS058(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBS058_Result>("rpBS058", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpBS058a_Result> rpBS058a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpBS058a_Result>("rpBS058a", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpDI001_Result> rpDI001(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<System.DateTime> deliveryDate, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpDI001_Result>("rpDI001", otDataParameter, doDataParameter, deliveryDateParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpDI003_Result> rpDI003(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpDI003_Result>("rpDI003", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpDI004_Result> rpDI004(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpDI004_Result>("rpDI004", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpDI005_Result> rpDI005(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno, Nullable<int> dietSelection)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            var dietSelectionParameter = dietSelection.HasValue ?
                new ObjectParameter("DietSelection", dietSelection) :
                new ObjectParameter("DietSelection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpDI005_Result>("rpDI005", otDataParameter, doDataParameter, zvenoParameter, dietSelectionParameter);
        }
    
        public virtual ObjectResult<rpDI006_Result> rpDI006(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpDI006_Result>("rpDI006", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpFA010_Result> rpFA010(Nullable<System.DateTime> data1, Nullable<System.DateTime> data2, Nullable<decimal> mC)
        {
            var data1Parameter = data1.HasValue ?
                new ObjectParameter("Data1", data1) :
                new ObjectParameter("Data1", typeof(System.DateTime));
    
            var data2Parameter = data2.HasValue ?
                new ObjectParameter("Data2", data2) :
                new ObjectParameter("Data2", typeof(System.DateTime));
    
            var mCParameter = mC.HasValue ?
                new ObjectParameter("MC", mC) :
                new ObjectParameter("MC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpFA010_Result>("rpFA010", data1Parameter, data2Parameter, mCParameter);
        }
    
        public virtual ObjectResult<rpFA011_Result> rpFA011(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpFA011_Result>("rpFA011", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpIZ106_Result> rpIZ106(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ106_Result>("rpIZ106", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpIZ207_Result> rpIZ207(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ207_Result>("rpIZ207", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpIZ604_Result> rpIZ604(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lz1, Nullable<int> lz2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lz1Parameter = lz1.HasValue ?
                new ObjectParameter("Lz1", lz1) :
                new ObjectParameter("Lz1", typeof(int));
    
            var lz2Parameter = lz2.HasValue ?
                new ObjectParameter("Lz2", lz2) :
                new ObjectParameter("Lz2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ604_Result>("rpIZ604", otDataParameter, doDataParameter, lz1Parameter, lz2Parameter);
        }
    
        public virtual ObjectResult<rpIZ605_Result> rpIZ605(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ1, Nullable<int> lz2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZ1Parameter = lZ1.HasValue ?
                new ObjectParameter("LZ1", lZ1) :
                new ObjectParameter("LZ1", typeof(int));
    
            var lz2Parameter = lz2.HasValue ?
                new ObjectParameter("Lz2", lz2) :
                new ObjectParameter("Lz2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ605_Result>("rpIZ605", otDataParameter, doDataParameter, lZ1Parameter, lz2Parameter);
        }
    
        public virtual ObjectResult<rpIZ704_Result> rpIZ704(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lz1, Nullable<int> lz2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lz1Parameter = lz1.HasValue ?
                new ObjectParameter("Lz1", lz1) :
                new ObjectParameter("Lz1", typeof(int));
    
            var lz2Parameter = lz2.HasValue ?
                new ObjectParameter("Lz2", lz2) :
                new ObjectParameter("Lz2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ704_Result>("rpIZ704", otDataParameter, doDataParameter, lz1Parameter, lz2Parameter);
        }
    
        public virtual ObjectResult<rpIZ705_Result> rpIZ705(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ1, Nullable<int> lz2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZ1Parameter = lZ1.HasValue ?
                new ObjectParameter("LZ1", lZ1) :
                new ObjectParameter("LZ1", typeof(int));
    
            var lz2Parameter = lz2.HasValue ?
                new ObjectParameter("Lz2", lz2) :
                new ObjectParameter("Lz2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ705_Result>("rpIZ705", otDataParameter, doDataParameter, lZ1Parameter, lz2Parameter);
        }
    
        public virtual ObjectResult<rpIZ707_Result> rpIZ707(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ1, Nullable<int> lz2, Nullable<int> m1, Nullable<int> m2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZ1Parameter = lZ1.HasValue ?
                new ObjectParameter("LZ1", lZ1) :
                new ObjectParameter("LZ1", typeof(int));
    
            var lz2Parameter = lz2.HasValue ?
                new ObjectParameter("Lz2", lz2) :
                new ObjectParameter("Lz2", typeof(int));
    
            var m1Parameter = m1.HasValue ?
                new ObjectParameter("M1", m1) :
                new ObjectParameter("M1", typeof(int));
    
            var m2Parameter = m2.HasValue ?
                new ObjectParameter("M2", m2) :
                new ObjectParameter("M2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ707_Result>("rpIZ707", otDataParameter, doDataParameter, lZ1Parameter, lz2Parameter, m1Parameter, m2Parameter);
        }
    
        public virtual ObjectResult<rpIZ708_Result> rpIZ708(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentar, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var medCentarParameter = medCentar.HasValue ?
                new ObjectParameter("MedCentar", medCentar) :
                new ObjectParameter("MedCentar", typeof(int));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpIZ708_Result>("rpIZ708", otDataParameter, doDataParameter, medCentarParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpKS010_Result> rpKS010(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpKS010_Result>("rpKS010", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<rpLL005_Result> rpLL005(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, string zvenoIdList, string drugsIdList, Nullable<int> status)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoIdListParameter = zvenoIdList != null ?
                new ObjectParameter("ZvenoIdList", zvenoIdList) :
                new ObjectParameter("ZvenoIdList", typeof(string));
    
            var drugsIdListParameter = drugsIdList != null ?
                new ObjectParameter("DrugsIdList", drugsIdList) :
                new ObjectParameter("DrugsIdList", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpLL005_Result>("rpLL005", otDataParameter, doDataParameter, zvenoIdListParameter, drugsIdListParameter, statusParameter);
        }
    
        public virtual ObjectResult<rpMN001Prmn_Result> rpMN001Prmn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<bool> histolog, Nullable<bool> regulars, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var regularsParameter = regulars.HasValue ?
                new ObjectParameter("Regulars", regulars) :
                new ObjectParameter("Regulars", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN001Prmn_Result>("rpMN001Prmn", otDataParameter, doDataParameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, histologParameter, regularsParameter, nzokContractsIdsParameter);
        }
    
        public virtual int rpMN001rmn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<int> osig, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> regulars, string nzokContractsIds, Nullable<bool> isEuPatient)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var osigParameter = osig.HasValue ?
                new ObjectParameter("Osig", osig) :
                new ObjectParameter("Osig", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var regularsParameter = regulars.HasValue ?
                new ObjectParameter("Regulars", regulars) :
                new ObjectParameter("Regulars", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            var isEuPatientParameter = isEuPatient.HasValue ?
                new ObjectParameter("IsEuPatient", isEuPatient) :
                new ObjectParameter("IsEuPatient", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN001rmn", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, osigParameter, pMS17Parameter, histologParameter, regularsParameter, nzokContractsIdsParameter, isEuPatientParameter);
        }
    
        public virtual int rpMN002Ermn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> regulars, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var regularsParameter = regulars.HasValue ?
                new ObjectParameter("Regulars", regulars) :
                new ObjectParameter("Regulars", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN002Ermn", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, pMS17Parameter, histologParameter, regularsParameter, nzokContractsIdsParameter);
        }
    
        public virtual int rpMN002rmn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> regulars, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var regularsParameter = regulars.HasValue ?
                new ObjectParameter("Regulars", regulars) :
                new ObjectParameter("Regulars", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN002rmn", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, pMS17Parameter, histologParameter, regularsParameter, nzokContractsIdsParameter);
        }
    
        public virtual int rpMN003Ermn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> regulars, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var regularsParameter = regulars.HasValue ?
                new ObjectParameter("Regulars", regulars) :
                new ObjectParameter("Regulars", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN003Ermn", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, pMS17Parameter, histologParameter, regularsParameter, nzokContractsIdsParameter);
        }
    
        public virtual int rpMN003rmn(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> regulars, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var regularsParameter = regulars.HasValue ?
                new ObjectParameter("Regulars", regulars) :
                new ObjectParameter("Regulars", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN003rmn", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, pMS17Parameter, histologParameter, regularsParameter, nzokContractsIdsParameter);
        }
    
        public virtual ObjectResult<rpMN005cgk_Result> rpMN005cgk(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> dDS, Nullable<decimal> periodID, Nullable<int> varnat, Nullable<bool> pMS17, Nullable<bool> foreigner, Nullable<bool> histolog, Nullable<bool> oldStyle, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(decimal));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var foreignerParameter = foreigner.HasValue ?
                new ObjectParameter("Foreigner", foreigner) :
                new ObjectParameter("Foreigner", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var oldStyleParameter = oldStyle.HasValue ?
                new ObjectParameter("OldStyle", oldStyle) :
                new ObjectParameter("OldStyle", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN005cgk_Result>("rpMN005cgk", otDataParameter, doDataParameter, otchetParameter, dDSParameter, periodIDParameter, varnatParameter, pMS17Parameter, foreignerParameter, histologParameter, oldStyleParameter, nzokContractsIdsParameter);
        }
    
        public virtual ObjectResult<rpMN005cgkNKB_Result> rpMN005cgkNKB(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> dDS, Nullable<decimal> periodID, Nullable<int> varnat, Nullable<bool> pMS17, Nullable<bool> foreigner, Nullable<bool> histolog, Nullable<bool> oldStyle, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(decimal));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var foreignerParameter = foreigner.HasValue ?
                new ObjectParameter("Foreigner", foreigner) :
                new ObjectParameter("Foreigner", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var oldStyleParameter = oldStyle.HasValue ?
                new ObjectParameter("OldStyle", oldStyle) :
                new ObjectParameter("OldStyle", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN005cgkNKB_Result>("rpMN005cgkNKB", otDataParameter, doDataParameter, otchetParameter, dDSParameter, periodIDParameter, varnatParameter, pMS17Parameter, foreignerParameter, histologParameter, oldStyleParameter, nzokContractsIdsParameter);
        }
    
        public virtual ObjectResult<rpMN005P_Result> rpMN005P(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> hist, Nullable<int> dDS, Nullable<decimal> periodID, Nullable<int> varnat, Nullable<bool> oldStyle, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var histParameter = hist.HasValue ?
                new ObjectParameter("Hist", hist) :
                new ObjectParameter("Hist", typeof(int));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(decimal));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var oldStyleParameter = oldStyle.HasValue ?
                new ObjectParameter("OldStyle", oldStyle) :
                new ObjectParameter("OldStyle", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN005P_Result>("rpMN005P", otDataParameter, doDataParameter, otchetParameter, histParameter, dDSParameter, periodIDParameter, varnatParameter, oldStyleParameter, nzokContractsIdsParameter);
        }
    
        public virtual ObjectResult<rpMN006cgk_Result> rpMN006cgk(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> dDS, Nullable<decimal> periodID, Nullable<int> varnat, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> foreigner, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(decimal));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var foreignerParameter = foreigner.HasValue ?
                new ObjectParameter("Foreigner", foreigner) :
                new ObjectParameter("Foreigner", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN006cgk_Result>("rpMN006cgk", otDataParameter, doDataParameter, otchetParameter, dDSParameter, periodIDParameter, varnatParameter, pMS17Parameter, histologParameter, foreignerParameter, nzokContractsIdsParameter);
        }
    
        public virtual ObjectResult<rpMN006cgkNKB_Result> rpMN006cgkNKB(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> dDS, Nullable<decimal> periodID, Nullable<int> varnat, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> foreigner, string nzokContractsIds)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var dDSParameter = dDS.HasValue ?
                new ObjectParameter("DDS", dDS) :
                new ObjectParameter("DDS", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(decimal));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var foreignerParameter = foreigner.HasValue ?
                new ObjectParameter("Foreigner", foreigner) :
                new ObjectParameter("Foreigner", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN006cgkNKB_Result>("rpMN006cgkNKB", otDataParameter, doDataParameter, otchetParameter, dDSParameter, periodIDParameter, varnatParameter, pMS17Parameter, histologParameter, foreignerParameter, nzokContractsIdsParameter);
        }
    
        public virtual ObjectResult<rpMN009Lekari_Result> rpMN009Lekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN009Lekari_Result>("rpMN009Lekari", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN010a_Result> rpMN010a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN010a_Result>("rpMN010a", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN010b_Result> rpMN010b(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN010b_Result>("rpMN010b", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN010c_Result> rpMN010c(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN010c_Result>("rpMN010c", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN010Ea_Result> rpMN010Ea(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN010Ea_Result>("rpMN010Ea", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN010Eb_Result> rpMN010Eb(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN010Eb_Result>("rpMN010Eb", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN010Ec_Result> rpMN010Ec(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN010Ec_Result>("rpMN010Ec", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN011Lekari_Result> rpMN011Lekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN011Lekari_Result>("rpMN011Lekari", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN013_Result> rpMN013(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<bool> pMS17)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN013_Result>("rpMN013", otDataParameter, doDataParameter, otchetParameter, pMS17Parameter);
        }
    
        public virtual ObjectResult<rpMN013_2015_Result> rpMN013_2015(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<bool> pMS17, Nullable<bool> isEuPatient)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var isEuPatientParameter = isEuPatient.HasValue ?
                new ObjectParameter("IsEuPatient", isEuPatient) :
                new ObjectParameter("IsEuPatient", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN013_2015_Result>("rpMN013_2015", otDataParameter, doDataParameter, otchetParameter, pMS17Parameter, isEuPatientParameter);
        }
    
        public virtual ObjectResult<rpMN013P_Result> rpMN013P(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN013P_Result>("rpMN013P", otDataParameter, doDataParameter, otchetParameter);
        }
    
        public virtual ObjectResult<rpMN014N0_Result> rpMN014N0(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> blOtchet, Nullable<int> pKOtchet, Nullable<bool> pMS17, Nullable<bool> isEUPatient)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var blOtchetParameter = blOtchet.HasValue ?
                new ObjectParameter("BlOtchet", blOtchet) :
                new ObjectParameter("BlOtchet", typeof(int));
    
            var pKOtchetParameter = pKOtchet.HasValue ?
                new ObjectParameter("PKOtchet", pKOtchet) :
                new ObjectParameter("PKOtchet", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var isEUPatientParameter = isEUPatient.HasValue ?
                new ObjectParameter("isEUPatient", isEUPatient) :
                new ObjectParameter("isEUPatient", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN014N0_Result>("rpMN014N0", otDataParameter, doDataParameter, blOtchetParameter, pKOtchetParameter, pMS17Parameter, isEUPatientParameter);
        }
    
        public virtual int rpMN014N3cgk(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<int> osig, Nullable<bool> pMS17, Nullable<bool> histolog, Nullable<bool> regulars, string nzokContractsIds, Nullable<bool> isEUPatient)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var osigParameter = osig.HasValue ?
                new ObjectParameter("Osig", osig) :
                new ObjectParameter("Osig", typeof(int));
    
            var pMS17Parameter = pMS17.HasValue ?
                new ObjectParameter("PMS17", pMS17) :
                new ObjectParameter("PMS17", typeof(bool));
    
            var histologParameter = histolog.HasValue ?
                new ObjectParameter("Histolog", histolog) :
                new ObjectParameter("Histolog", typeof(bool));
    
            var regularsParameter = regulars.HasValue ?
                new ObjectParameter("Regulars", regulars) :
                new ObjectParameter("Regulars", typeof(bool));
    
            var nzokContractsIdsParameter = nzokContractsIds != null ?
                new ObjectParameter("nzokContractsIds", nzokContractsIds) :
                new ObjectParameter("nzokContractsIds", typeof(string));
    
            var isEUPatientParameter = isEUPatient.HasValue ?
                new ObjectParameter("isEUPatient", isEUPatient) :
                new ObjectParameter("isEUPatient", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN014N3cgk", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, osigParameter, pMS17Parameter, histologParameter, regularsParameter, nzokContractsIdsParameter, isEUPatientParameter);
        }
    
        public virtual ObjectResult<rpMN015_Result> rpMN015(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<decimal> zoES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var zoESParameter = zoES.HasValue ?
                new ObjectParameter("ZoES", zoES) :
                new ObjectParameter("ZoES", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN015_Result>("rpMN015", otDataParameter, doDataParameter, lZParameter, zoESParameter);
        }
    
        public virtual int rpMN016A(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN016A", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual int rpMN016AENew(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN016AENew", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual int rpMN016AEv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN016AEv", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual int rpMN016AEx(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN016AEx", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual int rpMN016ANew(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN016ANew", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual int rpMN016Av(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN016Av", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual int rpMN016Ax(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpMN016Ax", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpMN016B_Result> rpMN016B(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet, Nullable<int> zOES)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var zOESParameter = zOES.HasValue ?
                new ObjectParameter("ZOES", zOES) :
                new ObjectParameter("ZOES", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN016B_Result>("rpMN016B", otDataParameter, doDataParameter, otchetParameter, zOESParameter);
        }
    
        public virtual ObjectResult<rpMN017_Result> rpMN017(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN017_Result>("rpMN017", otDataParameter, doDataParameter, otchetParameter);
        }
    
        public virtual ObjectResult<rpMN017E_Result> rpMN017E(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN017E_Result>("rpMN017E", otDataParameter, doDataParameter, otchetParameter);
        }
    
        public virtual ObjectResult<rpMN018a_Result> rpMN018a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN018a_Result>("rpMN018a", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN018b_Result> rpMN018b(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN018b_Result>("rpMN018b", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN018c_Result> rpMN018c(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN018c_Result>("rpMN018c", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN020a_Result> rpMN020a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN020a_Result>("rpMN020a", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN020b_Result> rpMN020b(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN020b_Result>("rpMN020b", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN020c_Result> rpMN020c(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN020c_Result>("rpMN020c", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN021a_Result> rpMN021a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN021a_Result>("rpMN021a", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN021Lekari_Result> rpMN021Lekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN021Lekari_Result>("rpMN021Lekari", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN023a_Result> rpMN023a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN023a_Result>("rpMN023a", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN023b_Result> rpMN023b(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN023b_Result>("rpMN023b", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN023c_Result> rpMN023c(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN023c_Result>("rpMN023c", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpMN024_Result> rpMN024(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpMN024_Result>("rpMN024", otDataParameter, doDataParameter, otchetParameter);
        }
    
        public virtual ObjectResult<rpPK001N_Result> rpPK001N(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpPK001N_Result>("rpPK001N", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpPK005_Result> rpPK005(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpPK005_Result>("rpPK005", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpPK007_Result> rpPK007(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpPK007_Result>("rpPK007", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpPK008_Result> rpPK008(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpPK008_Result>("rpPK008", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpPK009_Result> rpPK009(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpPK009_Result>("rpPK009", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpPK010_Result> rpPK010(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpPK010_Result>("rpPK010", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpPK012_Result> rpPK012(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpPK012_Result>("rpPK012", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rptBolData_Result> rptBolData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptBolData_Result>("rptBolData");
        }
    
        public virtual ObjectResult<rpTD001_Result> rpTD001(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpTD001_Result>("rpTD001", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpXA014_Result> rpXA014(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXA014_Result>("rpXA014", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpXA015_Result> rpXA015(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXA015_Result>("rpXA015", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<rpXB001_Result> rpXB001(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> rZOK)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var rZOKParameter = rZOK.HasValue ?
                new ObjectParameter("RZOK", rZOK) :
                new ObjectParameter("RZOK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXB001_Result>("rpXB001", otDataParameter, doDataParameter, rZOKParameter);
        }
    
        public virtual ObjectResult<rpXC001_Result> rpXC001(Nullable<System.DateTime> otdata, Nullable<System.DateTime> dodata, Nullable<int> zveno)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("zveno", zveno) :
                new ObjectParameter("zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXC001_Result>("rpXC001", otdataParameter, dodataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<rpXK005_Result> rpXK005(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> pKSelection)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var pKSelectionParameter = pKSelection.HasValue ?
                new ObjectParameter("PKSelection", pKSelection) :
                new ObjectParameter("PKSelection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXK005_Result>("rpXK005", otDataParameter, doDataParameter, pKSelectionParameter);
        }
    
        public virtual ObjectResult<rpXK005Day_Result> rpXK005Day(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> pKOtdOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var pKOtdOtchetParameter = pKOtdOtchet.HasValue ?
                new ObjectParameter("PKOtdOtchet", pKOtdOtchet) :
                new ObjectParameter("PKOtdOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXK005Day_Result>("rpXK005Day", otDataParameter, doDataParameter, pKOtdOtchetParameter);
        }
    
        public virtual ObjectResult<rpXK005LastDay_Result> rpXK005LastDay(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> pKOtdOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var pKOtdOtchetParameter = pKOtdOtchet.HasValue ?
                new ObjectParameter("PKOtdOtchet", pKOtdOtchet) :
                new ObjectParameter("PKOtdOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXK005LastDay_Result>("rpXK005LastDay", otDataParameter, doDataParameter, pKOtdOtchetParameter);
        }
    
        public virtual ObjectResult<rpXK005Period_Result> rpXK005Period(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> pKOtdOtchet)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var pKOtdOtchetParameter = pKOtdOtchet.HasValue ?
                new ObjectParameter("PKOtdOtchet", pKOtdOtchet) :
                new ObjectParameter("PKOtdOtchet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXK005Period_Result>("rpXK005Period", otDataParameter, doDataParameter, pKOtdOtchetParameter);
        }
    
        public virtual ObjectResult<rpXK014_Result> rpXK014(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXK014_Result>("rpXK014", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<rpXS002a_Result> rpXS002a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS002a_Result>("rpXS002a", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS002aNKB_Result> rpXS002aNKB(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS002aNKB_Result>("rpXS002aNKB", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS002b_Result> rpXS002b(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID, Nullable<int> pacZoes)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var pacZoesParameter = pacZoes.HasValue ?
                new ObjectParameter("PacZoes", pacZoes) :
                new ObjectParameter("PacZoes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS002b_Result>("rpXS002b", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter, pacZoesParameter);
        }
    
        public virtual ObjectResult<rpXS002xa_Result> rpXS002xa(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS002xa_Result>("rpXS002xa", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS002xaNKB_Result> rpXS002xaNKB(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS002xaNKB_Result>("rpXS002xaNKB", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS002xb_Result> rpXS002xb(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS002xb_Result>("rpXS002xb", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS003a_Result> rpXS003a(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS003a_Result>("rpXS003a", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS003aNKB_Result> rpXS003aNKB(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS003aNKB_Result>("rpXS003aNKB", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS003b_Result> rpXS003b(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS003b_Result>("rpXS003b", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS003xa_Result> rpXS003xa(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS003xa_Result>("rpXS003xa", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS003xaNKB_Result> rpXS003xaNKB(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS003xaNKB_Result>("rpXS003xaNKB", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS003xb_Result> rpXS003xb(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> otchet, Nullable<int> cena, Nullable<int> varnat, Nullable<int> periodID)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var otchetParameter = otchet.HasValue ?
                new ObjectParameter("Otchet", otchet) :
                new ObjectParameter("Otchet", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS003xb_Result>("rpXS003xb", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, otchetParameter, cenaParameter, varnatParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<rpXS007_Result> rpXS007(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> varnat, Nullable<int> otdelen)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var otdelenParameter = otdelen.HasValue ?
                new ObjectParameter("Otdelen", otdelen) :
                new ObjectParameter("Otdelen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS007_Result>("rpXS007", otDataParameter, doDataParameter, varnatParameter, otdelenParameter);
        }
    
        public virtual ObjectResult<rpXS007A_Result> rpXS007A(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> selection)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("Selection", selection) :
                new ObjectParameter("Selection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS007A_Result>("rpXS007A", otDataParameter, doDataParameter, selectionParameter);
        }
    
        public virtual ObjectResult<rpXS007Avo_Result> rpXS007Avo(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> varnat, Nullable<int> otdelen)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var otdelenParameter = otdelen.HasValue ?
                new ObjectParameter("Otdelen", otdelen) :
                new ObjectParameter("Otdelen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS007Avo_Result>("rpXS007Avo", otDataParameter, doDataParameter, varnatParameter, otdelenParameter);
        }
    
        public virtual ObjectResult<rpXS007AvoProcs_Result> rpXS007AvoProcs(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> varnat, Nullable<int> otdelen)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var otdelenParameter = otdelen.HasValue ?
                new ObjectParameter("Otdelen", otdelen) :
                new ObjectParameter("Otdelen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS007AvoProcs_Result>("rpXS007AvoProcs", otDataParameter, doDataParameter, varnatParameter, otdelenParameter);
        }
    
        public virtual ObjectResult<rpXS007Procs_Result> rpXS007Procs(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> varnat, Nullable<int> otdelen)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var varnatParameter = varnat.HasValue ?
                new ObjectParameter("Varnat", varnat) :
                new ObjectParameter("Varnat", typeof(int));
    
            var otdelenParameter = otdelen.HasValue ?
                new ObjectParameter("Otdelen", otdelen) :
                new ObjectParameter("Otdelen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpXS007Procs_Result>("rpXS007Procs", otDataParameter, doDataParameter, varnatParameter, otdelenParameter);
        }
    
        public virtual int rpYS008A(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpYS008A", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<selectBLIST_Result> selectBLIST(Nullable<int> bLID, Nullable<int> bolistID, Nullable<int> ambListID, Nullable<int> pregledID, Nullable<int> kpLechenieID)
        {
            var bLIDParameter = bLID.HasValue ?
                new ObjectParameter("BLID", bLID) :
                new ObjectParameter("BLID", typeof(int));
    
            var bolistIDParameter = bolistID.HasValue ?
                new ObjectParameter("BolistID", bolistID) :
                new ObjectParameter("BolistID", typeof(int));
    
            var ambListIDParameter = ambListID.HasValue ?
                new ObjectParameter("AmbListID", ambListID) :
                new ObjectParameter("AmbListID", typeof(int));
    
            var pregledIDParameter = pregledID.HasValue ?
                new ObjectParameter("PregledID", pregledID) :
                new ObjectParameter("PregledID", typeof(int));
    
            var kpLechenieIDParameter = kpLechenieID.HasValue ?
                new ObjectParameter("KpLechenieID", kpLechenieID) :
                new ObjectParameter("KpLechenieID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectBLIST_Result>("selectBLIST", bLIDParameter, bolistIDParameter, ambListIDParameter, pregledIDParameter, kpLechenieIDParameter);
        }
    
        public virtual ObjectResult<SelectEvents_Result> SelectEvents(Nullable<int> @event, Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var eventParameter = @event.HasValue ?
                new ObjectParameter("Event", @event) :
                new ObjectParameter("Event", typeof(int));
    
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectEvents_Result>("SelectEvents", eventParameter, otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<SelectForm315_Result> SelectForm315(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectForm315_Result>("SelectForm315", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<SelectForm315A_Result> SelectForm315A(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectForm315A_Result>("SelectForm315A", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<SelectKPEstimate_Result> SelectKPEstimate(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> cena)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectKPEstimate_Result>("SelectKPEstimate", otDataParameter, doDataParameter, dogovorIDParameter, dogovorID1Parameter, cenaParameter);
        }
    
        public virtual int SetTabelaPrinted(Nullable<System.DateTime> naData, Nullable<decimal> tmTabelaZveno)
        {
            var naDataParameter = naData.HasValue ?
                new ObjectParameter("NaData", naData) :
                new ObjectParameter("NaData", typeof(System.DateTime));
    
            var tmTabelaZvenoParameter = tmTabelaZveno.HasValue ?
                new ObjectParameter("TmTabelaZveno", tmTabelaZveno) :
                new ObjectParameter("TmTabelaZveno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetTabelaPrinted", naDataParameter, tmTabelaZvenoParameter);
        }
    
        public virtual ObjectResult<SignalnaInformacia_Result> SignalnaInformacia(Nullable<decimal> pacID)
        {
            var pacIDParameter = pacID.HasValue ?
                new ObjectParameter("PacID", pacID) :
                new ObjectParameter("PacID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SignalnaInformacia_Result>("SignalnaInformacia", pacIDParameter);
        }
    
        public virtual ObjectResult<SignalnaInformaciaAll_Result> SignalnaInformaciaAll(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SignalnaInformaciaAll_Result>("SignalnaInformaciaAll", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<SluchaiPoKP_Result> SluchaiPoKP(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> zveno, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(decimal));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SluchaiPoKP_Result>("SluchaiPoKP", otDataParameter, doDataParameter, zvenoParameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual int SluchaiPoKP2014(Nullable<int> hist, Nullable<int> otch)
        {
            var histParameter = hist.HasValue ?
                new ObjectParameter("Hist", hist) :
                new ObjectParameter("Hist", typeof(int));
    
            var otchParameter = otch.HasValue ?
                new ObjectParameter("Otch", otch) :
                new ObjectParameter("Otch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SluchaiPoKP2014", histParameter, otchParameter);
        }
    
        public virtual ObjectResult<Smetka_Result> Smetka(Nullable<int> pac)
        {
            var pacParameter = pac.HasValue ?
                new ObjectParameter("Pac", pac) :
                new ObjectParameter("Pac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Smetka_Result>("Smetka", pacParameter);
        }
    
        public virtual int SmetkaModify(Nullable<decimal> pacientID, Nullable<int> type, string usluga, Nullable<decimal> cena, Nullable<decimal> broi, string dates, Nullable<System.DateTime> data1, Nullable<decimal> avans, Nullable<decimal> medCentar)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(decimal));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var uslugaParameter = usluga != null ?
                new ObjectParameter("Usluga", usluga) :
                new ObjectParameter("Usluga", typeof(string));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(decimal));
    
            var broiParameter = broi.HasValue ?
                new ObjectParameter("Broi", broi) :
                new ObjectParameter("Broi", typeof(decimal));
    
            var datesParameter = dates != null ?
                new ObjectParameter("Dates", dates) :
                new ObjectParameter("Dates", typeof(string));
    
            var data1Parameter = data1.HasValue ?
                new ObjectParameter("Data1", data1) :
                new ObjectParameter("Data1", typeof(System.DateTime));
    
            var avansParameter = avans.HasValue ?
                new ObjectParameter("Avans", avans) :
                new ObjectParameter("Avans", typeof(decimal));
    
            var medCentarParameter = medCentar.HasValue ?
                new ObjectParameter("MedCentar", medCentar) :
                new ObjectParameter("MedCentar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SmetkaModify", pacientIDParameter, typeParameter, uslugaParameter, cenaParameter, broiParameter, datesParameter, data1Parameter, avansParameter, medCentarParameter);
        }
    
        public virtual int SmetkaModifyNew(Nullable<decimal> smetkaID, Nullable<decimal> pacientID, Nullable<decimal> medCentarID, Nullable<System.DateTime> smetkaData, Nullable<int> smetkaPored, string uslugaIme, Nullable<decimal> uslugaBroi, Nullable<decimal> uslugaCena, Nullable<System.DateTime> uslugaData, Nullable<decimal> uslugaID, Nullable<decimal> eventID, string eventTbl, Nullable<decimal> facID, Nullable<decimal> plashtane, Nullable<decimal> subID, Nullable<decimal> uslugaDDS)
        {
            var smetkaIDParameter = smetkaID.HasValue ?
                new ObjectParameter("SmetkaID", smetkaID) :
                new ObjectParameter("SmetkaID", typeof(decimal));
    
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("PacientID", pacientID) :
                new ObjectParameter("PacientID", typeof(decimal));
    
            var medCentarIDParameter = medCentarID.HasValue ?
                new ObjectParameter("MedCentarID", medCentarID) :
                new ObjectParameter("MedCentarID", typeof(decimal));
    
            var smetkaDataParameter = smetkaData.HasValue ?
                new ObjectParameter("SmetkaData", smetkaData) :
                new ObjectParameter("SmetkaData", typeof(System.DateTime));
    
            var smetkaPoredParameter = smetkaPored.HasValue ?
                new ObjectParameter("SmetkaPored", smetkaPored) :
                new ObjectParameter("SmetkaPored", typeof(int));
    
            var uslugaImeParameter = uslugaIme != null ?
                new ObjectParameter("UslugaIme", uslugaIme) :
                new ObjectParameter("UslugaIme", typeof(string));
    
            var uslugaBroiParameter = uslugaBroi.HasValue ?
                new ObjectParameter("UslugaBroi", uslugaBroi) :
                new ObjectParameter("UslugaBroi", typeof(decimal));
    
            var uslugaCenaParameter = uslugaCena.HasValue ?
                new ObjectParameter("UslugaCena", uslugaCena) :
                new ObjectParameter("UslugaCena", typeof(decimal));
    
            var uslugaDataParameter = uslugaData.HasValue ?
                new ObjectParameter("UslugaData", uslugaData) :
                new ObjectParameter("UslugaData", typeof(System.DateTime));
    
            var uslugaIDParameter = uslugaID.HasValue ?
                new ObjectParameter("UslugaID", uslugaID) :
                new ObjectParameter("UslugaID", typeof(decimal));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(decimal));
    
            var eventTblParameter = eventTbl != null ?
                new ObjectParameter("EventTbl", eventTbl) :
                new ObjectParameter("EventTbl", typeof(string));
    
            var facIDParameter = facID.HasValue ?
                new ObjectParameter("FacID", facID) :
                new ObjectParameter("FacID", typeof(decimal));
    
            var plashtaneParameter = plashtane.HasValue ?
                new ObjectParameter("Plashtane", plashtane) :
                new ObjectParameter("Plashtane", typeof(decimal));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(decimal));
    
            var uslugaDDSParameter = uslugaDDS.HasValue ?
                new ObjectParameter("UslugaDDS", uslugaDDS) :
                new ObjectParameter("UslugaDDS", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SmetkaModifyNew", smetkaIDParameter, pacientIDParameter, medCentarIDParameter, smetkaDataParameter, smetkaPoredParameter, uslugaImeParameter, uslugaBroiParameter, uslugaCenaParameter, uslugaDataParameter, uslugaIDParameter, eventIDParameter, eventTblParameter, facIDParameter, plashtaneParameter, subIDParameter, uslugaDDSParameter);
        }
    
        public virtual ObjectResult<SmetkaNew_Result> SmetkaNew(Nullable<int> pac, Nullable<bool> isBG)
        {
            var pacParameter = pac.HasValue ?
                new ObjectParameter("Pac", pac) :
                new ObjectParameter("Pac", typeof(int));
    
            var isBGParameter = isBG.HasValue ?
                new ObjectParameter("IsBG", isBG) :
                new ObjectParameter("IsBG", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SmetkaNew_Result>("SmetkaNew", pacParameter, isBGParameter);
        }
    
        public virtual ObjectResult<SMOBZADT_Result> SMOBZADT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMOBZADT_Result>("SMOBZADT");
        }
    
        public virtual ObjectResult<SMOBZDelete_Result> SMOBZDelete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMOBZDelete_Result>("SMOBZDelete");
        }
    
        public virtual int sp_GetLastID(string modulName)
        {
            var modulNameParameter = modulName != null ?
                new ObjectParameter("modulName", modulName) :
                new ObjectParameter("modulName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetLastID", modulNameParameter);
        }
    
        public virtual ObjectResult<sp_NRD2005Lekari_Result> sp_NRD2005Lekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NRD2005Lekari_Result>("sp_NRD2005Lekari", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual ObjectResult<sp_NRD2005Lekari_V_nO_nD_Result> sp_NRD2005Lekari_V_nO_nD(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NRD2005Lekari_V_nO_nD_Result>("sp_NRD2005Lekari_V_nO_nD", otDataParameter, doDataParameter, lZParameter);
        }
    
        public virtual int sp_OSIOMD_InsertRazhodiInternal(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<decimal> kR_RazhodLekar)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var kR_RazhodLekarParameter = kR_RazhodLekar.HasValue ?
                new ObjectParameter("KR_RazhodLekar", kR_RazhodLekar) :
                new ObjectParameter("KR_RazhodLekar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OSIOMD_InsertRazhodiInternal", fromDateParameter, toDateParameter, kR_RazhodLekarParameter);
        }
    
        public virtual int sp_OSIOMD_InsertRazhodiOuter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<decimal> kR_VNKRazhod)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var kR_VNKRazhodParameter = kR_VNKRazhod.HasValue ?
                new ObjectParameter("KR_VNKRazhod", kR_VNKRazhod) :
                new ObjectParameter("KR_VNKRazhod", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OSIOMD_InsertRazhodiOuter", fromDateParameter, toDateParameter, kR_VNKRazhodParameter);
        }
    
        public virtual int sp_OSIOMD_InsertRazhodiPac(string iZNO, Nullable<decimal> bL_RazMed, Nullable<decimal> bL_RazKon)
        {
            var iZNOParameter = iZNO != null ?
                new ObjectParameter("IZNO", iZNO) :
                new ObjectParameter("IZNO", typeof(string));
    
            var bL_RazMedParameter = bL_RazMed.HasValue ?
                new ObjectParameter("BL_RazMed", bL_RazMed) :
                new ObjectParameter("BL_RazMed", typeof(decimal));
    
            var bL_RazKonParameter = bL_RazKon.HasValue ?
                new ObjectParameter("BL_RazKon", bL_RazKon) :
                new ObjectParameter("BL_RazKon", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OSIOMD_InsertRazhodiPac", iZNOParameter, bL_RazMedParameter, bL_RazKonParameter);
        }
    
        public virtual int sp_OSIOMD_InsertRazhodiZvena(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string p_Xml)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var p_XmlParameter = p_Xml != null ?
                new ObjectParameter("p_Xml", p_Xml) :
                new ObjectParameter("p_Xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OSIOMD_InsertRazhodiZvena", fromDateParameter, toDateParameter, p_XmlParameter);
        }
    
        public virtual int sp_OSIOMD_Serv1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OSIOMD_Serv1", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<SpecIMPLekari_Result> SpecIMPLekari(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpecIMPLekari_Result>("SpecIMPLekari", otDataParameter, doDataParameter, lZParameter, otData2Parameter, lKKForAllDoctorsParameter);
        }
    
        public virtual ObjectResult<SpecIMPLekariEC_Result> SpecIMPLekariEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpecIMPLekariEC_Result>("SpecIMPLekariEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, lKKForAllDoctorsParameter);
        }
    
        public virtual int SpecImpLekariSS(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpecImpLekariSS", otDataParameter, doDataParameter, lZParameter, otData2Parameter, lKKForAllDoctorsParameter);
        }
    
        public virtual int SpecImpLekariSSEC(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<decimal> lZ, Nullable<System.DateTime> otData2, Nullable<bool> lKKForAllDoctors)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var lZParameter = lZ.HasValue ?
                new ObjectParameter("LZ", lZ) :
                new ObjectParameter("LZ", typeof(decimal));
    
            var otData2Parameter = otData2.HasValue ?
                new ObjectParameter("OtData2", otData2) :
                new ObjectParameter("OtData2", typeof(System.DateTime));
    
            var lKKForAllDoctorsParameter = lKKForAllDoctors.HasValue ?
                new ObjectParameter("LKKForAllDoctors", lKKForAllDoctors) :
                new ObjectParameter("LKKForAllDoctors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpecImpLekariSSEC", otDataParameter, doDataParameter, lZParameter, otData2Parameter, lKKForAllDoctorsParameter);
        }
    
        public virtual ObjectResult<SpecImpLekariWord_Result> SpecImpLekariWord(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpecImpLekariWord_Result>("SpecImpLekariWord", iDParameter);
        }
    
        public virtual int spInsertKpLeckenieToCypro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertKpLeckenieToCypro");
        }
    
        public virtual ObjectResult<SpravkaPregled_Result> SpravkaPregled(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpravkaPregled_Result>("SpravkaPregled", date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<SpravkiNOI_Result> SpravkiNOI(Nullable<int> tip, Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var tipParameter = tip.HasValue ?
                new ObjectParameter("Tip", tip) :
                new ObjectParameter("Tip", typeof(int));
    
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpravkiNOI_Result>("SpravkiNOI", tipParameter, otDataParameter, doDataParameter);
        }
    
        public virtual int SprLeglodni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SprLeglodni", otDataParameter, doDataParameter);
        }
    
        public virtual int SprLeglodniDop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> otGod, Nullable<int> doGod, Nullable<int> zveno1, Nullable<int> zveno2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var otGodParameter = otGod.HasValue ?
                new ObjectParameter("OtGod", otGod) :
                new ObjectParameter("OtGod", typeof(int));
    
            var doGodParameter = doGod.HasValue ?
                new ObjectParameter("DoGod", doGod) :
                new ObjectParameter("DoGod", typeof(int));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SprLeglodniDop", otDataParameter, doDataParameter, otGodParameter, doGodParameter, zveno1Parameter, zveno2Parameter);
        }
    
        public virtual int SprLeglodniZveno(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zvenoParameter = zveno.HasValue ?
                new ObjectParameter("Zveno", zveno) :
                new ObjectParameter("Zveno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SprLeglodniZveno", otDataParameter, doDataParameter, zvenoParameter);
        }
    
        public virtual ObjectResult<SprTabela_Result> SprTabela(Nullable<int> pacientID, Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var pacientIDParameter = pacientID.HasValue ?
                new ObjectParameter("pacientID", pacientID) :
                new ObjectParameter("pacientID", typeof(int));
    
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SprTabela_Result>("SprTabela", pacientIDParameter, otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<StacInfo1_Result> StacInfo1(Nullable<System.DateTime> datata)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StacInfo1_Result>("StacInfo1", datataParameter);
        }
    
        public virtual ObjectResult<StacPokazateli_Result> StacPokazateli(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StacPokazateli_Result>("StacPokazateli", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<StationarInfo_Result> StationarInfo(Nullable<System.DateTime> datata, Nullable<bool> excludeBudget)
        {
            var datataParameter = datata.HasValue ?
                new ObjectParameter("Datata", datata) :
                new ObjectParameter("Datata", typeof(System.DateTime));
    
            var excludeBudgetParameter = excludeBudget.HasValue ?
                new ObjectParameter("excludeBudget", excludeBudget) :
                new ObjectParameter("excludeBudget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StationarInfo_Result>("StationarInfo", datataParameter, excludeBudgetParameter);
        }
    
        public virtual int StatistikaHosp(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaHosp", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual int StatistikaHospitalizirani(Nullable<int> vrnt, Nullable<int> otch)
        {
            var vrntParameter = vrnt.HasValue ?
                new ObjectParameter("Vrnt", vrnt) :
                new ObjectParameter("Vrnt", typeof(int));
    
            var otchParameter = otch.HasValue ?
                new ObjectParameter("Otch", otch) :
                new ObjectParameter("Otch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaHospitalizirani", vrntParameter, otchParameter);
        }
    
        public virtual int StatistikaHospIzv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> vrnt, Nullable<int> otch)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var vrntParameter = vrnt.HasValue ?
                new ObjectParameter("Vrnt", vrnt) :
                new ObjectParameter("Vrnt", typeof(int));
    
            var otchParameter = otch.HasValue ?
                new ObjectParameter("Otch", otch) :
                new ObjectParameter("Otch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaHospIzv", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter, dogovorIDParameter, dogovorID1Parameter, vrntParameter, otchParameter);
        }
    
        public virtual ObjectResult<StatistikaNapusnali_Result> StatistikaNapusnali(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StatistikaNapusnali_Result>("StatistikaNapusnali", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<StatistikaPrieti_Result> StatistikaPrieti(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StatistikaPrieti_Result>("StatistikaPrieti", otDataParameter, doDataParameter);
        }
    
        public virtual int StatistikaPrihodi(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaPrihodi", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual int StatistikaPrihodiGraf(Nullable<int> hist, Nullable<int> otch)
        {
            var histParameter = hist.HasValue ?
                new ObjectParameter("Hist", hist) :
                new ObjectParameter("Hist", typeof(int));
    
            var otchParameter = otch.HasValue ?
                new ObjectParameter("Otch", otch) :
                new ObjectParameter("Otch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaPrihodiGraf", histParameter, otchParameter);
        }
    
        public virtual int StatistikaPrihodiIzv(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> hist, Nullable<int> otch)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var histParameter = hist.HasValue ?
                new ObjectParameter("Hist", hist) :
                new ObjectParameter("Hist", typeof(int));
    
            var otchParameter = otch.HasValue ?
                new ObjectParameter("Otch", otch) :
                new ObjectParameter("Otch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaPrihodiIzv", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter, dogovorIDParameter, dogovorID1Parameter, histParameter, otchParameter);
        }
    
        public virtual int StatistikaPrihodiIzvVR(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1, Nullable<int> hist, Nullable<int> otch)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            var histParameter = hist.HasValue ?
                new ObjectParameter("Hist", hist) :
                new ObjectParameter("Hist", typeof(int));
    
            var otchParameter = otch.HasValue ?
                new ObjectParameter("Otch", otch) :
                new ObjectParameter("Otch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaPrihodiIzvVR", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter, dogovorIDParameter, dogovorID1Parameter, histParameter, otchParameter);
        }
    
        public virtual int StatistikaPrihodiNew(Nullable<int> hist, Nullable<int> otch)
        {
            var histParameter = hist.HasValue ?
                new ObjectParameter("Hist", hist) :
                new ObjectParameter("Hist", typeof(int));
    
            var otchParameter = otch.HasValue ?
                new ObjectParameter("Otch", otch) :
                new ObjectParameter("Otch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaPrihodiNew", histParameter, otchParameter);
        }
    
        public virtual int StatistikaPrihodiVR(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> zveno1, Nullable<int> zveno2, Nullable<decimal> dogovorID, Nullable<decimal> dogovorID1)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            var zveno1Parameter = zveno1.HasValue ?
                new ObjectParameter("Zveno1", zveno1) :
                new ObjectParameter("Zveno1", typeof(int));
    
            var zveno2Parameter = zveno2.HasValue ?
                new ObjectParameter("Zveno2", zveno2) :
                new ObjectParameter("Zveno2", typeof(int));
    
            var dogovorIDParameter = dogovorID.HasValue ?
                new ObjectParameter("DogovorID", dogovorID) :
                new ObjectParameter("DogovorID", typeof(decimal));
    
            var dogovorID1Parameter = dogovorID1.HasValue ?
                new ObjectParameter("DogovorID1", dogovorID1) :
                new ObjectParameter("DogovorID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatistikaPrihodiVR", otDataParameter, doDataParameter, zveno1Parameter, zveno2Parameter, dogovorIDParameter, dogovorID1Parameter);
        }
    
        public virtual int StNapusnali(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StNapusnali", otDataParameter, doDataParameter);
        }
    
        public virtual int StNapusnaliDop(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StNapusnaliDop", otDataParameter, doDataParameter);
        }
    
        public virtual int sysUpdateIzprLekarPSPraktika()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sysUpdateIzprLekarPSPraktika");
        }
    
        public virtual int sysUpdateNomenklatura()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sysUpdateNomenklatura");
        }
    
        public virtual int sysupdateposlednoid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sysupdateposlednoid");
        }
    
        public virtual int sysUpdatePraktika()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sysUpdatePraktika");
        }
    
        public virtual ObjectResult<TestAmbLists_Result> TestAmbLists(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestAmbLists_Result>("TestAmbLists", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<testLoadImplants_Result> testLoadImplants(string kpkod, string diagkod)
        {
            var kpkodParameter = kpkod != null ?
                new ObjectParameter("kpkod", kpkod) :
                new ObjectParameter("kpkod", typeof(string));
    
            var diagkodParameter = diagkod != null ?
                new ObjectParameter("diagkod", diagkod) :
                new ObjectParameter("diagkod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<testLoadImplants_Result>("testLoadImplants", kpkodParameter, diagkodParameter);
        }
    
        public virtual int ToSMOBZFromBl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ToSMOBZFromBl");
        }
    
        public virtual int tracemsg(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tracemsg", idParameter);
        }
    
        public virtual ObjectResult<TurseneProsto_Result> TurseneProsto(string pacEGN, string pacIme, string pacPrezime, string pacFamilia)
        {
            var pacEGNParameter = pacEGN != null ?
                new ObjectParameter("PacEGN", pacEGN) :
                new ObjectParameter("PacEGN", typeof(string));
    
            var pacImeParameter = pacIme != null ?
                new ObjectParameter("PacIme", pacIme) :
                new ObjectParameter("PacIme", typeof(string));
    
            var pacPrezimeParameter = pacPrezime != null ?
                new ObjectParameter("PacPrezime", pacPrezime) :
                new ObjectParameter("PacPrezime", typeof(string));
    
            var pacFamiliaParameter = pacFamilia != null ?
                new ObjectParameter("PacFamilia", pacFamilia) :
                new ObjectParameter("PacFamilia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TurseneProsto_Result>("TurseneProsto", pacEGNParameter, pacImeParameter, pacPrezimeParameter, pacFamiliaParameter);
        }
    
        public virtual ObjectResult<TurseneRazshireno_Result> TurseneRazshireno(string pacEGN, string pacIme, string pacPrezime, string pacFamilia, Nullable<int> pacKravnaGrupa, Nullable<int> pacDarjava, string pacTip, string pacJurnalenNomer, string pacArhivenNomer, string pacIZNomer, Nullable<int> diagnozaID, Nullable<bool> pregled, Nullable<bool> smurtDiag, Nullable<bool> patoDiag, Nullable<bool> nasochDiag, Nullable<bool> priemDiag, Nullable<bool> osnovnaDiag, Nullable<bool> histologDiag, Nullable<bool> operativnaDiag, Nullable<bool> prevejdaneDiag, Nullable<bool> dispDosie)
        {
            var pacEGNParameter = pacEGN != null ?
                new ObjectParameter("PacEGN", pacEGN) :
                new ObjectParameter("PacEGN", typeof(string));
    
            var pacImeParameter = pacIme != null ?
                new ObjectParameter("PacIme", pacIme) :
                new ObjectParameter("PacIme", typeof(string));
    
            var pacPrezimeParameter = pacPrezime != null ?
                new ObjectParameter("PacPrezime", pacPrezime) :
                new ObjectParameter("PacPrezime", typeof(string));
    
            var pacFamiliaParameter = pacFamilia != null ?
                new ObjectParameter("PacFamilia", pacFamilia) :
                new ObjectParameter("PacFamilia", typeof(string));
    
            var pacKravnaGrupaParameter = pacKravnaGrupa.HasValue ?
                new ObjectParameter("PacKravnaGrupa", pacKravnaGrupa) :
                new ObjectParameter("PacKravnaGrupa", typeof(int));
    
            var pacDarjavaParameter = pacDarjava.HasValue ?
                new ObjectParameter("PacDarjava", pacDarjava) :
                new ObjectParameter("PacDarjava", typeof(int));
    
            var pacTipParameter = pacTip != null ?
                new ObjectParameter("PacTip", pacTip) :
                new ObjectParameter("PacTip", typeof(string));
    
            var pacJurnalenNomerParameter = pacJurnalenNomer != null ?
                new ObjectParameter("PacJurnalenNomer", pacJurnalenNomer) :
                new ObjectParameter("PacJurnalenNomer", typeof(string));
    
            var pacArhivenNomerParameter = pacArhivenNomer != null ?
                new ObjectParameter("PacArhivenNomer", pacArhivenNomer) :
                new ObjectParameter("PacArhivenNomer", typeof(string));
    
            var pacIZNomerParameter = pacIZNomer != null ?
                new ObjectParameter("PacIZNomer", pacIZNomer) :
                new ObjectParameter("PacIZNomer", typeof(string));
    
            var diagnozaIDParameter = diagnozaID.HasValue ?
                new ObjectParameter("DiagnozaID", diagnozaID) :
                new ObjectParameter("DiagnozaID", typeof(int));
    
            var pregledParameter = pregled.HasValue ?
                new ObjectParameter("Pregled", pregled) :
                new ObjectParameter("Pregled", typeof(bool));
    
            var smurtDiagParameter = smurtDiag.HasValue ?
                new ObjectParameter("SmurtDiag", smurtDiag) :
                new ObjectParameter("SmurtDiag", typeof(bool));
    
            var patoDiagParameter = patoDiag.HasValue ?
                new ObjectParameter("PatoDiag", patoDiag) :
                new ObjectParameter("PatoDiag", typeof(bool));
    
            var nasochDiagParameter = nasochDiag.HasValue ?
                new ObjectParameter("NasochDiag", nasochDiag) :
                new ObjectParameter("NasochDiag", typeof(bool));
    
            var priemDiagParameter = priemDiag.HasValue ?
                new ObjectParameter("PriemDiag", priemDiag) :
                new ObjectParameter("PriemDiag", typeof(bool));
    
            var osnovnaDiagParameter = osnovnaDiag.HasValue ?
                new ObjectParameter("OsnovnaDiag", osnovnaDiag) :
                new ObjectParameter("OsnovnaDiag", typeof(bool));
    
            var histologDiagParameter = histologDiag.HasValue ?
                new ObjectParameter("HistologDiag", histologDiag) :
                new ObjectParameter("HistologDiag", typeof(bool));
    
            var operativnaDiagParameter = operativnaDiag.HasValue ?
                new ObjectParameter("OperativnaDiag", operativnaDiag) :
                new ObjectParameter("OperativnaDiag", typeof(bool));
    
            var prevejdaneDiagParameter = prevejdaneDiag.HasValue ?
                new ObjectParameter("PrevejdaneDiag", prevejdaneDiag) :
                new ObjectParameter("PrevejdaneDiag", typeof(bool));
    
            var dispDosieParameter = dispDosie.HasValue ?
                new ObjectParameter("DispDosie", dispDosie) :
                new ObjectParameter("DispDosie", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TurseneRazshireno_Result>("TurseneRazshireno", pacEGNParameter, pacImeParameter, pacPrezimeParameter, pacFamiliaParameter, pacKravnaGrupaParameter, pacDarjavaParameter, pacTipParameter, pacJurnalenNomerParameter, pacArhivenNomerParameter, pacIZNomerParameter, diagnozaIDParameter, pregledParameter, smurtDiagParameter, patoDiagParameter, nasochDiagParameter, priemDiagParameter, osnovnaDiagParameter, histologDiagParameter, operativnaDiagParameter, prevejdaneDiagParameter, dispDosieParameter);
        }
    
        public virtual ObjectResult<uinSelector_Result> uinSelector(string uin)
        {
            var uinParameter = uin != null ?
                new ObjectParameter("uin", uin) :
                new ObjectParameter("uin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uinSelector_Result>("uinSelector", uinParameter);
        }
    
        public virtual int UnCopySec_Log(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnCopySec_Log", otDataParameter, doDataParameter);
        }
    
        public virtual int UpdateBLNapOtdel(Nullable<decimal> bolID)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBLNapOtdel", bolIDParameter);
        }
    
        public virtual int UpdateCenorazpis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCenorazpis");
        }
    
        public virtual int updateDealerNZOK(ObjectParameter res)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDealerNZOK", res);
        }
    
        public virtual int UpdateDispDosie()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDispDosie");
        }
    
        public virtual int updateDrugsMKB(ObjectParameter res)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDrugsMKB", res);
        }
    
        public virtual int updateImplantantNZOK(ObjectParameter res)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateImplantantNZOK", res);
        }
    
        public virtual int UpdateKlinPatImpl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateKlinPatImpl");
        }
    
        public virtual int UpdateLabProKrai(Nullable<int> bolID, Nullable<System.DateTime> napData)
        {
            var bolIDParameter = bolID.HasValue ?
                new ObjectParameter("BolID", bolID) :
                new ObjectParameter("BolID", typeof(int));
    
            var napDataParameter = napData.HasValue ?
                new ObjectParameter("NapData", napData) :
                new ObjectParameter("NapData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLabProKrai", bolIDParameter, napDataParameter);
        }
    
        public virtual int updateMedNzok(ObjectParameter res)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMedNzok", res);
        }
    
        public virtual int UpdateProc(Nullable<int> ot, Nullable<int> @do)
        {
            var otParameter = ot.HasValue ?
                new ObjectParameter("Ot", ot) :
                new ObjectParameter("Ot", typeof(int));
    
            var doParameter = @do.HasValue ?
                new ObjectParameter("Do", @do) :
                new ObjectParameter("Do", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProc", otParameter, doParameter);
        }
    
        public virtual int UpdateProDataChasNULL(Nullable<int> ot, Nullable<int> @do)
        {
            var otParameter = ot.HasValue ?
                new ObjectParameter("Ot", ot) :
                new ObjectParameter("Ot", typeof(int));
    
            var doParameter = @do.HasValue ?
                new ObjectParameter("Do", @do) :
                new ObjectParameter("Do", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProDataChasNULL", otParameter, doParameter);
        }
    
        public virtual int UpdateProdNadNorma(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProdNadNorma", otDataParameter, doDataParameter);
        }
    
        public virtual int UpdateProProd(Nullable<int> ot, Nullable<int> @do)
        {
            var otParameter = ot.HasValue ?
                new ObjectParameter("Ot", ot) :
                new ObjectParameter("Ot", typeof(int));
    
            var doParameter = @do.HasValue ?
                new ObjectParameter("Do", @do) :
                new ObjectParameter("Do", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProProd", otParameter, doParameter);
        }
    
        public virtual int UpdateSpecPersonal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSpecPersonal");
        }
    
        public virtual ObjectResult<userDefaultsLoad_Result> userDefaultsLoad(string username, string formname)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var formnameParameter = formname != null ?
                new ObjectParameter("formname", formname) :
                new ObjectParameter("formname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<userDefaultsLoad_Result>("userDefaultsLoad", usernameParameter, formnameParameter);
        }
    
        public virtual int userDefaultsSave(string username, string formname, string ctrlname, string value)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var formnameParameter = formname != null ?
                new ObjectParameter("formname", formname) :
                new ObjectParameter("formname", typeof(string));
    
            var ctrlnameParameter = ctrlname != null ?
                new ObjectParameter("ctrlname", ctrlname) :
                new ObjectParameter("ctrlname", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("userDefaultsSave", usernameParameter, formnameParameter, ctrlnameParameter, valueParameter);
        }
    
        public virtual int VDStatistikaZvena(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VDStatistikaZvena", otDataParameter, doDataParameter);
        }
    
        public virtual int VDStatistikaZvena0(Nullable<bool> excludeBudget)
        {
            var excludeBudgetParameter = excludeBudget.HasValue ?
                new ObjectParameter("ExcludeBudget", excludeBudget) :
                new ObjectParameter("ExcludeBudget", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VDStatistikaZvena0", excludeBudgetParameter);
        }
    
        public virtual int VDStatistikaZvena1(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VDStatistikaZvena1", otDataParameter, doDataParameter);
        }
    
        public virtual int VDStatistikaZvena2(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VDStatistikaZvena2", otDataParameter, doDataParameter);
        }
    
        public virtual int VedomostDV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VedomostDV");
        }
    
        public virtual int VedomostDVZveno(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VedomostDVZveno", idParameter);
        }
    
        public virtual ObjectResult<VSDFileSchema_Result> VSDFileSchema(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VSDFileSchema_Result>("VSDFileSchema", otDataParameter, doDataParameter);
        }
    
        public virtual int WeightedCalculationByEventAndUnitModify(Nullable<decimal> id, Nullable<decimal> razhodiid, Nullable<decimal> zvenoid, Nullable<decimal> razhodtipid, Nullable<double> weightedCount, Nullable<decimal> avaragePrice)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            var zvenoidParameter = zvenoid.HasValue ?
                new ObjectParameter("zvenoid", zvenoid) :
                new ObjectParameter("zvenoid", typeof(decimal));
    
            var razhodtipidParameter = razhodtipid.HasValue ?
                new ObjectParameter("razhodtipid", razhodtipid) :
                new ObjectParameter("razhodtipid", typeof(decimal));
    
            var weightedCountParameter = weightedCount.HasValue ?
                new ObjectParameter("WeightedCount", weightedCount) :
                new ObjectParameter("WeightedCount", typeof(double));
    
            var avaragePriceParameter = avaragePrice.HasValue ?
                new ObjectParameter("AvaragePrice", avaragePrice) :
                new ObjectParameter("AvaragePrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCalculationByEventAndUnitModify", idParameter, razhodiidParameter, zvenoidParameter, razhodtipidParameter, weightedCountParameter, avaragePriceParameter);
        }
    
        public virtual int WeightedCountAutopsy(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountAutopsy", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountByEventAndUnit(Nullable<decimal> razhodiid)
        {
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountByEventAndUnit", razhodiidParameter);
        }
    
        public virtual int WeightedCountDII(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountDII", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountEFI(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountEFI", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountFNI(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountFNI", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountHEM(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountHEM", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountIP(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountIP", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountLaboratory(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountLaboratory", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountOperation(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountOperation", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual int WeightedCountROD(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> razhodiid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var razhodiidParameter = razhodiid.HasValue ?
                new ObjectParameter("razhodiid", razhodiid) :
                new ObjectParameter("razhodiid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WeightedCountROD", fromdateParameter, todateParameter, razhodiidParameter);
        }
    
        public virtual ObjectResult<XA011_Result> XA011(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData, Nullable<int> medCentur, Nullable<int> lekar1, Nullable<int> lekar2)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("otData", otData) :
                new ObjectParameter("otData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("doData", doData) :
                new ObjectParameter("doData", typeof(System.DateTime));
    
            var medCenturParameter = medCentur.HasValue ?
                new ObjectParameter("medCentur", medCentur) :
                new ObjectParameter("medCentur", typeof(int));
    
            var lekar1Parameter = lekar1.HasValue ?
                new ObjectParameter("Lekar1", lekar1) :
                new ObjectParameter("Lekar1", typeof(int));
    
            var lekar2Parameter = lekar2.HasValue ?
                new ObjectParameter("Lekar2", lekar2) :
                new ObjectParameter("Lekar2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<XA011_Result>("XA011", otDataParameter, doDataParameter, medCenturParameter, lekar1Parameter, lekar2Parameter);
        }
    
        public virtual ObjectResult<xk005_commissions_Result> xk005_commissions(Nullable<System.DateTime> otdata, Nullable<System.DateTime> dodata)
        {
            var otdataParameter = otdata.HasValue ?
                new ObjectParameter("otdata", otdata) :
                new ObjectParameter("otdata", typeof(System.DateTime));
    
            var dodataParameter = dodata.HasValue ?
                new ObjectParameter("dodata", dodata) :
                new ObjectParameter("dodata", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xk005_commissions_Result>("xk005_commissions", otdataParameter, dodataParameter);
        }
    
        public virtual ObjectResult<YS016Danni_Result> YS016Danni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<YS016Danni_Result>("YS016Danni", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<YS016Shifr_Result> YS016Shifr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<YS016Shifr_Result>("YS016Shifr");
        }
    
        public virtual ObjectResult<ZaboliavaneNovorodeni_Result> ZaboliavaneNovorodeni(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaboliavaneNovorodeni_Result>("ZaboliavaneNovorodeni", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ZaboliavaneNovorodeni_old_Result> ZaboliavaneNovorodeni_old(Nullable<System.DateTime> otData, Nullable<System.DateTime> doData)
        {
            var otDataParameter = otData.HasValue ?
                new ObjectParameter("OtData", otData) :
                new ObjectParameter("OtData", typeof(System.DateTime));
    
            var doDataParameter = doData.HasValue ?
                new ObjectParameter("DoData", doData) :
                new ObjectParameter("DoData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZaboliavaneNovorodeni_old_Result>("ZaboliavaneNovorodeni_old", otDataParameter, doDataParameter);
        }
    
        public virtual ObjectResult<ZvenoServices_Result> ZvenoServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZvenoServices_Result>("ZvenoServices");
        }
    }
}
